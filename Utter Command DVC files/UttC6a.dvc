MENU "Global Commands" {
 
############################## Copyright #################################################
#        This file is part of Redstart Systems' Utter Command Speech Interface			 #
#        for NaturallySpeaking Professional. Utter Command uses Human-Machine 			 #
#	     Grammar. 						     				    						 #
#        Go to www.redstartsystems.com for more information about Utter command 	     #
#	     and Human-Machine Grammar.	     												 #
#          © Copyright Redstart Systems 2005-2008. All rights reserved.				     #
############################## Copyright #################################################
 
	STATE "Global Commands" GLOBAL {
################## Sec. 6: Key
#6a Single Keys
#6b Letters and Several characters in a row
#6c 1-4 Letters Enter (for menus)
#6d Numbers
 
#below in 6b except 6h
#6e Single Keys several times in a row
#6f Basic combinations 
#6g Key combinations several times in a row
#6h Double punctuation -- 6a 
#6i Touch Escape 1-3 combinations
#6j Key 1-3 Key combinations
#6k 1-3 AlphChar0-9 menu combinations (up, down enter)
#6l 1-3 AlphChar0-9 double combinations
#6m 1-3 AlphChar0-9 including Enter, Close, Repeat 
#6n Double and special combinations
#6o Function 1-12, 1-3 combinations
#6p Go Commands -- 5b
#6q Control Down Up Combinations (file management)
#6r Forms combinations
 
#below in 5a
#6s 2-4 Non-alphabet Keys, Another, Insert, Paste, Undo, including repeat
#6t 1-10 key combinations
#6u 1-10 Key Combinations Repeat
#6v 1-10 Key Combinations Wait
#6w 1-10 plus 1-3 
#6x KeyALPaste plus Function 1-12
#6y 1-10 plus Function 1-12
#6z 1-10 Keys plus Alph0-9
#6aa 1-10 Keys plus 2 Alph0-9
#6ab Key and 1-10 Keys plus Cap Alph
 
#6ac Key and Number Short Combinations
##################
		
#6a. Single Keys
		COMMAND "<BackspaceCloseEnterSpacePrintScreenPageDownPageUp>" {
			SCRIPT {
				IF _arg1 = "Close" XOR _arg1 = "Escape" THEN  _arg1 = "Esc"
				if _arg1 = "Print Screen" then _arg1 = "Prtsc" 
				if _arg1 = "Page Up" then _arg1 = "PgUp"
				if _arg1 = "Page Down" then _arg1 = "PgDn"
				SendKeys "{" + _arg1 + "}"
			}
		}
		LIST "BackspaceCloseEnterSpacePrintScreenPageDownPageUp" {
			"Backspace"  "Enter"  "Space"
			"Close"  "Escape"
			"Print Screen"
			"Page Down"  "Page Up"
		}
		COMMAND "<KeysCharEscCapsLockPrintScreenScrollLockPauseNumLockDblPuncShort> Short" {
			SCRIPT {
				IF _arg1 = "Pipe" THEN  _arg1 = "|"				
				IF _arg1 = "Ampersand" THEN  _arg1 = "&"
				IF _arg1 = "Apostrophe" THEN  _arg1 = "'"
				IF _arg1 = "Exclamation" THEN  _arg1 = "!"										
				IF _arg1 = "Dollar" THEN  _arg1 = "$"										
				IF _arg1 = "Number" THEN  _arg1 = "#"										
				IF _arg1 = "Question" THEN  _arg1 = "?"										
				IF _arg1 = "Single" THEN  _arg1 = "'"										
				IF _arg1 = "Plus" THEN  _arg1 = "+"
				IF _arg1 = "Minus" XOR _arg1 = "Hyphen" THEN  _arg1 = "-"
				IF _arg1 = "Equals" THEN  _arg1 = "="
				IF _arg1 = "Percent" THEN _arg1 = "%"												
				IF _arg1 = "Divided" THEN _arg1 = "/"								
				IF _arg1 = "Star" XOR _arg1 = "Times" THEN  _arg1 = "*"
				IF _arg1 = "At Sign" THEN  _arg1 = "@"				
				IF _arg1 = "Open Angle" XOR _arg1 = "Less" THEN _arg1 = "<"
				IF _arg1 = "Close Angle" XOR _arg1 = "Greater" THEN _arg1 = ">"
				IF _arg1 = "Grave" THEN _arg1 = "`"													
				if _arg1 = "Escape" then _arg1 = "Esc"
				if _arg1 = "Print Screen" then _arg1 = "Prtsc"
				if _arg1 = "Page Up" then _arg1 = "PgUp"
				if _arg1 = "Page Down" then _arg1 = "PgDn"
				if _arg1 = "Insert" then _arg1 = "Ins"
				if _arg1 = "Delete" then _arg1 = "Del"
				SendKeys "{" + _arg1 + "}"
			}
		}
		LIST "KeysCharEscCapsLockPrintScreenScrollLockPauseNumLockDblPuncShort" {
#			"Down"  "Up"  "Left"  "Right"  "Home"  "End"
# 			"Page Up"  "Page Down"
#			"Delete"  "Backspace"  "Space"  "Enter"  "Tab"
#			"Escape"
# also trimmed two word non-ambiguous and unnecessary symbols, added Hyphen
			"CapsLock"  "ScrollLock"  "NumLock"
			"Print Screen"
			"Insert"
			"Pause"
            "At Sign"  "#"   "%"  "^"  "Ampersand"  "("  ")"
			"~"  "Minus"  "Hyphen" "_"  "Equals"  
			"Plus"  "Pipe"  "Grave" "["  "{"
			"]"  "}"  ";"  ":"  "\""  "," "."			  
			"Apostrophe"  "Exclamation"  "Dollar"  "Number"  "Question"  "Single"  "Times"  "Star"  "Percent"  "Divided"
			"Greater"  "Less"  "Open Angle"  "Close Angle"
		}
		COMMAND "<OpenCloseAngleGreaterLessThanGraveSign>" {
			SCRIPT {
				IF _arg1 = "Open Angle" XOR _arg1 = "Less Than" THEN SendKeys "<"
				IF _arg1 = "Close Angle" XOR _arg1 = "Greater Than" THEN SendKeys ">"
				IF _arg1 = "Grave Sign" THEN SendKeys "`"
				IF _arg1 = "Divided By" XOR _arg1 = "Divided By Sign" THEN SendKeys "/"
				IF _arg1 = "Single Quote" THEN SendKeys "'"
			}
		}
 		LIST "OpenCloseAngleGreaterLessThanGraveSign" {
			"Open Angle"   "Close Angle"  "Greater Than"  "Less Than" 
			"Grave Sign"  "Divided By"  "Divided By Sign"
			"Single Quote" "Open Single"  "Close Single"
		}
		COMMAND "Shift Short" {
			SCRIPT {
				SendKeys "{Shift}"
			}
		}
		COMMAND "Control Short" {
			SCRIPT {
				SendKeys "{Ctrl}"
			}
		}
		COMMAND "Alternate Short" {
			SCRIPT {
				SendKeys "{Alt}"
			}
		}
		COMMAND "Drop Down" {
			SCRIPT {
				SendKeys "{Alt+Down}"
			}
		}
		COMMAND "<Win> Key Short" {
			SCRIPT {
				' HoldAKey at 51
				DllCall "UttC.dll",51, _arg1
				' ReleaseAKey at 69
				DllCall "UttC.dll",69, _arg1
			}
		}
		COMMAND "<Win> Key Hold" {
			SCRIPT {
				' HoldAKey at 51
				DllCall "UttC.dll",51, _arg1
				TTSPlayString "Win Key Hold"
				wait 50
			}
		}
		COMMAND "<Win> Key Release" {
			SCRIPT {
				' ReleaseAKey at 69
				DllCall "UttC.dll",69, _arg1
				TTSPlayString "Win Key Release"
				wait 50
			}
		}
		LIST "Win" {
			"Win"
		}
		COMMAND "<AltUnderCtrlSh> Hold"{
			SCRIPT {
				' HoldAKey at 51
				DllCall "UttC.dll",51, _arg1
				TTSPlayString _arg1
				TTSPlayString "Hold"
				wait 50
				}
		}
		COMMAND "<AltUnderCtrlSh> Release"{
			SCRIPT {
				' ReleaseAKey at 69
				DllCall "UttC.dll",69, _arg1
				TTSPlayString "" + _arg1 + "Release"
				wait 50
				}
		}
		LIST "AltUnderCtrlSh" {
			"Shift"  "Control"  "Alternate"  "Under"
		}
		COMMAND "<All> Release"{
			SCRIPT {
				' ReleaseAKey at 69
				DllCall "UttC.dll",69, _arg1
				' Touch at 92
				DllCall "UttC.dll", 92, "Touch Release"
				' ReleaseAKey at 69
				DllCall "UttC.dll",69, _arg1
				TTSPlayString "All Release"
				wait 50
				}
		}
		LIST "All" {
			"All"
		}
		COMMAND "Function <1-12>" {
			SCRIPT {
				SendKeys "{F"+ _arg1 +"}"
			}
		}
		COMMAND "Function <1-12> Short" {
			SCRIPT {
				SendKeys "{F"+ _arg1 +"}"
			}
		}
 		LIST "1-12" {
			"1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10"
			"11" "12"
		}
		COMMAND "<NumPad> <NumPadKey,0-9>" {
			SCRIPT {
				if _arg2 = "Point" XOR _arg2 = "Dot" THEN SendSystemKeys"{NumKey.}"
				if _arg2 = "Slash" XOR _arg2 = "Divide" THEN SendSystemKeys"{NumKey/}"
				if _arg2 = "Star" XOR _arg2 = "Times" THEN SendSystemKeys "{NumKey*}"
				if _arg2 = "Minus" THEN SendSystemKeys"{NumKey-}"
				if _arg2 = "Plus" THEN SendSystemKeys"{NumKey+}"
				if _arg2 = "Enter" THEN SendSystemKeys"{NumKeyEnter}"
				if _arg2 = "0" XOR _arg2 = "1" XOR _arg2 = "2" XOR _arg2 = "3" XOR _arg2 = "4" XOR _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" XOR _arg2 = "8" XOR _arg2 = "9" XOR _arg2 = "0" THEN
				SendKeys"{NumKey" + _arg2 + "}"
				END IF
			}
		}
		LIST "NumPad" {
			"NumPad"
			"Num Pad"
		}
		LIST "NumPadKey,0-9" {
			"Point"  "Slash"  "Divided by"  "Star"  "Times"  
			"Minus"  "Minus Sign"  "Plus"  "Plus Sign"  "Enter"
			"Zero"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10"
		}
#6b. Letters and Several characters in a row
 
		COMMAND "<CapSpaceCapCapsLetterTouchLTouchTwiceL> <Alph>" {
			SCRIPT {
				IF _arg1 = "Touch Letter" THEN ButtonClick
				IF _arg1 = "Touch Twice Letter" THEN ButtonClick 1, 2
				
				IF _arg1 = "Letter" XOR _arg1 = "Cap" XOR _arg1 = "Caps" XOR _arg1 = "Touch Letter" XOR _arg1 = "Touch Twice Letter" THEN 
				SendKeys ""
				ELSE
				IF _arg1 = "Space" XOR _arg1 = "Spaces" XOR _arg1 = "Space Cap" XOR _arg1 = "Space Caps" THEN 
				SendKeys "{Space}"
				ELSE
				SendKeys MID$(_arg1,0,1)
				END IF
				END IF
				IF _arg1 = "Space Cap" XOR _arg1 = "Space Caps" XOR _arg1 = "Cap" XOR _arg1 = "Caps" THEN 
				SendKeys "{Shift+"+MID$(_arg2,0,1)+"}"
				ELSE
				SendKeys MID$(_arg2,0,1)
				END IF
			}
		}
		COMMAND "Letter Space" {
			SCRIPT {
				SendKeys " "
			}
		}
		COMMAND "<CapSpaceCapCapsLetterTouchLTouchTwiceL> <AlphSpHyphUndPerAp> <AlphSpHyphUndPerAp>" {
			SCRIPT {
				IF _arg1 = "Touch Letter" THEN ButtonClick
				IF _arg1 = "Touch Twice Letter" THEN ButtonClick 1, 2
				
				
				IF _arg2 = "Apostrophe" THEN  _arg2 = "'"
				IF _arg3 = "Apostrophe" THEN  _arg3 = "'"
				IF _arg1 = "Letter" XOR _arg1 = "Cap" XOR _arg1 = "Caps" XOR _arg1 = "Touch Letter" XOR _arg1 = "Touch Twice Letter" THEN 
				SendKeys ""
				ELSE
				IF _arg1 = "Space" XOR _arg1 = "Spaces" XOR _arg1 = "Space Cap" XOR _arg1 = "Space Caps" THEN 
				SendKeys "{Space}"
				ELSE
				SendKeys MID$(_arg1,0,1)
				END IF
				END IF
				IF _arg2 = "Space" THEN 
				SendKeys "{Space}"
				ELSE
				IF _arg2 = "-" XOR _arg2 = "_" XOR _arg2 = "." XOR _arg2 = "," THEN 
				SendKeys "" + _arg2 + ""
				ELSE
				IF _arg1 = "Space Cap" XOR _arg1 = "Space Caps" XOR _arg1 = "Cap" XOR _arg1 = "Caps" THEN 
				SendKeys "{Shift+"+MID$(_arg2,0,1)+"}"
				ELSE
				SendKeys MID$(_arg2,0,1)
				END IF
				END IF
				END IF
				IF _arg3 = "Space" THEN
				SendKeys "{Space}"
				ELSE
				IF _arg3 = "-" XOR _arg3 = "_" XOR _arg3 = "." XOR _arg3 = "," THEN 
				SendKeys "" + _arg3 + ""
				ELSE
				IF _arg1 = "Caps" XOR _arg1 = "Space Caps" THEN 			
				SendKeys "{Shift+"+MID$(_arg3,0,1)+"}"
				ELSE
				SendKeys MID$(_arg3,0,1)
				END IF
				END IF
				END IF
			}
		}
		COMMAND "<CapSpaceCapCapsLetterTouchLTouchTwiceL> <AlphSpHyphUndPerAp> <AlphSpHyphUndPerAp> <AlphSpHyphUndPerAp>" {
			SCRIPT {
				IF _arg1 = "Touch Letter" THEN ButtonClick
				IF _arg1 = "Touch Twice Letter" THEN ButtonClick 1, 2
				IF _arg2 = "Apostrophe" THEN  _arg2 = "'"
				IF _arg3 = "Apostrophe" THEN  _arg3 = "'"
				IF _arg4 = "Apostrophe" THEN  _arg4 = "'"
				IF _arg1 = "Letter" XOR _arg1 = "Cap" XOR _arg1 = "Caps" XOR _arg1 = "Touch Letter" XOR _arg1 = "Touch Twice Letter" THEN 
				SendKeys ""
				ELSE
				IF _arg1 = "Space" XOR _arg1 = "Spaces" XOR _arg1 = "Space Cap" XOR _arg1 = "Space Caps" THEN 
				SendKeys "{Space}"
				ELSE
				SendKeys MID$(_arg1,0,1)
				END IF
				END IF
				IF _arg2 = "Space" THEN 
				SendKeys "{Space}"
				ELSE
				IF _arg2 = "-" XOR _arg2 = "_" XOR _arg2 = "." XOR _arg2 = "," THEN 
				SendKeys "" + _arg2 + ""
				ELSE
				IF _arg1 = "Space Cap" XOR _arg1 = "Space Caps" XOR _arg1 = "Cap" XOR _arg1 = "Caps" THEN 
				SendKeys "{Shift+"+MID$(_arg2,0,1)+"}"
				ELSE
				SendKeys MID$(_arg2,0,1)
				END IF
				END IF
				END IF
				IF _arg3 = "Space" THEN
				SendKeys "{Space}"
				ELSE
				IF _arg3 = "-" XOR _arg3 = "_" XOR _arg3 = "." XOR _arg3 = "," THEN 
				SendKeys "" + _arg3 + ""
				ELSE
				IF _arg1 = "Caps" XOR _arg1 = "Space Caps" THEN 
				SendKeys "{Shift+"+MID$(_arg3,0,1)+"}"
				ELSE
				SendKeys MID$(_arg3,0,1)
				END IF
				END IF
				END IF
				IF _arg4 = "Space" THEN
				SendKeys "{Space}"
				ELSE
				IF _arg4 = "-" XOR _arg4 = "_" XOR _arg4 = "." XOR _arg4 = "," THEN 
				SendKeys "" + _arg4 + ""
				ELSE
				IF _arg1 = "Caps" XOR _arg1 = "Space Caps" THEN 
				SendKeys "{Shift+"+MID$(_arg4,0,1)+"}"
				ELSE
				SendKeys MID$(_arg4,0,1)
				END IF
				END IF
				END IF
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "CapSpaceCapCapsLetterTouchLTouchTwiceL" {
			"Letter" "Cap"  "Space" "Space Cap"  "Caps"  "Space Caps"
			"Touch Letter"  "Touch Twice Letter"
		}
		LIST "AlphSpHyphUndPerAp" {
			"Space"
			"_"  "-"  "." "Apostrophe"
#			"a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
#			"n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
			"alpha"  "bravo"  "charlie"  "delta"  "echo"  "foxtrot"  "golf"  "hotel"  "india"  "juliett"  "kilo"  "lima"  "mike"  "november"  "oscar"  "papa"  "quebec"  "romeo"  "sierra"  "tango"  "uniform"  "victor"  "whiskey"  "xray"  "yankee"  "zulu"  
		}
 
#6c. 1-4 Letters Enter (for menus)
 
		COMMAND "Letter <Alph> Enter" {
			SCRIPT {
				
				SendKeys MID$(_arg1,0,1)
				Wait 200
				SendKeys "{Enter}"
			}
		}
		COMMAND "Letter <Alph> <Alph> Enter" {
			SCRIPT {
				
				SendKeys MID$(_arg1,0,1)
				SendKeys MID$(_arg2,0,1)
				Wait 200
				SendKeys "{Enter}"
			}
		}
		COMMAND "Letter <Alph> <Alph> <Alph> Enter" {
			SCRIPT {
				
				SendKeys MID$(_arg1,0,1)
				SendKeys MID$(_arg2,0,1)
				SendKeys MID$(_arg3,0,1)
				Wait 200
				SendKeys "{Enter}"
			}
		}
		LIST "Alph" {
#			"a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
#			"n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
			"alpha"  "bravo"  "charlie"  "delta"  "echo"  "foxtrot"  "golf"  "hotel"  "india"  "juliett"  "kilo"  "lima"  "mike"  "november"  "oscar"  "papa"  "quebec"  "romeo"  "sierra"  "tango"  "uniform"  "victor"  "whiskey"  "xray"  "yankee"  "zulu"  
		}
#6d. Numbers
		COMMAND "<NumberSpaceNSpacesNTouchNTTwiceN> <0-100>" {
			SCRIPT {				
				IF _arg1 = "Touch Number" THEN ButtonClick
				IF _arg1 = "Touch Twice Number" THEN ButtonClick 1, 2
				IF _arg1 = "Space Number" XOR _arg1 = "Space" XOR _arg1 = "Spaces Numbers" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces Numbers" THEN SendKeys "{Space}"
			}
		}
		LIST "0-100" {
			"0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
			 "10" "11" "12" "13" "14" "15" "16" "17" "18" "19"
			 "20" "21" "22" "23" "24" "25" "26" "27" "28" "29"
			 "30" "31" "32" "33" "34" "35" "36" "37" "38" "39"
			 "40" "41" "42" "43" "44" "45" "46" "47" "48" "49"
			 "50" "51" "52" "53" "54" "55" "56" "57" "58" "59"
			 "60" "61" "62" "63" "64" "65" "66" "67" "68" "69"
			 "70" "71" "72" "73" "74" "75" "76" "77" "78" "79"
			 "80" "81" "82" "83" "84" "85" "86" "87" "88" "89"
			 "90" "91" "92" "93" "94" "95" "96" "97" "98" "99"  "100"
		}
		COMMAND "<NumberSpaceNSpacesNTouchNTTwiceN> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom>" {
			SCRIPT {
				IF _arg1 = "Touch Number" THEN ButtonClick
				IF _arg1 = "Touch Twice Number" THEN ButtonClick 1, 2
				IF _arg1 = "Space Number" XOR _arg1 = "Space" XOR _arg1 = "Spaces Numbers" THEN SendKeys "{Space}"
				if _arg2 = "Space" then _arg2 = "{Space}"
				if _arg3 = "Space" then _arg3 = "{Space}"
				SendKeys "" + _arg2 + "" + _arg3 + ""
				IF _arg1 = "Spaces Numbers" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<NumberSpaceNSpacesNTouchNTTwiceN> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom>" {
			SCRIPT {
				IF _arg1 = "Touch Number" THEN ButtonClick
				IF _arg1 = "Touch Twice Number" THEN ButtonClick 1, 2
				IF _arg1 = "Space Number" XOR _arg1 = "Space" XOR _arg1 = "Spaces Numbers" THEN SendKeys "{Space}"
				if _arg2 = "Space" then _arg2 = "{Space}"
				if _arg3 = "Space" then _arg3 = "{Space}"
				if _arg4 = "Space" then _arg4 = "{Space}"
				SendKeys "" + _arg2 + "" + _arg3 + "" + _arg4 + ""
				IF _arg1 = "Spaces Numbers" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<NumberSpaceNSpacesNTouchNTTwiceN> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom>" {
			SCRIPT {
				IF _arg1 = "Touch Number" THEN ButtonClick
				IF _arg1 = "Touch Twice Number" THEN ButtonClick 1, 2
				IF _arg1 = "Space Number" XOR _arg1 = "Space" XOR _arg1 = "Spaces Number" THEN SendKeys "{Space}"
				if _arg2 = "Space" then _arg2 = "{Space}"
				if _arg3 = "Space" then _arg3 = "{Space}"
				if _arg4 = "Space" then _arg4 = "{Space}"
				if _arg5 = "Space" then _arg5 = "{Space}"
				SendKeys "" + _arg2 + "" + _arg3 + "" + _arg4 + "" + _arg5 + ""
				IF _arg1 = "Spaces Number" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<NumberSpaceNSpacesNTouchNTTwiceN> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom>" {
			SCRIPT {
				IF _arg1 = "Touch Number" THEN ButtonClick
				IF _arg1 = "Touch Twice Number" THEN ButtonClick 1, 2
				IF _arg1 = "Space Number" XOR _arg1 = "Space" XOR _arg1 = "Spaces Number" THEN SendKeys "{Space}"
				if _arg2 = "Space" then _arg2 = "{Space}"
				if _arg3 = "Space" then _arg3 = "{Space}"
				if _arg4 = "Space" then _arg4 = "{Space}"
				if _arg5 = "Space" then _arg5 = "{Space}"
				if _arg6 = "Space" then _arg6 = "{Space}"
				SendKeys "" + _arg2 + "" + _arg3 + "" + _arg4 + "" + _arg5 + "" + _arg6 + ""
				IF _arg1 = "Spaces Number" THEN SendKeys "{Space}"
			}
		}
		LIST "NumberSpaceNSpacesNTouchNTTwiceN" {
			"Number"  "Space" "Space Number"  "Spaces Number"
			"Touch Number"  "Touch Twice Number"
		}
		LIST "0-9SpaceHyphPerCom" {
			","  "."  "-"  "Space"
			"0"   "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"   
		}
 
#6h. Double punctuation
		COMMAND "<1-5> <CharactersPlural>" {
			SCRIPT {
				IF _arg2 = "Ampersands" THEN  _arg2 = "&"							
				IF _arg2 = "Apostrophes" THEN  _arg2 = "'"							
				IF _arg2 = "Pipes" THEN  _arg2 = "|"							
				IF _arg2 = "Graves" THEN  _arg2 = "`"							
				IF _arg2 = "Exclamations" XOR _arg2 = "Exclamation Marks" THEN  _arg2 = "!"										
				IF _arg2 = "Dollar Signs" THEN  _arg2 = "$"										
				IF _arg2 = "Numbers" XOR _arg2 = "Number Signs" THEN  _arg2 = "#"										
				IF _arg2 = "Question Marks" THEN  _arg2 = "?"										
				IF _arg2 = "Single Quotes" THEN  _arg2 = "'"										
				IF _arg2 = "Pluses" XOR _arg2 = "Plus Signs" THEN  _arg2 = "+"
				IF _arg2 = "Equalses"  XOR _arg2 = "Equals Signs" XOR _arg2 = "Equal Signs" THEN  _arg2 = "="
				IF _arg2 = "Minuses" XOR _arg2 = "Minus Signs" THEN  _arg2 = "-"
				IF _arg2 = "Percents" XOR _arg2 = "Percent Signs" THEN _arg2 = "%"												
				IF _arg2 = "Divided Bys" THEN _arg2 = "/"								
				IF _arg2 = "Stars" XOR _arg2 = "Times Signs" THEN  _arg2 = "*"
				IF _arg2 = "Less Thans" THEN _arg2 = "<"
				IF _arg2 = "Greater Thans" THEN _arg2 = ">"
				IF _arg2 = "Grave Signs" THEN _arg2 = "`"													
				IF _arg2 = "At Signs" THEN  _arg2 = "@"
				IF _arg2 = "Carats" THEN _arg2 = "^"				
				IF _arg2 = "Tildes" THEN  _arg2 = "~"
				IF _arg2 = "Underscores" THEN  _arg2 = "_"
				IF _arg2 = "Hyphens" THEN  _arg2 = "-"
				IF _arg2 = "Back Slashes" THEN  _arg2 = "\"
				IF _arg2 = "Slashes" THEN  _arg2 = "/"
				IF _arg2 = "Colons" THEN  _arg2 = ":"
				IF _arg2 = "Semicolons" THEN  _arg2 = ";"
				IF _arg2 = "Commas" THEN  _arg2 = ","
				IF _arg2 = "Periods" XOR _arg2 = "Points" XOR _arg2 = "Dots" THEN  _arg2 = "."
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "" + _arg2 + ""
				loop& = loop& - 1
				wend
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "" + _arg2 + ""
				loop& = loop& - 1
				wend
				SendKeys "{Left " + _arg1 + "}"
			}
		}
		COMMAND "<1-5> <CharactersPlural> Spaces" {
			SCRIPT {
				IF _arg2 = "Ampersands" THEN  _arg2 = "&"							
				IF _arg2 = "Apostrophes" THEN  _arg2 = "'"							
				IF _arg2 = "Pipes" THEN  _arg2 = "|"							
				IF _arg2 = "Graves" THEN  _arg2 = "`"							
				IF _arg2 = "Exclamations" XOR _arg2 = "Exclamation Marks" THEN  _arg2 = "!"										
				IF _arg2 = "Dollar Signs" THEN  _arg2 = "$"										
				IF _arg2 = "Number Signs" THEN  _arg2 = "#"										
				IF _arg2 = "Question Marks" THEN  _arg2 = "?"										
				IF _arg2 = "Single Quotes" THEN  _arg2 = "'"										
				IF _arg2 = "Pluses" XOR _arg2 = "Plus Signs" THEN  _arg2 = "+"
				IF _arg2 = "Equalses"  XOR _arg2 = "Equals Signs" XOR _arg2 = "Equal Signs" THEN  _arg2 = "="
				IF _arg2 = "Minuses" XOR _arg2 = "Minus Signs" THEN  _arg2 = "-"
				IF _arg2 = "Percents" XOR _arg2 = "Percent Signs" THEN _arg2 = "%"												
				IF _arg2 = "Divided Bys" THEN _arg2 = "/"								
				IF _arg2 = "Stars" XOR _arg2 = "Times Signs" THEN  _arg2 = "*"
				IF _arg2 = "Less Thans" THEN _arg2 = "<"
				IF _arg2 = "Greater Thans" THEN _arg2 = ">"
				IF _arg2 = "Grave Signs" THEN _arg2 = "`"													
				IF _arg2 = "At Signs" THEN  _arg2 = "@"
				IF _arg2 = "Carats" THEN _arg2 = "^"				
				IF _arg2 = "Tildes" THEN  _arg2 = "~"
				IF _arg2 = "Underscores" THEN  _arg2 = "_"
				IF _arg2 = "Hyphens" THEN  _arg2 = "-"
				IF _arg2 = "Back Slashes" THEN  _arg2 = "\"
				IF _arg2 = "Slashes" THEN  _arg2 = "/"
				IF _arg2 = "Colons" THEN  _arg2 = ":"
				IF _arg2 = "Semicolons" THEN  _arg2 = ";"
				IF _arg2 = "Commas" THEN  _arg2 = ","
				IF _arg2 = "Periods" XOR _arg2 = "Points" XOR _arg2 = "Dots" THEN  _arg2 = "."
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "" + _arg2 + ""
				loop& = loop& - 1
				wend
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "" + _arg2 + ""
				loop& = loop& - 1
				wend
				SendKeys "{Left " + _arg1 + "}"
				SendKeys "{Space 2}{Left}"
			}
		}
		COMMAND "<LineSpaceSpacesLSLS> <1-5> <CharactersPlural>" {
			SCRIPT {
				IF _arg3 = "Ampersands" THEN  _arg3 = "&"							
				IF _arg3 = "Apostrophes" THEN  _arg3 = "'"							
				IF _arg3 = "Pipes" THEN  _arg3 = "|"							
				IF _arg3 = "Graves" THEN  _arg3 = "`"							
				IF _arg3 = "Exclamations" XOR _arg3 = "Exclamation Marks" THEN  _arg3 = "!"										
				IF _arg3 = "Dollar Signs" THEN  _arg3 = "$"										
				IF _arg3 = "Number Signs" THEN  _arg3 = "#"										
				IF _arg3 = "Question Marks" THEN  _arg3 = "?"										
				IF _arg3 = "Single Quotes" THEN  _arg3 = "'"										
				IF _arg3 = "Pluses" XOR _arg3 = "Plus Signs" THEN  _arg3 = "+"
				IF _arg3 = "Equalses" XOR _arg3 = "Equals" XOR _arg3 = "Equals Signs" XOR _arg3 = "Equal Signs" THEN  _arg3 = "="
				IF _arg3 = "Minuses" XOR _arg3 = "Minus Signs" THEN  _arg3 = "-"
				IF _arg3 = "Percents" XOR _arg3 = "Percent Signs" THEN _arg3 = "%"												
				IF _arg3 = "Divided Bys" THEN _arg3 = "/"								
				IF _arg3 = "Stars" XOR _arg3 = "Times Signs" THEN  _arg3 = "*"
				IF _arg3 = "Less Thans" THEN _arg3 = "<"
				IF _arg3 = "Greater Thans" THEN _arg3 = ">"
				IF _arg3 = "Grave Signs" THEN _arg3 = "`"													
				IF _arg3 = "At Signs" THEN  _arg3 = "@"
				IF _arg3 = "Carats" THEN _arg3 = "^"				
				IF _arg3 = "Tildes" THEN  _arg3 = "~"
				IF _arg3 = "Underscores" THEN  _arg3 = "_"
				IF _arg3 = "Hyphens" THEN  _arg3 = "-"
				IF _arg3 = "Back Slashes" THEN  _arg3 = "\"
				IF _arg3 = "Slashes" THEN  _arg3 = "/"
				IF _arg3 = "Colons" THEN  _arg3 = ":"
				IF _arg3 = "Semicolons" THEN  _arg3 = ";"
				IF _arg3 = "Commas" THEN  _arg3 = ","
				IF _arg3 = "Periods" XOR _arg3 = "Points" XOR _arg3 = "Dots" THEN  _arg3 = "."
				IF _arg1 = "Line Space" XOR _arg1 = "Line Spaces" THEN 
				SendKeys "{Home}{Space}"
				END IF
				IF _arg1 = "Line" THEN SendKeys "{Home}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"				
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "" + _arg3 + ""
				loop& = loop& - 1
				wend
				IF _arg1 = "Line Space" XOR _arg1 = "Line Spaces" XOR _arg1 = "Line" THEN SendKeys "{End}"
				IF _arg1 = "Line Spaces" XOR _arg1 = "Spaces" THEN SendKeys "{Space}{Left}"
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "" + _arg3 + ""
				loop& = loop& - 1
				wend
				SendKeys "{Left " + _arg2 + "}"
		
			}
		}
		COMMAND "<LineSpaceSpacesLSLS> <1-5> <CharactersPlural> Spaces" {
			SCRIPT {
				IF _arg3 = "Ampersands" THEN  _arg3 = "&"							
				IF _arg3 = "Apostrophes" THEN  _arg3 = "'"							
				IF _arg3 = "Pipes" THEN  _arg3 = "|"							
				IF _arg3 = "Graves" THEN  _arg3 = "`"							
				IF _arg3 = "Exclamations" XOR _arg3 = "Exclamation Marks" THEN  _arg3 = "!"										
				IF _arg3 = "Dollar Signs" THEN  _arg3 = "$"										
				IF _arg3 = "Number Signs" THEN  _arg3 = "#"										
				IF _arg3 = "Question Marks" THEN  _arg3 = "?"										
				IF _arg3 = "Single Quotes" THEN  _arg3 = "'"										
				IF _arg3 = "Pluses" XOR _arg3 = "Plus Signs" THEN  _arg3 = "+"
				IF _arg3 = "Equalses" XOR _arg3 = "Equals" XOR _arg3 = "Equals Signs" XOR _arg3 = "Equal Signs" THEN  _arg3 = "="
				IF _arg3 = "Minuses" XOR _arg3 = "Minus Signs" THEN  _arg3 = "-"
				IF _arg3 = "Percents" XOR _arg3 = "Percent Signs" THEN _arg3 = "%"												
				IF _arg3 = "Divided Bys" THEN _arg3 = "/"								
				IF _arg3 = "Stars" XOR _arg3 = "Times Signs" THEN  _arg3 = "*"
				IF _arg3 = "Less Thans" THEN _arg3 = "<"
				IF _arg3 = "Greater Thans" THEN _arg3 = ">"
				IF _arg3 = "Grave Signs" THEN _arg3 = "`"													
				IF _arg3 = "At Signs" THEN  _arg3 = "@"
				IF _arg3 = "Carats" THEN _arg3 = "^"				
				IF _arg3 = "Tildes" THEN  _arg3 = "~"
				IF _arg3 = "Underscores" THEN  _arg3 = "_"
				IF _arg3 = "Hyphens" THEN  _arg3 = "-"
				IF _arg3 = "Back Slashes" THEN  _arg3 = "\"
				IF _arg3 = "Slashes" THEN  _arg3 = "/"
				IF _arg3 = "Colons" THEN  _arg3 = ":"
				IF _arg3 = "Semicolons" THEN  _arg3 = ";"
				IF _arg3 = "Commas" THEN  _arg3 = ","
				IF _arg3 = "Periods" XOR _arg3 = "Points" XOR _arg3 = "Dots" THEN  _arg3 = "."
				IF _arg1 = "Line Space" XOR _arg1 = "Line Spaces" THEN 
				SendKeys "{Home}{Space}"
				END IF
				IF _arg1 = "Line" THEN SendKeys "{Home}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"				
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "" + _arg3 + ""
				loop& = loop& - 1
				wend
				SendKeys "{Space}"
				IF _arg1 = "Line Space" XOR _arg1 = "Line Spaces" XOR _arg1 = "Line" THEN SendKeys "{End}"
				IF _arg1 = "Line Spaces" XOR _arg1 = "Spaces" THEN SendKeys "{Space}{Left}"
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "" + _arg3 + ""
				loop& = loop& - 1
				wend
				SendKeys "{Left " + _arg2 + "}"
				SendKeys "{Space}{Left}"
			}
		}
		LIST "CharactersPlural" {
            "At Signs" "Carats"  "Ampersands"  "Apostrophes"  
			"Tildes"  "Hyphens"  "Minuses"  "Minus Signs" "Underscores"  "Equalses" "Equal Signs"  "Equals Signs"
			"Pluses"  "Plus Signs"  "Back Slashes"  "Pipes"  "Graves" "Grave Signs" "Semicolons"  
			"Colons"  "Single Quotes"  "Commas"  "Periods"  "Dots"  "Points"
			"Slashes" 
			"Exclamations"  "Exclamation Marks"  "Dollar Signs"  
			"Number Signs" "Question Marks" 
			"Times Signs" "Stars"  "Percents"  "Percent Signs" "Divided Bys" 
			"Greater Thans"  "Less Thans"  
		}
		LIST "LineSpaceSpacesLSLS" {
			"Line" "Space" "Spaces" "Line Space"  "Line Spaces"
		}	 	
		COMMAND "<QuotesSingleQParensBracesBracketsAnglesStarsSpaces> Short" {
			SCRIPT {
				if _arg1 = "Single Quotes" then SendKeys "'"
				if _arg1 = "Angles" then SendKeys "<>"
				if _arg1 = "Angle Brackets" then SendKeys "<>"
				if _arg1 = "Quotes" then SendKeys """"""
				if _arg1 = "Parens" then SendKeys "()"
				if _arg1 = "Stars" then SendKeys "**"
				if _arg1 = "Braces" then SendKeys "{}"
				if _arg1 = "Brackets" then SendKeys "[]"
				if _arg1 = "Single Quotes" then SendKeys "'"
				if _arg1 = "Spaces" then SendKeys "{Space}"
				SendKeys "{Left}"
			}
		}
		COMMAND "<1-5> <QuotesSingleQParensBracesBracketsAnglesStarsSpaces>" {
			SCRIPT {
				loop& = Val(_arg1)
				while ( loop& )
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Angles" then SendKeys "<>"
				if _arg2 = "Angle Brackets" then SendKeys "<>"
				if _arg2 = "Quotes" then SendKeys """"""
				if _arg2 = "Parens" then SendKeys "()"
				if _arg2 = "Stars" then SendKeys "**"
				if _arg2 = "Braces" then SendKeys "{}"
				if _arg2 = "Brackets" then SendKeys "[]"
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Spaces" then SendKeys "{Space}"
				SendKeys "{Left}"
				loop& = loop& - 1
				wend
			}
		}
		COMMAND "<LineSpaceL> <QuotesSingleQParensBracesBracketsAnglesStarsSpaces>" {
			SCRIPT {
				SendKeys "{Home}"
				IF _arg1 = "Space Line" THEN SendKeys "{Space}"
				if _arg2 = "Angles" then SendKeys "<"
				if _arg2 = "Angle Brackets" then SendKeys "<"
				if _arg2 = "Quotes" then SendKeys """"
				if _arg2 = "Parens" then SendKeys "("
				if _arg2 = "Stars" then SendKeys "*"
				if _arg2 = "Braces" then SendKeys "{"
				if _arg2 = "Brackets" then SendKeys "["
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Spaces" then SendKeys "{Space}"
				SendKeys "{End}"
				if _arg2 = "Angles" then SendKeys ">"
				if _arg2 = "Angle Brackets" then SendKeys ">"
				if _arg2 = "Quotes" then SendKeys """"
				if _arg2 = "Parens" then SendKeys ")"
				if _arg2 = "Stars" then SendKeys "*"
				if _arg2 = "Braces" then SendKeys "}"
				if _arg2 = "Brackets" then SendKeys "]"
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Spaces" then SendKeys "{Space}"
				SendKeys "{Left}"
			}
		}
		COMMAND "<LineSpaceL> <QuotesSingleQParensBracesBracketsAnglesStarsSpaces> <SpaceSpacesCommaRight>" {
			SCRIPT {
				SendKeys "{Home}"
				IF _arg1 = "Space Line" THEN SendKeys "{Space}"
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Angles" then SendKeys "<"
				if _arg2 = "Angle Brackets" then SendKeys "<"
				if _arg2 = "Quotes" then SendKeys """"
				if _arg2 = "Parens" then SendKeys "("
				if _arg2 = "Stars" then SendKeys "*"
				if _arg2 = "Braces" then SendKeys "{"
				if _arg2 = "Brackets" then SendKeys "["
				if _arg2 = "Spaces" then SendKeys "{Space}"			
				IF _arg3 = "Spaces" THEN SendKeys "{Space}"
				SendKeys "{End}"
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Angles" then SendKeys ">"
				if _arg2 = "Angle Brackets" then SendKeys ">"
				if _arg2 = "Quotes" then SendKeys """"
				if _arg2 = "Parens" then SendKeys ")"
				if _arg2 = "Stars" then SendKeys "*"
				if _arg2 = "Braces" then SendKeys "}"
				if _arg2 = "Brackets" then SendKeys "]"
				if _arg2 = "Spaces" then SendKeys "{Space}"
				IF _arg3 = "Space" THEN SendKeys " "
				SendKeys "{Left}"
				IF _arg3 = "Spaces" THEN SendKeys "{Space}{Left}"
				IF _arg3 = "Comma" THEN SendKeys ",{Right} "
				IF _arg3 = "Right" THEN SendKeys "{Right}"
				IF _arg3 = "Space" THEN SendKeys "{Right 2}"
 
			}
		}
		LIST "SpaceSpacesCommaRight" {
			"Space"  "Spaces"  "Comma"  "Right"
		}
		COMMAND "<LineSpaceL> <1-5> <QuotesSingleQParensBracesBracketsAnglesStarsSpaces>" {
			SCRIPT {
				SendKeys "{Home}"
				IF _arg1 = "Space Line" THEN SendKeys "{Space}"
				loop& = Val(_arg2)
				while ( loop& )
				if _arg3 = "Single Quotes" then SendKeys "'"
				if _arg3 = "Angles" then SendKeys "<"
				if _arg3 = "Angle Brackets" then SendKeys "<"
				if _arg3 = "Quotes" then SendKeys """"
				if _arg3 = "Parens" then SendKeys "("
				if _arg3 = "Stars" then SendKeys "*"
				if _arg3 = "Braces" then SendKeys "{"
				if _arg3 = "Brackets" then SendKeys "["
				if _arg3 = "Spaces" then SendKeys "{Space}"
				loop& = loop& - 1
				wend
				SendKeys "{End}"
				loop& = Val(_arg2)
				while ( loop& )
				if _arg3 = "Single Quotes" then SendKeys "'"
				if _arg3 = "Angles" then SendKeys ">"
				if _arg3 = "Angle Brackets" then SendKeys ">"
				if _arg3 = "Quotes" then SendKeys """"
				if _arg3 = "Parens" then SendKeys ")"
				if _arg3 = "Stars" then SendKeys "*"
				if _arg3 = "Braces" then SendKeys "}"
				if _arg3 = "Brackets" then SendKeys "]"
				if _arg3 = "Spaces" then SendKeys "{Space}"
				loop& = loop& - 1
				wend
				SendKeys "{Left " + _arg2 + "}"
			}
		}
		COMMAND "<LineSpaceL> <1-5> <QuotesSingleQParensBracesBracketsAnglesStarsSpaces> <SpaceSpacesRight>" {
			SCRIPT {
				SendKeys "{Home}"
				IF _arg1 = "Space Line" THEN SendKeys "{Space}"
				loop& = Val(_arg2)
				while ( loop& )
				if _arg3 = "Single Quotes" then SendKeys "'"
				if _arg3 = "Angles" then SendKeys "<"
				if _arg3 = "Angle Brackets" then SendKeys "<"
				if _arg3 = "Quotes" then SendKeys """"
				if _arg3 = "Parens" then SendKeys "("
				if _arg3 = "Stars" then SendKeys "*"
				if _arg3 = "Braces" then SendKeys "{"
				if _arg3 = "Brackets" then SendKeys "["
				if _arg3 = "Spaces" then SendKeys "{Space}"				
				loop& = loop& - 1
				wend
				IF _arg4 = "Spaces" THEN SendKeys "{Space}"
				SendKeys "{End}"
				loop& = Val(_arg2)
				while ( loop& )
				if _arg3 = "Single Quotes" then SendKeys "'"
				if _arg3 = "Angles" then SendKeys ">"
				if _arg3 = "Angle Brackets" then SendKeys ">"
				if _arg3 = "Quotes" then SendKeys """"
				if _arg3 = "Parens" then SendKeys ")"
				if _arg3 = "Stars" then SendKeys "*"
				if _arg3 = "Braces" then SendKeys "}"
				if _arg3 = "Brackets" then SendKeys "]"
				if _arg3 = "Spaces" then SendKeys "{Space}"
				IF _arg4 = "Space" THEN SendKeys " "
				SendKeys "{Left}"
				loop& = loop& - 1
				wend
				SendKeys "{Left}"
				IF _arg4 = "Spaces" THEN SendKeys "{Space}{Left}"
				IF _arg4 = "Right" THEN SendKeys "{Right " + _arg2 + "}"
				IF _arg4 = "Space" THEN SendKeys "{Right}{Right " + _arg2 + "}"
			}
		}
		LIST "LineSpaceL" {
			"Line" "Space Line"
		}	 	
		LIST "SpaceSpacesRight" {
			"Space"  "Spaces"  "Right"
		}
		COMMAND "<SpaceSpaces> <1-5> <QuotesSingleQParensBracesBracketsAnglesStarsSpaces>" {
			SCRIPT {
				if _arg1 = "Spaces" THEN SendKeys "{Space 2}{Left}"
				if _arg1 = "Space" THEN SendKeys "{Space}"
				loop& = Val(_arg2)
				while ( loop& )
				if _arg3 = "Single Quotes" then SendKeys "'"
				if _arg3 = "Angles" then SendKeys "<>"
				if _arg3 = "Angle Brackets" then SendKeys "<>"
				if _arg3 = "Quotes" then SendKeys """"""
				if _arg3 = "Parens" then SendKeys "()"
				if _arg3 = "Stars" then SendKeys "**"
				if _arg3 = "Braces" then SendKeys "{}"
				if _arg3 = "Brackets" then SendKeys "[]"
				if _arg3 = "Spaces" then SendKeys "{Space}"
				SendKeys "{Left}"
				loop& = loop& - 1
				wend
			}
		}
		COMMAND "<SpaceSpaces> <QuotesSingleQParensBracesBracketsAnglesStarsSpaces>" {
			SCRIPT {
				if _arg1 = "Spaces" THEN SendKeys "{Space 2}{Left}"
				if _arg1 = "Space" THEN SendKeys "{Space}"
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Angles" then SendKeys "<>"
				if _arg2 = "Angle Brackets" then SendKeys "<>"
				if _arg2 = "Quotes" then SendKeys """"""
				if _arg2 = "Parens" then SendKeys "()"
				if _arg2 = "Stars" then SendKeys "**"
				if _arg2 = "Braces" then SendKeys "{}"
				if _arg2 = "Brackets" then SendKeys "[]"
				if _arg2 = "Spaces" then SendKeys "{Space}"
				SendKeys "{Left}"
			}
		}
		COMMAND "<1-5> <QuotesSingleQParensBracesBracketsAnglesStarsSpaces> <SpaceSpaces>" {
			SCRIPT {
				IF _arg3 = "Space" THEN SendKeys "{Space}{Left}"
				loop& = Val(_arg1)
				while ( loop& )
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Angles" then SendKeys "<>"
				if _arg2 = "Angle Brackets" then SendKeys "<>"
				if _arg2 = "Quotes" then SendKeys """"""
				if _arg2 = "Parens" then SendKeys "()"
				if _arg2 = "Stars" then SendKeys "**"
				if _arg2 = "Braces" then SendKeys "{}"
				if _arg2 = "Brackets" then SendKeys "[]"
				if _arg2 = "Single Quotes" then SendKeys "'"
				if _arg2 = "Spaces" then SendKeys "{Space}"
				SendKeys "{Left}"
				loop& = loop& - 1
				wend
				IF _arg3 = "Spaces" THEN SendKeys "{Space 2}{Left}"
			}
		}
		LIST "1-5" {
			"1"  "2" "3"  "4"  "5"
		}
		LIST "SpaceSpaces" {
			"Space"
			"Spaces"
		}
		COMMAND "<QuotesSingleQParensBracesBracketsAnglesStarsSpaces> Space" {
			SCRIPT {
				SendKeys "{Space}{Left}"
				if _arg1 = "Single Quotes" then SendKeys "'"
				if _arg1 = "Angles" then SendKeys "<>"
				if _arg1 = "Angle Brackets" then SendKeys "<>"
				if _arg1 = "Quotes" then SendKeys """"""
				if _arg1 = "Parens" then SendKeys "()"
				if _arg1 = "Stars" then SendKeys "**"
				if _arg1 = "Braces" then SendKeys "{}"
				if _arg1 = "Brackets" then SendKeys "[]"
				if _arg1 = "Spaces" then SendKeys "{Space}"
				SendKeys "{Left}"  
			}
		}
		LIST "QuotesSingleQParensBracesBracketsAnglesStarsSpaces" {
			"Quotes"  "Parens"  "Angles"  "Braces"  "Brackets"  "Angle Brackets"
			"Stars"  "Single Quotes"  "Spaces"
		}
		COMMAND "<ParensBracesBracketsAngles> Reverse" {
			SCRIPT {
				if _arg1 = "Angles" XOR _arg1 = "Angle Brackets" then SendKeys "><"
				if _arg1 = "Parens" then SendKeys ")("
				if _arg1 = "Braces" then SendKeys "}{"
				if _arg1 = "Brackets" then SendKeys "]["
			}
		}
		LIST "ParensBracesBracketsAngles" {
			"Parens"  "Braces"  "Brackets"
			"Angles"  "Angle Brackets"
		}
#6ac. Key and Number Short Combinations
		COMMAND "<0-9PtTbEnShTEAltENoUpD> <0-9PtTbEnShTEAltENoUpD> Short" {
			SCRIPT {
			    IF _arg1 = "Zero" THEN  _arg1 = "0"
				IF _arg2 = "Zero" THEN  _arg2 = "0"
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg1
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg2
			}
		}
		COMMAND "<0-9PtTbEnShTEAltETouchTTwice> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> Short" {
			SCRIPT {
			    IF _arg1 = "Zero" THEN  _arg1 = "0"
				IF _arg2 = "Zero" THEN  _arg2 = "0"
				IF _arg3 = "Zero" THEN  _arg3 = "0"
				IF _arg1 = "Touch" XOR _arg1 = "Touch Twice" THEN 
				IF _arg1 = "Touch" THEN ButtonClick
				IF _arg1 = "Touch Twice" THEN ButtonClick 1, 2
				ELSE
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg1
				END IF
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg2
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg3
			}
		}
		COMMAND "<0-9PtTbEnShTEAltETouchTTwice> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> Short" {
			SCRIPT {
			    IF _arg1 = "Zero" THEN  _arg1 = "0"
				IF _arg2 = "Zero" THEN  _arg2 = "0"
				IF _arg3 = "Zero" THEN  _arg3 = "0"
				IF _arg4 = "Zero" THEN  _arg4 = "0"
				IF _arg1 = "Touch" XOR _arg1 = "Touch Twice" THEN 
				IF _arg1 = "Touch" THEN ButtonClick
				IF _arg1 = "Touch Twice" THEN ButtonClick 1, 2
				ELSE
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg1
				END IF
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg2
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg3
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg4
			}
		}
		COMMAND "<0-9PtTbEnShTEAltETouchTTwice> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> Short" {
			SCRIPT {
			    IF _arg1 = "Zero" THEN  _arg1 = "0"
				IF _arg2 = "Zero" THEN  _arg2 = "0"
				IF _arg3 = "Zero" THEN  _arg3 = "0"
				IF _arg4 = "Zero" THEN  _arg4 = "0"
				IF _arg5 = "Zero" THEN  _arg5 = "0"
				IF _arg1 = "Touch" XOR _arg1 = "Touch Twice" THEN 
				IF _arg1 = "Touch" THEN ButtonClick
				IF _arg1 = "Touch Twice" THEN ButtonClick 1, 2
				ELSE
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg1
				END IF
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg2
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg3
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg4
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg5
			}
		}
		COMMAND "<0-9Point> <0-9Point> <0-9Point> <0-9Point> <0-9Point> <EnterTab> Short"{
			SCRIPT {
			    IF _arg1 = "Zero" THEN  _arg1 = "0"
				IF _arg2 = "Zero" THEN  _arg2 = "0"
				IF _arg3 = "Zero" THEN  _arg3 = "0"
				IF _arg4 = "Zero" THEN  _arg4 = "0"
				IF _arg5 = "Zero" THEN  _arg5 = "0"
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg1
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg2
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg3
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg4
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg5
				Wait 100
				IF _arg6 = "Tab" THEN SendKeys "{Tab}"
				IF _arg6 = "Enter" THEN SendKeys "{Enter}"
			}
		}
		LIST "0-9Point" {
			"Point" 
			"Zero"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
			} 
		LIST "EnterTab" {
			"Enter"  "Tab"
		}
		COMMAND "<0-9PtTbEnShTEAltETouchTTwice> <0-9PtTbEnShTEAltE> Short Repeat <1-10>" {
			SCRIPT {
			    IF _arg1 = "Zero" THEN  _arg1 = "0"
				IF _arg2 = "Zero" THEN  _arg2 = "0"
				loop& = Val(_arg3)
				while ( loop& )
				IF _arg1 = "Touch" XOR _arg1 = "Touch Twice" THEN 
				IF _arg1 = "Touch" THEN ButtonClick
				IF _arg1 = "Touch Twice" THEN ButtonClick 1, 2
				Wait 1000
				ELSE
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg1
				END IF
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg2
				loop& = loop& - 1
				wend
			}
		}
		COMMAND "<0-9PtTbEnShTEAltETouchTTwice> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> Short Repeat <1-10>" {
			SCRIPT {
			    IF _arg1 = "Zero" THEN  _arg1 = "0"
				IF _arg2 = "Zero" THEN  _arg2 = "0"
				IF _arg3 = "Zero" THEN  _arg3 = "0"
				loop& = Val(_arg4)
				while ( loop& )
				IF _arg1 = "Touch" XOR _arg1 = "Touch Twice" THEN 
				IF _arg1 = "Touch" THEN ButtonClick
				IF _arg1 = "Touch Twice" THEN ButtonClick 1, 2
				Wait 1000
				ELSE
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg1
				END IF
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg2
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg3
				loop& = loop& - 1
				wend
			}
		}
		COMMAND "<0-9PtTbEnShTEAltETouchTTwice> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> <0-9PtTbEnShTEAltE> Short Repeat <1-10>" {
			SCRIPT {
			    IF _arg1 = "Zero" THEN  _arg1 = "0"
				IF _arg2 = "Zero" THEN  _arg2 = "0"
				IF _arg3 = "Zero" THEN  _arg3 = "0"
				IF _arg4 = "Zero" THEN  _arg4 = "0"
				loop& = Val(_arg5)
				while ( loop& )
				IF _arg1 = "Touch" XOR _arg1 = "Touch Twice" THEN 
				IF _arg1 = "Touch" THEN ButtonClick
				IF _arg1 = "Touch Twice" THEN ButtonClick 1, 2
				Wait 1000
				ELSE
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg1
				END IF
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg2
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg3
				' _0to9PtTabEnterShiftTEAltEShort at 1
				DllCall "UttC.dll",1, _arg4
				loop& = loop& - 1
				wend
			}
		}
		LIST "1-10" {
			"1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" 
		}
		LIST "0-9PtTbEnShTEAltE" {
			"Point"  "Hyphen"
			"Zero"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9" 
			"Alternate Enter"  "Shift Enter"
			"Tab"  "Shift Tab"
			"Enter"
			"Down"  "Up"  
			"Left"  "Right"
		}
		LIST "0-9PtTbEnShTEAltENoUpD" {
			"Point"  "Hyphen"
			"Zero"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9" 
			"Alternate Enter"  "Shift Enter"
			"Tab"  "Shift Tab"
			"Enter"
#			"Down"  "Up"
# Added this list to take up out of "symbol symbol short" because it misfires too often  
			"Left"  "Right"
			
		}		LIST "0-9PtTbEnShTEAltETouchTTwice" {
			"Point" "Hyphen"
			"Zero"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9" 
			"Alternate Enter"  "Shift Enter"
			"Tab"  "Shift Tab"
			"Enter"
			"Down"  "Up"  "Left"  "Right"
			"Touch"  "Touch Twice"
		}
	}
}
