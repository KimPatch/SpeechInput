MENU "Global Commands" {
 
############################## Copyright #################################################
#        This file is part of Redstart Systems' Utter Command Speech Interface			 #
#        for NaturallySpeaking Professional. Utter Command uses Human-Machine 			 #
#	     Grammar. 						     				    						 #
#        Go to www.redstartsystems.com for more information about Utter command 	     #
#	     and Human-Machine Grammar.	     												 #
#          © Copyright Redstart Systems 2005-2008. All rights reserved.				     #
############################## Copyright #################################################
 
	STATE "Global Commands" GLOBAL {
 
#7p Selecting letters
#7q Selecting numbers
 
#7r Copying, Cutting, Pasting, Deleting, Formatting -- basic
#7s Selecting and Copying, Cutting, Pasting, Deleting, Formatting
#7t Moving and Copying, Cutting, Pasting, Deleting Formatting
#7u Moving and selecting and Copying, Cutting, Pasting, Deleting Formatting
#7v Selecting letters and Copying, Cutting, Pasting, Deleting Formatting 
#7w Selecting plus keyboard shortcut
#7x Moving and selecting plus keyboard shortcut
#7y Moving text
 
#7z Spacing, Compounding, Undoing, Duplicating
#7aa Standard Lists
#7ab Distinguishing between forms -- short 
#7ac Distinguishing between forms -- long 
#7ad Distinguishing between forms -- To
#7ae Font  
##################
 
#7p. Selecting letters
# Removed - use spells (6a)
 
#7q. Selecting numbers
#*		COMMAND "Numbers <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom>" {
#*		COMMAND "Numbers <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom>" {
#*		COMMAND "Numbers <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom>" {
#*		COMMAND "Numbers <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom> <0-9SpaceHyphPerCom>" {
#*		LIST "0-9SpaceHyphPerCom" {
 
#7z. Spacing, Compounding, Undoing, Duplicating
		COMMAND "<AnotherInsertNewLastNext> <Graph,Line>" {
			SCRIPT {
				p$ = _arg1 + " " + _arg2
				' ThisCommand at 91
				DllCall "UttC.dll",91, p$
			}
		}
		LIST "AnotherInsertNewLastNext" {
			"Another"  "Insert"
			"New"  "Last"  "Next"
		}
		LIST "Graph,Line" {
			"Graph"
			"Line"
		}
		COMMAND "<1-10> Compound" {
			SCRIPT {
				IF _arg1 = "1" THEN HeardWord "UseTwo"
				loop& = Val(_arg1) -1
				while ( loop& )
				SendKeys "{Ctrl+Left}"
				SendKeys "{Backspace}"
				SendKeys "{Ctrl+Right}"
				loop& = loop& - 1
				wend
			}
		}
		COMMAND "<1-10> Befores <CompoundHyphenateUnderscore>" {
			SCRIPT {
				IF _arg1 = "1" THEN HeardWord "UseTwo"
				loop& = Val(_arg1) -1
				while ( loop& )
				SendKeys "{Ctrl+Left}"
				IF _arg2 = "Compound" THEN SendKeys "{Backspace}"
				IF _arg2 = "Hyphenate" THEN SendKeys "{Backspace}{-}{Left}{Ctrl+Left}"
				IF _arg2 = "Underscore" THEN SendKeys "{Backspace}{_}{Left}{Ctrl+Left}"
				SendKeys "{Ctrl+Right}"
				loop& = loop& - 1
				wend
				IF _arg2 = "Hyphenate" XOR _arg2 = "Underscore" THEN 
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{Ctrl+Right 2}"
				loop& = loop& - 1
				wend
				END IF
			}
		}
		COMMAND "<1-10> Afters <CompoundHyphenateUnderscore>" {
			SCRIPT {
				IF _arg1 = "1" THEN HeardWord "UseTwo"
				loop& = Val(_arg1) -1
				while ( loop& )
				SendKeys "{Ctrl+Right}"
				Wait 100
				IF _arg2 = "Compound" THEN SendKeys "{Backspace}"
				IF _arg2 = "Hyphenate" THEN SendKeys "{Backspace}{-}{Right}{Ctrl+Right}"
				IF _arg2 = "Underscore" THEN SendKeys "{Backspace}{_}{Right}{Ctrl+Right}"
				SendKeys "{Ctrl+Left}"
				loop& = loop& - 1
				wend
				IF _arg2 = "Hyphenate" XOR _arg2 = "Underscore" THEN 
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{Ctrl+Left 2}"
				loop& = loop& - 1
				wend
				END IF
			}
		}
		COMMAND "UseTwo"{
			SCRIPT {
				SendKeys ""	
			}
		}
		COMMAND "<1-10> <1-10> <CompoundHyphenateUnderscore>" {
			SCRIPT {
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{Ctrl+Left}"
				Wait 100
				IF _arg3 = "Compound" THEN SendKeys "{Backspace}"
				IF _arg3 = "Hyphenate" THEN SendKeys "{Backspace}{-}{Left}"
				IF _arg3 = "Underscore" THEN SendKeys "{Backspace}{_}{Left}"
				IF _arg3 = "Compound" THEN SendKeys "{Ctrl+Right}"
				loop& = loop& - 1
				wend
				IF _arg1 = "Hyphenate" XOR _arg3 = "Underscore" THEN 
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "{Ctrl+Right 2}"
				loop& = loop& - 1
				wend
				END IF
				SendKeys "{Ctrl+Left}"
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "{Ctrl+Right}"
				Wait 100
				IF _arg3 = "Compound" THEN SendKeys "{Backspace}"
				IF _arg3 = "Hyphenate" THEN SendKeys "{Backspace}{-}{Right}"
				IF _arg3 = "Underscore" THEN SendKeys "{Backspace}{_}{Right}"
				IF _arg3 = "Compound" THEN SendKeys "{Ctrl+Left}"
				loop& = loop& - 1
				wend
				IF _arg1 = "Hyphenate" XOR _arg1 = "Underscore" THEN 
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "{Ctrl+Left 2}"
				loop& = loop& - 1
				wend
				END IF
				IF _arg3 = "Compound" THEN SendKeys "{Ctrl+Right}"
			}
		}
		LIST "1-10" {
			"1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" 
		}
		LIST "CompoundHyphenateUnderscore" {
			"Compound"
			"Hyphenate"
			"Underscore"
		}
		COMMAND "<UndoRedo> That" {
			SCRIPT {
				IF _arg1 = "Undo" THEN SendKeys "{Ctrl+z}"
				IF _arg1 = "Redo" THEN SendKeys "{Ctrl+y}"
			}
		}
		COMMAND "<1-40> <UndoRedoScratch>" {
			SCRIPT {
				loop& = Val(_arg1)
				while ( loop& )
				IF _arg2 = "Undo" THEN SendKeys "{Ctrl+z}"
				IF _arg2 = "Redo" THEN SendKeys "{Ctrl+y}"
				IF _arg2 = "Scratch" THEN HeardWord "scratch","that"
				loop& = loop& - 1
				wend
			}
		}
		COMMAND "<UndoRedoScratch> Times <1-40>" {
			SCRIPT {
				loop& = Val(_arg2)
				while ( loop& )
				IF _arg1 = "Undo" THEN SendKeys "{Ctrl+z}"
				IF _arg1 = "Redo" THEN SendKeys "{Ctrl+y}"
				IF _arg1 = "Scratch" THEN HeardWord "scratch","that"
				loop& = loop& - 1
				wend
			}
		}
		LIST "UndoRedoScratch" {
			"Undo"  "Redo"  "Scratch"
		}
		LIST "1-40" {
			 "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" 
			 "11" "12" "13" "14" "15" "16" "17" "18" "19" "20"
			 "21" "22" "23" "24" "25" "26" "27" "28" "29" "30" 
			 "31" "32" "33" "34" "35" "36" "37" "38" "39" "40"
		}
		COMMAND "<UndoRedo> <UndoRedo>" {
			SCRIPT {
				IF _arg1 = "Redo" THEN  _arg1 = "Ctrl+y"
				IF _arg1 = "Undo" THEN  _arg1 = "Ctrl+z"
				IF _arg2 = "Redo" THEN _arg2 = "Ctrl+y"
				IF _arg2 = "Undo" THEN  _arg2 = "Ctrl+z"
				SendKeys "{" + _arg1 + "}"
				SendKeys "{" + _arg2 + "}"
			}
		}
		LIST "UndoRedo" {
			"Undo"
			"Redo"
		}
		COMMAND "<GLWthisAll> Duplicate" {
			SCRIPT {
				' GLWthisAllDuplicate at 49
				DllCall "UttC.dll", 49, _arg1
			}
		}
		COMMAND "<GLWthisAll> Duplicate Repeat <1-20>" {
			SCRIPT {
				' GLWthisAllDuplicate at 49
				DllCall "UttC.dll", 49, _arg1
				Wait 100
				loop& = Val(_arg2) -1
				SendKeys "{End}{Enter}"
				while ( loop& )
				SendKeys "{Ctrl+v}"
				IF _arg1 = "Graph" XOR _arg1 = "Line" XOR _arg1 = "this" XOR _arg1 = "All" THEN SendKeys "{End}{Enter}"
				Wait 100
				loop& = loop& - 1
				wend
				IF _arg1 = "Line" THEN SendKeys "{Up " + _arg2 + "}{Up}{Home}"
				IF _arg1 = "Graph" XOR _arg1 = "this" XOR _arg1 = "All" THEN SendKeys "{Up 2}{Home}"
			}
		}
		LIST "GLWthisAll" {
			"Word"
			"Line"
			"Graph"
			"this"
			"All"
		}
 
#7aa. Standard Lists
#*		COMMAND "<DaysWeekdaysMonthsQuartersDWMQShort> <TabEnterCommaSlashPipeHomeEndEnter2-5EColonEHyphenDULR>" {
#*		COMMAND "<1-100> Through <1-100> <TabEnterCommaSlashPipeHomeEndEnter2-5EGraphGSPeriodEParenEPPHDULR>" {
#*		LIST "1-100" {
#*		LIST "DaysWeekdaysMonthsQuartersDWMQShort" {
#*		LIST "TabEnterCommaSlashPipeHomeEndEnter2-5EColonEHyphenDULR" {
#*		LIST "TabEnterCommaSlashPipeHomeEndEnter2-5EGraphGSPeriodEParenEPPHDULR" {
 
		
#7ab. Distinguishing between forms -- short 
		COMMAND "<0-100> <ShortSSpace>"{
			SCRIPT {
				SendKeys "" + _arg1 + ""	
				IF _arg2 = "Short Space" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<SpaceSpaces> <0-100> Short" {
			SCRIPT {
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "0-100" {
			"0"  "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
			 "10" "11" "12" "13" "14" "15" "16" "17" "18" "19"
			 "20" "21" "22" "23" "24" "25" "26" "27" "28" "29"
			 "30" "31" "32" "33" "34" "35" "36" "37" "38" "39"
			 "40" "41" "42" "43" "44" "45" "46" "47" "48" "49"
			 "50" "51" "52" "53" "54" "55" "56" "57" "58" "59"
			 "60" "61" "62" "63" "64" "65" "66" "67" "68" "69"
			 "70" "71" "72" "73" "74" "75" "76" "77" "78" "79"
			 "80" "81" "82" "83" "84" "85" "86" "87" "88" "89"
			 "90" "91" "92" "93" "94" "95" "96" "97" "98" "99"  "100"
		}
		COMMAND "<CharShort> <ShortSSpace>" {
			SCRIPT {
				IF _arg1 = "Ellipsis" THEN _arg1 = "..."
				IF _arg1 = "Dash" THEN _arg1 = "--"
				IF _arg1 = "Times" THEN _arg1 = "*"
				IF _arg1 = "Star" THEN _arg1 = "*"
				IF _arg1 = "At Sign" THEN _arg1 = "@"
				IF _arg1 = "Minus Sign" THEN _arg1 = "-"
				IF _arg1 = "Divided By" THEN _arg1 = "/"
				IF _arg1 = "Grave" THEN  _arg1 = "`"
				SendKeys "" + _arg1 + ""
				IF _arg2 = "Short Space" THEN SendKeys "{Space}"
				IF _arg2 = "Space Short" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<SpaceSpaces> <CharShort> Short" {
			SCRIPT {
				IF _arg2 = "Ellipsis" THEN _arg2 = "..."
				IF _arg2 = "Dash" THEN _arg2 = "--"
				IF _arg2 = "Times" THEN _arg2 = "*"
				IF _arg2 = "Star" THEN _arg2 = "*"
				IF _arg2 = "At Sign" THEN _arg2 = "@"
				IF _arg2 = "Minus sign" THEN _arg2 = "-"
				IF _arg2 = "Divided by" THEN _arg2 = "/"
				IF _arg2 = "Grave" THEN  _arg1 = "`"
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "CharShort" {
			"!"  "At Sign"  "#"  "$"  "%"  "^"  "&"  "*"  "("  ")"  "--"
			"`"  "~"  "-"  "_"  "="  "+"  "\\"  "|"  "["  "{"
			"]"  "}"  ";"  ":"  "'"  "\""  ","  "<"  "."  ">"
			"/"  "?"  "Ellipsis"  "Times"  "Minus sign"  "Divided by"  "Star"
		}
#*		COMMAND "<DaysMonthsStatesShort> <ShortSSpace>" {
#*		COMMAND "<SpaceSpaces> <DaysMonthsStatesShort> Short" {
#*		LIST "DaysMonthsStatesShort" {
 
		LIST "ShortSSpace" {
			"Short"
			"Short Space"
			"Space Short"
		}
		
#7ac. Distinguishing between forms -- long 
		COMMAND "<0to100> <LongLSpace>" {
			SCRIPT {
				SendKeys "" + _arg1 + ""
				IF _arg2 = "Long Space" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<SpaceSpaces> <0to100> Long" {
			SCRIPT {
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "0to100" {
			"zero"  "one"  "two"  "three"  "four"  "five"  "six"  "seven"  "eight"  "nine"  
			"ten"  "eleven"  "twelve"  "thirteen"  "fourteen"  "fifteen"  "sixteen"  "seventeen"  "eighteen"  "nineteen"
			"twenty"  "twenty-one"  "twenty-two"  "twenty-three"  "twenty-four"  "twenty-five"  "twenty-six"  "twenty-seven"  "twenty-eight"  "twenty-nine"
			"thirty"  "thirty-one"  "thirty-two"  "thirty-three"  "thirty-four"  "thirty-five"  "thirty-six"  "thirty-seven"  "thirty-eight"  "thirty-nine"
			"forty"  "forty-one"  "forty-two"  "forty-three"  "forty-four"  "forty-five"  "forty-six"  "forty-seven"  "forty-eight"  "forty-nine"
			"fifty"  "fifty-one"  "fifty-two"  "fifty-three"  "fifty-four"  "fifty-five"  "fifty-six"  "fifty-seven"  "fifty-eight"  "fifty-nine"
			"sixty"  "sixty-one"  "sixty-two"  "sixty-three"  "sixty-four"  "sixty-five"  "sixty-six"  "sixty-seven"  "sixty-eight"  "sixty-nine"
			"seventy"  "seventy-one"  "seventy-two"  "seventy-three"  "seventy-four"  "seventy-five"  "seventy-six"  "seventy-seven"  "seventy-eight"  "seventy-nine"
			"eighty"  "eighty-one"  "eighty-two"  "eighty-three"  "eighty-four"  "eighty-five"  "eighty-six"  "eighty-seven"  "eighty-eight"  "eighty-nine"
			"ninety"  "ninety-one"  "ninety-two"  "ninety-three"  "ninety-four"  "ninety-five"  "ninety-six"  "ninety-seven"  "ninety-eight"  "ninety-nine" "one hundred"
		}
		COMMAND "Cap <Cap0to100> <LongLSpace>" {
			SCRIPT {
				SendKeys "" + _arg1 + ""
				IF _arg2 = "Long Space" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<SpaceSpaces> Cap <Cap0to100> Long" {
			SCRIPT {
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "Cap0to100" {
			"Zero"  "One"  "Two"  "Three"  "Four"  "Five"  "Six"  "Seven"  "Eight"  "Nine"
			"Ten"  "Eleven"  "Twelve"  "Thirteen"  "Fourteen"  "Fifteen"  "Sixteen"  "Seventeen"  "Eighteen"  "Nineteen"
			"Twenty"  "Twenty-one"  "Twenty-two"  "Twenty-three"  "Twenty-four"  "Twenty-five"  "Twenty-six"  "Twenty-seven"  "Twenty-eight"  "Twenty-nine"
			"Thirty"  "Thirty-one"  "Thirty-two"  "Thirty-three"  "Thirty-four"  "Thirty-five"  "Thirty-six"  "Thirty-seven"  "Thirty-eight"  "Thirty-nine"
			"Forty"  "Forty-one"  "Forty-two"  "Forty-three"  "Forty-four"  "Forty-five"  "Forty-six"  "Forty-seven"  "Forty-eight"  "Forty-nine"
			"Fifty"  "Fifty-one"  "Fifty-two"  "Fifty-three"  "Fifty-four"  "Fifty-five"  "Fifty-six"  "Fifty-seven"  "Fifty-eight"  "Fifty-nine"
			"Sixty"  "Sixty-one"  "Sixty-two"  "Sixty-three"  "Sixty-four"  "Sixty-five"  "Sixty-six"  "Sixty-seven"  "Sixty-eight"  "Sixty-nine"
			"Seventy"  "Seventy-one"  "Seventy-two"  "Seventy-three"  "Seventy-four"  "Seventy-five"  "Seventy-six"  "Seventy-seven"  "Seventy-eight"  "Seventy-nine"
			"Eighty"  "Eighty-one"  "Eighty-two"  "Eighty-three"  "Eighty-four"  "Eighty-five"  "Eighty-six"  "Eighty-seven"  "Eighty-eight"  "Eighty-nine"
			"Ninety"  "Ninety-one"  "Ninety-two"  "Ninety-three"  "Ninety-four"  "Ninety-five"  "Ninety-six"  "Ninety-seven"  "Ninety-eight"  "Ninety-nine"		
		}
		COMMAND "<Char> <LongLSpace>" {
			SCRIPT {
				SendKeys "" + _arg1 + ""
				IF _arg2 = "Long Space" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<SpaceSpaces> <Char> Long" {
			SCRIPT {
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "Char" {
			"comma"  "at sign"  "ampersand"  "apostrophe" "asterisk" "pipe"  "backslash"  "carrot"  "dash"
			"dollar sign"  "equal sign"  "grave"  "hyphen"  "number sign"  
			"percent sign"  "plus sign"  "slash"  "star"  "tilde"  "underscore"
			"period"  "dot"  "point"  "semicolon"  "colon"  "question mark"  "exclamation mark"
			"times"  "plus"  "minus"  "divided by"  "number sign"   "percent sign"
			"exclaimation point" "greater than"  "less than"
			"open paren"  "close paren" "open quote"  "close quote" "open bracket"  "close bracket"  "open brace"  "close brace"  "open single quote"  "close single quote"   "single quote"
			"open angle"  "close angle"  "open angle bracket"  "close angle bracket"
			"ellipsis"  "backspace"	"touch" "enter"  "space" "spacebar" "delete"  "escape"
 
		}
		COMMAND "<Alphsingleword> <LongLSpace>" {
			SCRIPT {
				SendKeys "" + _arg1 + ""
				IF _arg2 = "Long Space" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<SpaceSpaces> <Alphsingleword> Long" {
			SCRIPT {
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "Alphsingleword" {
			"alpha"  "bravo"  "charlie"  "delta"  "echo"  "foxtrot"  "golf"  "hotel"  "India"  "Juliett"  "kilo"  "Lima"  "Mike"  "November"  "oscar"  "papa"  "Quebec"  "Romeo"  "sierra"  "tango"  "uniform"  "Victor"  "whiskey"  "xray"  "yankee"  "Zulu"
			"file"  "edit"  "view"  "insert"  "format"  "tools"  "table"  "window"  "help"  "acrobat"
			"scratch"  "spacebar" "new line"  "new paragraph"  "spell"  "no space"
 
		}
		COMMAND "Cap <CharCapped> <LongLSpace>" {
			SCRIPT {
				SendKeys "" + _arg1 + ""
				IF _arg2 = "Long Space" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<SpaceSpaces> Cap <CharCapped> Long" {
			SCRIPT {
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "CharCapped" {
			"Comma"  "at Sign"  "Ampersand"  "Apostrophe" "Asterisk" "Pipe"  "Backslash"  "Carrot"  "Dash"
			"Dollar Sign"  "Equal Sign"  "Grave"  "Hyphen"  "Number Sign"  
			"Percent Sign"  "Plus Sign"  "Slash"  "Star"  "Tilde"  "Underscore"
			"Period"  "Dot"  "Point"  "Semicolon"  "Colon"  "Question Mark"  "Exclamation Mark"
			"Times"  "Plus"  "Minus"  "Divided by"  "Number Sign"   "Percent Sign"
			"Exclaimation Point" "Greater Than"  "Less Than"
			"Open Paren"  "Close Paren" "Open Quote"  "Close Quote" "Open Bracket"  "Close Bracket"  "Open Brace"  "Close Brace"  "Open Single Quote"  "Close Single Quote"   "Single Quote"
			"Open Angle"  "Close Angle"  "Open Angle Bracket"  "Close Angle Bracket"
			"Ellipsis"  "Backspace"	"Touch" "Enter"  "Space" "Spacebar" "Delete"  "Escape"
 
		}
		COMMAND "Cap <AlphsinglewordCapped> <LongLSpace>" {
			SCRIPT {
				SendKeys "" + _arg1 + ""
				IF _arg2 = "Long Space" THEN SendKeys "{Space}"
			}
		}
		COMMAND "<SpaceSpaces> Cap <AlphsinglewordCapped> Long" {
			SCRIPT {
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
				IF _arg1 = "Space" THEN SendKeys "{Space}"
				SendKeys "" + _arg2 + ""
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}
		LIST "AlphsinglewordCapped" {
			"Alpha"  "Bravo"  "Charlie"  "Delta"  "Echo"  "Foxtrot"  "Golf"  "Hotel"  "India"  "Juliet"  "Kilo"  "Lima"  "Mike"  "November"  "Oscar"  "Papa"  "Quebec"  "Romeo"  "Sierra"  "Tango"  "Uniform"  "Victor"  "Whiskey"  "Xray"  "Yankee"  "Zulu"
			"File"  "Edit"  "View"  "Insert	"  "Format"  "Tools"  "Table"  "Window"  "Help"  "Acrobat"
			"Scratch"  "Spacebar"  "New Line"  "New Paragraph" "Spell"  "No Space" 
 
		}
		LIST "LongLSpace" {
			"Long"
			"Long Space"
		}
 
#7ad. Distinguishing between forms -- To 
#*		COMMAND "<ToForCap> Long <1212Space> "{
#*		COMMAND "<SpaceSpaces> <ToForCap> Long <1-2>"{
#*		COMMAND "Cap <ToForCap> Long <1212Space> "{
#*		LIST "1212Space" {
#*		COMMAND "<SpaceSpaces> Cap <ToForCap> Long <1-2>"{
 
		LIST "SpaceSpaces" {
			"Space"
			"Spaces"
		}
#*		LIST "ToForCap" {
#*		LIST "1-2" {
 
#7ae Font 			
		COMMAND "Font <Alph> <Alph>"{
			SCRIPT {
								
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft PowerPoint", 512 )
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft Excel", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 XOR (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Shift+Ctrl+f}"
				SendKeys "{Alt+Down}"
				Wait 100
				SendKeys "" + MID$(_arg1,0,1) + "" + MID$(_arg2,0,1) + ""
				ELSE
				isWriter$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Writer", 512 )
				IF (instr(isWriter$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Home}{Shift+End}"
				Wait 100
				SendKeys "" + MID$(_arg1,0,1) + "" + MID$(_arg2,0,1) + ""
				ELSE
				isCalc$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Calc", 512 )
				IF (instr(isCalc$,"true")) > 0 THEN
  				SendKeys "{Alt+o}l"
				Wait 100
				SendKeys "" + MID$(_arg1,0,1) + "" + MID$(_arg2,0,1) + ""
				ELSE
				isImpress$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Impress", 512 )
				IF (instr(isImpress$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				Wait 100
				SendKeys "" + MID$(_arg1,0,1) + "" + MID$(_arg2,0,1) + ""
				ELSE
				isWord$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft Word", 512 )
				IF (instr(isWord$,"true")) > 0 THEN
				SendKeys "{Ctrl+d}"
				Wait 100
				SendKeys "" + MID$(_arg1,0,1) + "" + MID$(_arg2,0,1) + ""
				Wait 100
				SendKeys "{Down}"
				ELSE
  				SendKeys "{Alt+o}f"
				Wait 100
				SendKeys "" + MID$(_arg1,0,1) + "" + MID$(_arg2,0,1) + ""
				END IF
				END IF
				END IF
				END IF
				END IF
			}
		}
#*		COMMAND "Font <Alph> <Alph> <EnterDownE>"{
		
		COMMAND "Size <1-60>"{
			SCRIPT {
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft PowerPoint", 512 )
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft Excel", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 XOR (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Ctrl+t}"
				SendKeys "{Alt+s}"
				ELSE
				isWriter$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Writer", 512 )
				IF (instr(isWriter$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Alt+s}"
				ELSE
				isCalc$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Calc", 512 )
				IF (instr(isCalc$,"true")) > 0 THEN
  				SendKeys "{Alt+o}c"
				SendKeys "{Alt+s}"
				ELSE
				isImpress$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Impress", 512 )
				IF (instr(isImpress$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Alt+s}"
				ELSE
				isNotepad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Notepad", 512 )
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isNotepad$,"true")) > 0 XOR (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				SendKeys "{Alt+s}"
				ELSE
				SendKeys "{Ctrl+d}"
				Wait 100
				SendKeys "{Alt+s}"
				Wait 100
				END IF
				END IF
				END IF
				END IF
				END IF
				SendKeys "" + _arg1 + ""
				Wait 100
				SendKeys "{Enter}"
			}
		}
		COMMAND "Size <1-60> Stay"{
			SCRIPT {
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft PowerPoint", 512 )
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft Excel", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 XOR (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Ctrl+t}"
				SendKeys "{Alt+s}"
				ELSE
				isWriter$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Writer", 512 )
				IF (instr(isWriter$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Alt+s}"
				ELSE
				isCalc$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Calc", 512 )
				IF (instr(isCalc$,"true")) > 0 THEN
  				SendKeys "{Alt+o}c"
				SendKeys "{Alt+s}"
				ELSE
				isImpress$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Impress", 512 )
				IF (instr(isImpress$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Alt+s}"
				ELSE
				isNotepad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Notepad", 512 )
				IF (instr(isNotepad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				SendKeys "{Alt+s}"
				ELSE
				SendKeys "{Ctrl+d}"
				Wait 100
				SendKeys "{Alt+s}"
				END IF
				END IF
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "" + _arg1 + ""
			}
		}
		COMMAND "Size <1-60> <BoldItalicUnderlineBI>"{
			SCRIPT {
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft PowerPoint", 512 )
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft Excel", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 XOR (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Ctrl+t}"
				SendKeys "{Alt+s}"
				ELSE
				isWriter$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Writer", 512 )
				IF (instr(isWriter$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Alt+s}"
				ELSE
				isCalc$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Calc", 512 )
				IF (instr(isCalc$,"true")) > 0 THEN
  				SendKeys "{Alt+o}c"
				SendKeys "{Alt+s}"
				ELSE
				isImpress$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Impress", 512 )
				IF (instr(isImpress$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Alt+s}"
				ELSE
				isNotepad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Notepad", 512 )
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isNotepad$,"true")) > 0 XOR (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				SendKeys "{Alt+s}"
				ELSE
				SendKeys "{Ctrl+d}"
				Wait 100
				SendKeys "{Alt+s}"
				Wait 100
				END IF
				END IF
				END IF
				END IF
				END IF
				SendKeys "" + _arg1 + ""
				Wait 100
				SendKeys "{Enter}"
				Wait 100
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg2
			}
		}
		COMMAND "<BoldItalicUnderlineBI> Color"{
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg1
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
 
			}
		}
		COMMAND "Size <1-60> Color"{
			SCRIPT {
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft PowerPoint", 512 )
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft Excel", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 XOR (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Ctrl+t}"
				SendKeys "{Alt+s}"
				ELSE
				isWriter$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Writer", 512 )
				IF (instr(isWriter$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Alt+s}"
				ELSE
				isCalc$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Calc", 512 )
				IF (instr(isCalc$,"true")) > 0 THEN
  				SendKeys "{Alt+o}c"
				SendKeys "{Alt+s}"
				ELSE
				isImpress$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Impress", 512 )
				IF (instr(isImpress$,"true")) > 0 THEN
  				SendKeys "{Alt+o}h"
				SendKeys "{Alt+s}"
				ELSE
				isNotepad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Notepad", 512 )
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isNotepad$,"true")) > 0 XOR (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				SendKeys "{Alt+s}"
				ELSE
				SendKeys "{Ctrl+d}"
				Wait 100
				SendKeys "{Alt+s}"
				Wait 100
				END IF
				END IF
				END IF
				END IF
				END IF
				SendKeys "" + _arg1 + ""
				Wait 100
				SendKeys "{Enter}"
				Wait 100
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
			}
		}
		COMMAND "<Size> <1-60> <Font> <Alph> <Alph>"{
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4, _arg5
 
			}
		}
		COMMAND "<Size> <1-60> <Font> <Alph> <Alph> <EnterDownE>"{
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4, _arg5
			}
		}
		LIST "EnterDownE" {
			"Enter" "Down Enter"
		}
		COMMAND "<ThisColorCOpen>" {
			SCRIPT {
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				SendKeys "{Alt+Down}"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
 
			}
		}
		LIST "ThisColorCOpen" {
			"This Color"  "Color Open"
		}
		COMMAND "Color Open" {
			SCRIPT {
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				SendKeys "{Alt+Down}"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
 
			}
		}
		COMMAND "Color <1-20> <DULR>"{
			SCRIPT {
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
				Wait 100
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
			}
		}
		COMMAND "Color <1-20> <DULR> Enter"{
			SCRIPT {
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
				Wait 100
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				Wait 500
				SendKeys "{Enter}"
				isMicrosoftWord$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Microsoft Word", 512 )
				IF (instr(isMicrosoftWord$,"true")) > 0 THEN
  				HeardWord "OK"
				END IF
				
			}
		}
#* 		COMMAND "Color <1-20> <DULR> <1-20> <DULR>"{
#*  	COMMAND "Color <1-20> <DULR> <1-20> <DULR> Enter"{
	
		LIST "DULR" {
			"Down"  "Up" "Left" "Right"
		}
		COMMAND "<GLLWBsAsUSDocTopBottom> Color " {
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg1
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
			}
		}
		COMMAND "<1-20> <GLLWDUABUSs> Color " {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
			}
		}
#* 		COMMAND "<1-20> <DULR> <1-20> <GLLWDUABUSs> Color " {
	
		COMMAND "<1-20thEnd> <GGSLLW> Color " {
			SCRIPT {
				HeardWord _arg1, _arg2
				isWordPad$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "WordPad", 512 )
				IF (instr(isWordPad$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				isExcel$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Excel", 512 )
				IF (instr(isExcel$,"true")) > 0 THEN
  				SendKeys "{Alt+o}e"
				ELSE
				isPowerPoint$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "PowerPoint", 512 )
				IF (instr(isPowerPoint$,"true")) > 0 THEN
  				SendKeys "{Alt+o}f"
				ELSE
				SendKeys "{Ctrl+d}"
				END IF
				END IF
				END IF
				Wait 100
				SendKeys "{Alt+c}"
 
			}
		}
		COMMAND "<GLLWBsAsUSDocTopBottom> <Font> <Alph> <Alph>" {
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg1
				HeardWord _arg2, _arg3, _arg4
			}
		}
		COMMAND "<1-20> <GLLWDUABUSs> <Font> <Alph> <Alph>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				HeardWord _arg3, _arg4, _arg5
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> <Font> <Alph> <Alph>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4, _arg5
			}
		}
		COMMAND "<GLLWBsAsUSDocTopBottom> <Font> <Alph> <Alph> <Enter>" {
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg1
				HeardWord _arg2, _arg3, _arg4, _arg5
			}
		}
		COMMAND "<1-20> <GLLWDUABUSs> <Font> <Alph> <Alph> <Enter>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				HeardWord _arg3, _arg4, _arg5, _arg6
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> <Font> <Alph> <Alph> <Enter>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4, _arg5, _arg6
			}
		}
		LIST "Font" {
			"Font"
		}
		LIST "Alph" {
#			"a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
#			"n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
			"alpha"  "bravo"  "charlie"  "delta"  "echo"  "foxtrot"  "golf"  "hotel"  "india"  "juliett"  "kilo"  "lima"  "mike"  "november"  "oscar"  "papa"  "quebec"  "romeo"  "sierra"  "tango"  "uniform"  "victor"  "whiskey"  "xray"  "yankee"  "zulu"  
		}
		LIST "Enter" {
			"Enter"
		}
		COMMAND "<GLLWBsAsUSDocTopBottom> <Size> <1-60>" {
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg1
				HeardWord _arg2, _arg3
			}
		}
		COMMAND "<1-20> <GLLWDUABUSs> <Size> <1-60>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				HeardWord _arg3, _arg4
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> <Size> <1-60>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4
			}
		}
		COMMAND "<GLLWBsAsUSDocTopBottom> <Size> <1-60> <BoldItalicUnderlineBI>" {
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg1
				HeardWord _arg2, _arg3
				Wait 100
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg4
 
			}
		}
		COMMAND "<1-20> <GLLWDUABUSs> <Size> <1-60> <BoldItalicUnderlineBI>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				HeardWord _arg3, _arg4
				Wait 100
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg5
 
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> <Size> <1-60> <BoldItalicUnderlineBI>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4
				Wait 100
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg5
			}
		}
		LIST "BoldItalicUnderlineBI" {
			"Bold" "Bold Italic" "Italic" "Underline"
		}
		COMMAND "<GLLWBsAsUSDocTopBottom> <Size> <1-60> <Stay>" {
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg1
				HeardWord _arg2, _arg3, _arg4
			}
		}
		LIST "GLLWBsAsUSDocTopBottom" {
			"Letter"  "Lefts"  "Rights"
			"Befores"  "Afters"  "Word"  
#			"Word Top"  "Word Bottom"
			"Line"  "Line Up"  "Line Top"  "Line Bottom"
			"Graph"  "Graph Space"  "Graph Up"  "Graph Space Up"  
#			"Graph Top"  "Graph Bottom"
			"Screen"  "Screen Up"
			"Document"  "Document Top"  "Document Bottom"
			"Doc"  "Doc Top"  "Doc Bottom"
		}
		COMMAND "<1-20> <GLLWDUABUSs> <Size> <1-60> <Stay>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				HeardWord _arg3, _arg4, _arg5
			}
		}
		LIST "1-20" {
			"1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" 
			"11" "12" "13" "14" "15" "16" "17" "18" "19" "20"
		}
		LIST "GLLWDUABUSs" {
			"Letters"  "Lefts"  "Rights"
			"Words"  "Befores"  "Afters"
			"Lines"  "Line Ups"  "Downs"  "Ups"
			"Graphs"  "Graph Spaces"  "Graph Ups"  "Graph Space Ups"
			"Screens"  "Screen Ups"
		}
		COMMAND "<1-20thEnd> <GGSLLW> <Size> <1-60> <Stay>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4, _arg5
			}
		}
		LIST "1-20thEnd" {
			"1st"  "2nd"  "3rd"  "4th"  "5th"  "6th"  "7th"  "8th"  "9th"  "10th"
			"11th"  "12th"  "13th"  "14th"  "15th"  "16th"  "17th"  "18th"  "19th"
			"20th"  "End"
		}
		LIST "GGSLLW" {
			"Letter"
			"Word"
			"Line"
			"Graph"  "Graph Space"
		}
		LIST "Size" {
			"Size"
		}
		LIST "1-60" {
			 "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
			 "10" "11" "12" "13" "14" "15" "16" "17" "18" "19"
			 "20" "21" "22" "23" "24" "25" "26" "27" "28" "29"
			 "30" "31" "32" "33" "34" "35" "36" "37" "38" "39"
			 "40" "41" "42" "43" "44" "45" "46" "47" "48" "49"
			 "50" "51" "52" "53" "54" "55" "56" "57" "58" "59"
			 "60" 
		}
		LIST "Stay" {
			"Stay"
		}
 
	}
}
