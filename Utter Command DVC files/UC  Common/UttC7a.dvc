MENU "Global Commands" {
 
############################## Copyright #################################################
#        This file is part of Redstart Systems' Utter Command Speech Interface			 #
#        for NaturallySpeaking Professional. Utter Command uses Human-Machine 			 #
#	     Grammar. 						     				    						 #
#        Go to www.redstartsystems.com for more information about Utter command 	     #
#	     and Human-Machine Grammar.	     												 #
#          © Copyright Redstart Systems 2005-2008. All rights reserved.				     #
############################## Copyright #################################################
 
#UC COMMON CHANGES ****************************************
 
	STATE "Global Commands" GLOBAL {
 
################## Sec. 7: Text
#7a Moving -- basic doc
#7b Moving -- basic DULR and screen, including wait and Touch
#7c Cursor placing -- basic words lines graphs
#7d Cursor Placing -- combinations
#7e Moving the cursor to a given GCLWS
#7f Moving the cursor to a given GCLWS combinations
#7g Selecting -- basic
#7h Moving and selecting -- 2 steps
#7i Moving and selecting -- 3 steps
#7j Moving and selecting -- special combinations
#7k Select and Find
#7l Select, Find, Move 
#7m Select and find Stay
#7n Select and find Repeat, Wait Repeat
#7o Moving by given character
 
#7p Selecting letters --In UttC7b
#7q Selecting numbers --In UttC7b
 
#7r Copying, Cutting, Pasting, Deleting, Formatting -- basic
#7s Selecting and Copying, Cutting, Pasting, Deleting, Formatting
#7t Moving and Copying, Cutting, Pasting, Deleting Formatting
#7u Moving and selecting and Copying, Cutting, Pasting, Deleting Formatting
#7v Selecting letters and Copying, Cutting, Pasting, Deleting Formatting 
#7w Selecting plus keyboard shortcut
#7x Moving and selecting plus keyboard shortcut
#7y Moving text
 
#In UttC7b
#7z Spacing, Compounding, Undoing, Duplicating
#7aa Standard Lists
#7ab Distinguishing between forms -- short 
#7ac Distinguishing between forms -- long 
#7ad Distinguishing between forms -- To
#7ae 
##################
 
#7a. Moving -- basic doc
		COMMAND "Go <BottomTopAfterBeforeHomeEnd>" {
			SCRIPT {
				if _arg1 = "After" then SendKeys "{Right}"
				if _arg1 = "Right" then SendKeys "{Right}"
				if _arg1 = "Before" then SendKeys "{Left}"
				if _arg1 = "Left" then SendKeys "{Left}"
				if _arg1 = "Home" then SendKeys "{Home}"
				if _arg1 = "Top" then SendKeys "{Ctrl+Home}"
				if _arg1 = "End" then SendKeys "{End}"
				if _arg1 = "Bottom" then SendKeys "{Ctrl+End}"
				IF _arg1 = "Top End" THEN SendKeys "{Ctrl+Home}{End}"
				IF _arg1 = "Bottom Home" THEN SendKeys "{Ctrl+End}{Home}"
			}
		}
		LIST "BottomTopAfterBeforeHomeEnd" {
			"Top"  "Bottom"
			"Before"  "After"
			"Home"  "End"
			"Top End"  "Bottom Home"
		}
		COMMAND "Bottom <1-100> Up" {
			SCRIPT {
				SendKeys "{Ctrl+End}"
				SendKeys "{Up " + _arg1 + "}{Home}"
			}
		}
 
#*		COMMAND "<TopBottom> <11-20> <DULR>" {
#*		LIST "11-20" {
 
#7b. Moving -- basic DULR and screen, including wait and Touch 
		COMMAND "<1-100> <DULR>" {
			SCRIPT {
				SendKeys "{"+ _arg2 + " " + _arg1 + "}"
			}
		}
		COMMAND "Cursor <1-100> <DULR>" {
			SCRIPT {
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{" + _arg2 + "}"
				Wait 300
				loop& = loop& - 1
				wend
			}
		}
#*		COMMAND "<1-100> <DULR> Touch" {
#*		COMMAND "Cursor <1-100> <DULR> Touch" {
 
		COMMAND "<1-5> <0-9> <0-9> <DULR>" {
			SCRIPT {
				SendKeys "{" + _arg4 + " " + _arg1 + "" + _arg2 + "" + _arg3 + "}"
			}
		}
		COMMAND "<1-9> <0-9> <DULR>" {
			SCRIPT {
				SendKeys "{" + _arg3 + " " + _arg1 + "" + _arg2 + "}"
			}
		}
		COMMAND "<1-100> <DULR> <1-100> <DULR>" {
			SCRIPT {
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				SendKeys "{" + _arg4 + " " + _arg3 + "}"
			}
		}
		COMMAND "<1-100> <DULR> <1-100> <DULR> Enter" {
			SCRIPT {
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				SendKeys "{" + _arg4 + " " + _arg3 + "}"
				SendKeys "{Enter}"
			}
		}
		COMMAND "<1-100> <DULR> Enter" {
			SCRIPT {
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				Wait 100
				SendKeys "{Enter}"
			}
		}
		COMMAND "<1-100> <DULR> <WaitWEnter>" {
			SCRIPT {
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{" + _arg2 + "}"
				Wait 300
				loop& = loop& - 1
				wend
				IF _arg3 = "Wait Enter" THEN 
				Wait 300
				SendKeys "{Enter}"			
				END IF
			}
		}
		COMMAND "<1-100> <DULR> Wait <1-10>" {
			SCRIPT {
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{" + _arg2 + "}"
				Wait Val(_arg3)*100
				loop& = loop& - 1
				wend				
			}
		}
		COMMAND "<1-20> <DULR> <1-20> <DULR> <WaitWEnter>" {
			SCRIPT {
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{" + _arg2 + "}"
				Wait 300
				loop& = loop& - 1
				wend			
				loop& = Val(_arg3)
				while ( loop& )
				SendKeys "{" + _arg4 + "}"
				Wait 300
				loop& = loop& - 1
				wend			
				IF _arg5 = "Wait Enter" THEN 
				Wait 300
				SendKeys "{Enter}"
				END IF
			}
		}
		LIST "WaitWEnter" {
			"Wait"  "Wait Enter"
		}
		COMMAND "Screen <UpDown>" {
			SCRIPT {
				IF _arg1 = "Up" THEN SendKeys "{PgUp}"
				IF _arg1 = "Down" THEN SendKeys "{PgDn}"
			}
		}
		COMMAND "<1-40> <ScreenSUp>" {
			SCRIPT {
				IF _arg2 = "Screen" XOR _arg2 = "Screen Down" THEN  _arg2 = "PgDn"
				IF _arg2 = "Screen Up" THEN  _arg2 = "PgUp"
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{" + _arg2 + "}"
				loop& = loop& - 1
				wend				
			}
		}
#*		COMMAND "<1-40> <DULRSSU> System" {
		
		COMMAND "<1> <DULRSSU>" {
			SCRIPT {
				IF _arg2 = "Screen" XOR _arg2 = "Screen Down" THEN  _arg2 = "PgDn"
				IF _arg2 = "Screen Up" THEN  _arg2 = "PgUp"
				SendSystemKeys "{"+ _arg2 + " " + _arg1 + "}"
			}
		}
		LIST "1" {
			"1"
		}
		COMMAND "<1-40> <ScreenSUp> Wait" {
			SCRIPT {
				IF _arg2 = "Screen" XOR _arg2 = "Screen Down" THEN  _arg2 = "PgDn"
				IF _arg2 = "Screen Up" THEN  _arg2 = "PgUp"
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{" + _arg2 + "}"
				Wait 2000
				loop& = loop& - 1
				wend				
			}
		}
		COMMAND "<1-40> <ScreenSUp> Wait <1-10>" {
			SCRIPT {
				IF _arg2 = "Screen" XOR _arg2 = "Screen Down" THEN  _arg2 = "PgDn"
				IF _arg2 = "Screen Up" THEN  _arg2 = "PgUp"
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{" + _arg2 + "}"
				Wait Val(_arg3)*1000
				loop& = loop& - 1
				wend				
			}
		}
		LIST "ScreenSUp" {
			"Screen" "Screen Down"  "Screen Up"
		}
		COMMAND "<1-40> <DULRSSU> Wait <1-10> Repeat <1-20>" {
			SCRIPT {
				IF _arg2 = "Screen" XOR _arg2 = "Screen Down" THEN  _arg2 = "PgDn"
				IF _arg2 = "Screen Up" THEN  _arg2 = "PgUp"
				loop& = Val(_arg4)
				while ( loop& )
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				IF _arg2 = "PgDn" XOR _arg2 = "PgUp" THEN  
				Wait Val(_arg3)*1000
				ELSE
				Wait Val(_arg3)*1000
				END IF
				loop& = loop& - 1
				wend
			}
		}
		COMMAND "<1-40> <DULRSSU> Wait Repeat <1-20>" {
			SCRIPT {
				IF _arg2 = "Screen" XOR _arg2 = "Screen Down" THEN  _arg2 = "PgDn"
				IF _arg2 = "Screen Up" THEN  _arg2 = "PgUp"
				loop& = Val(_arg3)
				while ( loop& )
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				IF _arg2 = "PgUp" XOR _arg2 = "PgDn"THEN 
				SendKeys "{" + _arg2 + "}"
				Wait 1000
				ELSE
				SendKeys "{" + _arg2 + "}"
				Wait 300
				END IF
				loop& = loop& - 1
				wend
			}
		}
 
#7c. Cursor placing -- basic words lines graphs
		COMMAND "Line <UpDown>" {
			SCRIPT {
				IF _arg1 = "Up" THEN SendKeys "{Up}{Home}"
				IF _arg1 = "Down" THEN SendKeys "{Down}{Home}"
			}
		}
		COMMAND "Graph <UpDown>" {
			SCRIPT {
				IF _arg1 = "Up" THEN SendKeys "{Ctrl+Up}"
				IF _arg1 = "Down" THEN SendKeys "{Ctrl+Down}"
			}
		}
		COMMAND "Graph Space <UpDown>" {
			SCRIPT {
				IF _arg1 = "Up" THEN SendKeys "{Ctrl+Up 2}"
				IF _arg1 = "Down" THEN SendKeys "{Ctrl+Down 2}"
			}
		}
		COMMAND "<GLWDoc> <HomeEndTopBottom>" {
			SCRIPT {
				IF _arg2 = "Home" THEN 
				IF _arg1 = "Graph" THEN SendKeys "{Ctrl+Up}"
				IF _arg1 = "Word" THEN SendKeys "{Ctrl+Left}"
				IF _arg1 = "Line" THEN SendKeys "{Home}"
				IF _arg1 = "Document" XOR _arg1 = "Doc" THEN SendKeys "{Ctrl+Home}"
				END IF
				IF _arg2 = "End" THEN 
				IF _arg1 = "Graph" THEN Sendkeys "{Ctrl+Down}"
				IF _arg1 = "Word" THEN SendKeys "{Ctrl+Right}"
				IF _arg1 = "Line" THEN SendKeys "{End}"
				IF _arg1 = "Document" XOR _arg1 = "Doc" THEN SendKeys "{Ctrl+End}"
				END IF
				IF _arg2 = "Top" THEN 
				IF _arg1 = "Graph" THEN SendKeys "{Shift+Ctrl+Up}"
				IF _arg1 = "Word" THEN SendKeys "{Shift+Ctrl+Left}"
				IF _arg1 = "Line" THEN SendKeys "{Shift+Home}"
				IF _arg1 = "Document" XOR _arg1 = "Doc" THEN SendKeys "{Shift+Ctrl+Home}"
				END IF
				IF _arg2 = "Bottom" THEN 
				IF _arg1 = "Graph" THEN Sendkeys "{Shift+Ctrl+Down}"
				IF _arg1 = "Word" THEN SendKeys "{Shift+Ctrl+Right}"
				IF _arg1 = "Line" THEN SendKeys "{Shift+End}"
				IF _arg1 = "Document" XOR _arg1 = "Doc" THEN SendKeys "{Shift+Ctrl+End}"
				END IF
			}
		}
		LIST "GLWDoc" {
			"Word"
			"Line"
			"Graph"
			"Document"  "Doc"
		}
		LIST "HomeEndTopBottom" {
			"Home"  "End"
			"Top"  "Bottom"
		}
		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSUddd>" {
			SCRIPT {
				IF _arg2 = "Line Down" THEN  _arg2 = "Line"
				IF _arg2 = "Graph Down" THEN  _arg2 = "Graph"
				IF _arg2 = "Screen Down" THEN  _arg2 = "Screen"
				p$ = _arg1 + "|" + _arg2
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
			}
		}
 
		COMMAND "Cursor <1-20> <GLRLWBALUSBALeftRtSSUddd>" {
			SCRIPT {
				IF _arg2 = "Line Down" THEN  _arg2 = "Line"
				IF _arg2 = "Graph Down" THEN  _arg2 = "Graph"
				IF _arg2 = "Screen Down" THEN  _arg2 = "Screen"
				p$ = _arg1 + "|" + _arg2
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
			}
		}
 
#7d. Cursor Placing -- combinations
		COMMAND "<1-20> <DULR> <AnotherInsert> Graph" {
			SCRIPT {
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				Wait 200
				IF _arg3 = "Another" THEN SendKeys "{End}{Enter 2}"
				IF _arg3 = "Insert" THEN SendKeys "{Home}{Enter 2}{Up}"
			}
		}
		COMMAND "<1-20> <DULR> <AnotherInsert> Line" {
			SCRIPT {
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				Wait 200
				IF _arg3 = "Another" THEN SendKeys "{End}{Enter}"
				IF _arg3 = "Insert" THEN SendKeys "{Home}{Enter}{Up}"
			}
		}
		LIST "Another Insert" {
			"Another"  "Insert"
		}
		COMMAND "<DULRHETopBottom> <1-20> <GLRLWBALUSBALeftRtSSU>" {
			SCRIPT {
				IF _arg1 = "Top" THEN _arg1 = "Ctrl+Home"
				IF _arg1 = "Bottom" THEN _arg1 = "Ctrl+End"
				SendKeys "{" + _arg1 + "}"
				p$ = _arg2 + "|" + _arg3
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
			}
		}
		LIST "DULRHETopBottom" {
			"Down"  "Up"  "Left"  "Right"  "Home"  "End"  "Top"  "Bottom"
		}
		COMMAND "<1-20> <DULR> <1-20> <GLRLWBALUSBALeftRtSSU>" {
			SCRIPT {
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				p$ = _arg3 + "|" + _arg4
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
			}
		}
		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSU> <1-20> <DULR>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
				SendKeys "{" + _arg4 + " " + _arg3 + "}"  
			}
		}
		COMMAND "<1-20> <GLRLWBALUSBALeftRtSDSU> <DULR>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
				SendKeys "{" + _arg3 + "}"  
			}
		}
		LIST "GLRLWBALUSBALeftRtSDSU" {
			"Letter"
			"Word"  "Before"  "After"
			"Before Left"  "After Left"
			"Before Right"  "After Right"
			"Line"  "Line Up"
			"Graph"  "Graph Up"
			"Graph Space"  "Graph Space Up"
			"Screen Down"  "Screen Up"
		}
#		COMMAND "<TopBottom> <1-20> <DULR> <1-20> <GLRLWBALUSBALeftRtSSU>" {
#			SCRIPT {
#				IF _arg1 = "Top" THEN SendKeys "{Ctrl+Home}"
#				IF _arg1 = "Bottom" THEN SendKeys "{Ctrl+End}"
#				SendKeys "{" + _arg3 + " " + _arg2 + "}"
#				p$ = _arg4 + "|" + _arg5
#				' GLRLWBALUSBALeftRtSSU at 48
#				DllCall "UttC.dll", 48, p$
#			}
#		}
		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSU> <1-20> <GLRLWBALUSBALeftRtSSU>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
				p$ = _arg3 + "|" + _arg4
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
			}
		}
		COMMAND "<1-20> <GLLWUDUs> <BeforeAfter>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2 + "|" + _arg3
				' GLLWUDUs at 47
				DllCall "UttC.dll", 47, p$
			}
		}
		COMMAND "<1-20thEnd> <BefreAftrBALeftRt>" {
			SCRIPT {
				HeardWord _arg1, "Word"
				IF _arg2 = "Before" XOR _arg2 = "Before Left" XOR _arg2 = "Before Right" THEN SendKeys "{Left}"
				IF _arg2 = "After" XOR _arg2 = "After Left" XOR _arg2 = "After Right" THEN SendKeys "{Right}"
				IF _arg2 = "Before Left" XOR _arg2 = "After Left" THEN SendKeys "{Left}"
				IF _arg2 = "Before Right" XOR _arg2 = "Before Left" THEN SendKeys "{Right}"
			}
		}
		LIST "BefreAftrBALeftRt" {
			"Before"  "After"
			"Before Left"  "After Left"
			"Before Right"  "After Right"
		}
		COMMAND "<1-20thEnd> <GGSLLW> <BeforeAfter>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				IF _arg3 = "Before" THEN SendKeys "{Left}"
				IF _arg3 = "After" THEN SendKeys "{Right}"
			}
		}
		LIST "BeforeAfter" {
			"Before"  "After"
		}
		COMMAND "Screen <UpDown> Screen <UpDown>" {
			SCRIPT {
				IF _arg1 = "Up" THEN SendKeys "{PgUp}"
				IF _arg1 = "Down" THEN SendKeys "{PgDn}"
				IF _arg2 = "Up" THEN SendKeys "{PgUp}"
				IF _arg2 = "Down" THEN SendKeys "{PgDn}"
			}
		}
#7e. Moving the cursor to a given GCLWS
		COMMAND "<GCLWSScreenSBottom> <1-100>" {
			SCRIPT {
				Arg2Minus = Val(_arg2) -1
				Arg2Minus = Str$(Arg2Minus)
				SendKeys "{Ctrl+Home}"
				IF _arg1 = "Line" THEN 
				SendKeys "{Down " + Arg2Minus + "}"
				SendKeys "{Home}{Shift+End}"
				Wait 300
				SendKeys "{Home}"
				END IF
				IF _arg1 = "Graph Space" XOR _arg1 = "Graph" THEN SendKeys "{Ctrl+Down " + Arg2Minus + "}"
				IF _arg1 = "Graph Space" THEN SendKeys "{Ctrl+Down " + Arg2Minus + "}"
				IF _arg1 = "Graph" XOR _arg1 = "Graph Space" THEN
				SendKeys "{Shift+Ctrl+Down}" 
				Wait 300
				SendKeys "{Ctrl+Left}"
				END IF
				IF _arg1 = "Word" THEN 
				SendKeys "{Ctrl+Right " + Arg2Minus + "}"
				SendKeys "{Shift+Ctrl+Right}"
				Wait 300
				SendKeys "{Ctrl+Left}"
				END IF
				IF _arg1 = "Character" THEN
				SendKeys "{Right " + Arg2Minus + "}"
				SendKeys "{Shift+Right}"
				Wait 300
				SendKeys "{Left}"
				END IF
				IF _arg1 = "Screen" THEN SendKeys "{PgDn " + Arg2Minus + "}"
				IF _arg1 = "Screen Bottom" THEN SendKeys "{Ctrl+End}{PgUp " + Arg2Minus + "}"
				IF _arg1 = "Sentence" THEN 
				SendKeys "{Ctrl+f}"
				loop& = Val(_arg2) -1
				while ( loop& )
				SendKeys "."
				SendKeys "{Enter}"
				loop& = loop& - 1
				wend
				SendKeys "{Esc}"
				SendKeys "{Right 2}"
				END IF
			}
		}
 		COMMAND "<GCLWSScreenSBottom> <1-9> <0-9>" {
			SCRIPT {
				Arg3Minus = Val(_arg3) -1
				Arg3Minus = Str$(Arg3Minus)
				SendKeys "{Ctrl+Home}"
				IF _arg1 = "Graph" XOR _arg1 = "Graph Space" THEN SendKeys "{Ctrl+Down " + _arg2 + "" + _arg3 + "}{Ctrl+Up}"
				IF _arg1 = "Graph Space" THEN SendKeys "{Ctrl+Down " + _arg2 + "" + _arg3 + "}{Ctrl+Up}"
				IF _arg1 = "Character" THEN 
				SendKeys "{Right " + _arg2 + "" + _arg3 + "}{Left}"
				SendKeys "{Shift+Right}"
				Wait 300
				SendKeys "{Left}"
				END IF
				IF _arg1 = "Line" THEN 
				SendKeys "{Down " + _arg2 + "" + _arg3 + "}{Up}"
				SendKeys "{Home}{Shift+End}"
				Wait 300
				SendKeys "{Ctrl+Left}"
				SendKeys "{Home}"
				END IF
				IF _arg1 = "Word" THEN 
				SendKeys "{Ctrl+Right " + _arg2 + "" + _arg3 + "}{Ctrl+Left}"
				SendKeys "{Shift+Ctrl+Right}"
				Wait 300
				SendKeys "{Ctrl+Left}"
				END IF
				IF _arg1 = "Graph" XOR _arg1 = "Graph Space" THEN
				SendKeys "{Shift+Ctrl+Down}" 
				Wait 300
				SendKeys "{Ctrl+Left}"
				END IF
				IF _arg1 = "Screen" THEN SendKeys "{PgDn " + _arg2 + "" + Arg3Minus + "}"
				IF _arg1 = "Screen Bottom" THEN SendKeys "{Ctrl+End}{PgUp " + _arg2 + "" + Arg3Minus + "}"
			}
		}
		LIST "1-9" {
			"1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9" 
		}
		COMMAND "<GCLWSScreen> <1-5> <0-9> <0-9>" {
			SCRIPT {
				Arg4Minus = Val(_arg4) -1
				Arg4Minus = Str$(Arg4Minus)
				SendKeys "{Ctrl+Home}"
				IF _arg1 = "Graph" XOR _arg1 = "Graph Space" THEN SendKeys "{Ctrl+Down " + _arg2 + "" + _arg3 + "" + _arg4 + "}{Ctrl+Up}"
				IF _arg1 = "Graph Space" THEN SendKeys "{Ctrl+Down " + _arg2 + "" + _arg3 + "" + _arg4 + "}{Ctrl+Up}"
				IF _arg1 = "Character" THEN 
				SendKeys "{Right " + _arg2 + "" + _arg3 + "" + _arg4 + "}{Left}"
				SendKeys "{Shift+Right}"
				Wait 300
				SendKeys "{Left}"
				END IF
				IF _arg1 = "Line" THEN 
				SendKeys "{Down " + _arg2 + "" + _arg3 + "" + _arg4 + "}{Up}"
				SendKeys "{Home}{Shift+End}"
				Wait 300
				SendKeys "{Ctrl+Left}"
				END IF
				IF _arg1 = "Word" THEN 
				SendKeys "{Ctrl+Right " + _arg2 + "" + _arg3 + "" + _arg4 + "}{Ctrl+Left}"
				SendKeys "{Shift+Ctrl+Right}"
				Wait 300
				SendKeys "{Ctrl+Left}"
				END IF
				IF _arg1 = "Graph" XOR _arg1 = "Graph Space" THEN
				SendKeys "{Shift+Ctrl+Down}" 
				Wait 300
				SendKeys "{Ctrl+Left}"
				END IF
				IF _arg1 = "Screen" THEN SendKeys "{PgDn " + _arg2 + "" + _arg3 + "" + Arg4Minus + "}"
				IF _arg1 = "Screen Bottom" THEN SendKeys "{Ctrl+End}{PgUp " + _arg2 + "" + _arg3 + "" + Arg4Minus + "}"
			}
		}
		LIST "1-5" {
			"1"  "2" "3"  "4"  "5"
		}
		LIST "0-9" {
			"0"   "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"   
		}
 
#7f. Moving the cursor to a given GCLWS combinations
		COMMAND "<GCLWSScreenSBottom> <1-100> <1-100> <DULR>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4
			}
		}
		LIST "GCLWSScreenSBottom" {
			"Character"
			"Word"
			"Line"
			"Graph"  "Graph Space"
			"Screen"  "Screen Bottom"
		}
		COMMAND "<GCLWSScreen> <1-100> <1-20> <GLLWDUABUSs>" {
			SCRIPT {
			HeardWord _arg1, _arg2
			HeardWord _arg3, _arg4
			}
		}
		COMMAND "<GCLWSScreen> <1-100> <1-20thEnd> <GGSLLW>" {
			SCRIPT {
			HeardWord _arg1, _arg2
			HeardWord _arg3, _arg4
			}
		}
		LIST "GCLWSScreen" {
			"Character"
			"Word"
			"Line"
			"Graph"  "Graph Space"
			"Screen"
		}
 
#7g. Selecting -- basic
		COMMAND "<This> <GLLWRUSDocTopbottomBeforeAfterBALR>" {
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg2
			}
		}
		COMMAND "Graph Space" {
			SCRIPT {
				SendKeys "{Ctrl+Down}{Ctrl+Down}"
			}
		}
		COMMAND "Graph Space Up" {
			SCRIPT {
				SendKeys "{Ctrl+Up}{Ctrl+Up}"
			}
		}
		COMMAND "<1-100> <DULRs>" {
			SCRIPT {
				IF _arg2 = "Downs" THEN SendKeys "{Shift+Down " + _arg1 + "}"
				IF _arg2 = "Ups" THEN SendKeys "{Shift+Up " + _arg1 + "}"
				IF _arg2 = "Rights" THEN SendKeys "{Shift+Right " + _arg1 + "}"
				IF _arg2 = "Lefts" THEN SendKeys "{Shift+Left " + _arg1 + "}"
				IF _arg2 = "Screens" XOR _arg2 = "Screen Downs" THEN SendKeys "{Shift+PgDn " + _arg1 + "}"
				IF _arg2 = "Screen Ups" THEN SendKeys "{Shift+PgUp " + _arg1 + "}"
			}
		}
		COMMAND "Cursor <1-100> <DULRs>" {
			SCRIPT {
				IF _arg2 = "Downs" THEN SendKeys "{Shift+Down " + _arg1 + "}"
				IF _arg2 = "Ups" THEN SendKeys "{Shift+Up " + _arg1 + "}"
				IF _arg2 = "Rights" THEN SendKeys "{Shift+Right " + _arg1 + "}"
				IF _arg2 = "Lefts" THEN SendKeys "{Shift+Left " + _arg1 + "}"
				IF _arg2 = "Screens" XOR _arg2 = "Screen Downs" THEN SendKeys "{Shift+PgDn " + _arg1 + "}"
				IF _arg2 = "Screen Ups" THEN SendKeys "{Shift+PgUp " + _arg1 + "}"
			}
		}
		COMMAND "<1-40> <ScreensSupsSDowns>" {
			SCRIPT {
				IF _arg2 = "Screens" XOR _arg2 = "Screen Downs" THEN SendKeys "{Shift+PgDn " + _arg1 + "}"
				IF _arg2 = "Screen Ups" THEN SendKeys "{Shift+PgUp " + _arg1 + "}"
			}
		}
		LIST "ScreensSupsSDowns" {
			"Screens" "Screen Ups"  "Screen Downs"
		}
		COMMAND "<1-20> <GLLWDUABUSs>" {
			SCRIPT {
				IF _arg2 = "Graph Space Ups" THEN SendKeys "{Ctrl+Up}"
				IF _arg2 = "Befores" THEN
				SendKeys "{Shift+Ctrl+Left " + _arg1 + "}" 
				ELSE
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				END IF 
			}
		}
		COMMAND "Cursor <1-20> <GLLWDUABUSs>" {
			SCRIPT {
				IF _arg2 = "Graph Space Ups" THEN SendKeys "{Ctrl+Up}"
				IF _arg2 = "Befores" THEN
				SendKeys "{Shift+Ctrl+Left " + _arg1 + "}" 
				ELSE
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				END IF 
			}
		}
		COMMAND "Stay <1-20> <GLLWDUABUSs>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' StayGLLWDUABUSs at 87
				DllCall "UttC.dll", 87, p$
			}
		}
		COMMAND "<0-10> <0-10> <GGSLLWSSUs>" {
			SCRIPT {
				IF _arg1 = "Graphs" XOR _arg1 = "Graph Spaces" THEN SendKeys "{Ctrl+Up}"
				IF _arg3 = "Graph Spaces" THEN 
				SendKeys "{Ctrl+Up}"
				loop& = Val(_arg1)
				while ( loop& )
				SendKeys "{Ctrl+Up}"
				loop& = loop& - 1
				wend
				SendKeys "{Shift+Ctrl+Down}"
				END IF
				p$ = _arg1 + "|" + _arg2 + "|" + _arg3
				' GGSLLWSSUs at 45
				DllCall "UttC.dll", 45, p$
			}
		}
		LIST "GGSLLWSSUs" {
			"Letters"
			"Words"
			"Lines"
			"Graphs"  "Graph Spaces"
			"Screens"  "Screen Ups"
		}
		COMMAND "<1-20thEnd> <GGSLLW>" {
			SCRIPT {
				IF _arg2 = "word" THEN
				SendKeys "{Home}"
				if _arg1 = "End" then 
				SendKeys "{End}{Shift+Ctrl+Left}"
				ELSE
				IF _arg1 = "1st" XOR _arg1 = "2nd" XOR _arg1 = "3rd" XOR _arg1 = "4th" XOR _arg1 = "5th" XOR _arg1 = "6th" XOR _arg1 = "7th" XOR _arg1 = "8th" XOR _arg1 = "9th" THEN 
				SendKeys "{Ctrl+Right " + MID$(_arg1,0,1) + "}"
				ELSE
				SendKeys "{Ctrl+Right " + MID$(_arg1,0,2) + "}"
				END IF
				SendKeys "{Ctrl+Left}{Shift+Ctrl+Right}"
				END IF
				END IF
				IF _arg2 = "Line" THEN
				SendKeys "{Right}{Ctrl+Up}"
				IF _arg1 = "End" THEN 
				SendKeys "{Ctrl+End}{Home}{Shift+End}"
				ELSE
				IF _arg1 = "1st" XOR _arg1 = "2nd" XOR _arg1 = "3rd" XOR _arg1 = "4th" XOR _arg1 = "5th" XOR _arg1 = "6th" XOR _arg1 = "7th" XOR _arg1 = "8th" XOR _arg1 = "9th" THEN 
				SendKeys "{Down " + MID$(_arg1,0,1) + "}"
				ELSE
				SendKeys "{Down " + MID$(_arg1,0,2) + "}"
				END IF
				SendKeys "{Up}{Home}{Shift+End}"
				END IF
				END IF
				IF _arg2 = "Letter" THEN 
				SendKeys "{Ctrl+Left}"
				IF _arg1 = "End" THEN 
				SendKeys "{End}"
				ELSE
				IF _arg1 = "1st" XOR _arg1 = "2nd" XOR _arg1 = "3rd" XOR _arg1 = "4th" XOR _arg1 = "5th" XOR _arg1 = "6th" XOR _arg1 = "7th" XOR _arg1 = "8th" XOR _arg1 = "9th" THEN 
				SendKeys "{Right " + MID$(_arg1,0,1) + "}"
				ELSE
				SendKeys "{Right " + MID$(_arg1,0,2) + "}"
				END IF
				SendKeys "{Left}{Shift+Right}"
				END IF
				END IF
				IF _arg2 = "Graph" XOR _arg2 = "GraphSpace" THEN 
				SendKeys "{Ctrl+Home}"
				IF _arg1 = "End" THEN 
				SendKeys "{Ctrl+End}{Ctrl+Up}{Shift+Ctrl+Down}"
				IF _arg2 = "GraphSpace" THEN SendKeys "{Shift+Ctrl+Down}"
				ELSE
				IF _arg1 = "1st" XOR _arg1 = "2nd" XOR _arg1 = "3rd" XOR _arg1 = "4th" XOR _arg1 = "5th" XOR _arg1 = "6th" XOR _arg1 = "7th" XOR _arg1 = "8th" XOR _arg1 = "9th" THEN 
				SendKeys "{Ctrl+Down " + MID$(_arg1,0,1) + "}"
				IF _arg2 = "GraphSpace" THEN SendKeys "{Ctrl+Down " + MID$(_arg1,0,1) + "}{Ctrl+Up}"
				ELSE
				SendKeys "{Ctrl+Down " + MID$(_arg1,0,2) + "}"
				IF _arg2 = "GraphSpace" THEN SendKeys "{Ctrl+Down " + MID$(_arg1,0,2) + "}{Ctrl+Up}"
				END IF
				SendKeys "{Ctrl+Up}{Shift+Ctrl+Down}"
				IF _arg2 = "GraphSpace" THEN SendKeys "{Shift+Ctrl+Down}"
				END IF
				END IF
			}
		}
#7h. Moving and selecting -- 2 steps
		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSU> <1-20> <GLLWDUABUSs>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
				Wait 100
				p$ = _arg3 + "|" + _arg4
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
			}
		}
		COMMAND "<DULRHomeEndTopBottom> <1-20> <GLLWDUABUSsNoWordsAftersBefores>" {
			SCRIPT {
'				IF _arg1 = "Top" THEN _arg1 = "Ctrl+Home"
'				IF _arg1 = "Bottom" THEN _arg1 = "Ctrl+End"
				SendKeys "{" + _arg1 + "}"
				Wait 100
				p$ = _arg2 + "|" + _arg3
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
			}
		}
		COMMAND "<1-20> <GLLWDUABUSs> <1-20> <GLLWDUABUSs>" {
			SCRIPT {
				IF _arg2 = "Graph Space Ups" THEN SendKeys "{Ctrl+Up}"
				IF _arg2 = "Befores" THEN
				SendKeys "{Shift+Ctrl+Left " + _arg1 + "}" 
				ELSE
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				END IF 
				Wait 100
				IF _arg4 = "Graph Space Ups" THEN SendKeys "{Ctrl+Up}"
				IF _arg4 = "Befores" THEN
				SendKeys "{Shift+Ctrl+Left " + _arg3 + "}" 
				ELSE
				p$ = _arg3 + "|" + _arg4
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				END IF 
			}
		}
		COMMAND "<1-20> <GLLWDUABUSs> <LeftRight>" {
			SCRIPT {
				IF _arg2 = "Graph Space Ups" THEN SendKeys "{Ctrl+Up}"
				IF _arg2 = "Befores" THEN
				SendKeys "{Shift+Ctrl+Left " + _arg1 + "}" 
				ELSE
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				END IF 
				Wait 100
				IF _arg3 = "Left" THEN SendKeys "{Shift+Left}"
				IF _arg3 = "Right" THEN SendKeys "{Shift+Right}"
			}
		}
		COMMAND " <LeftRight> <1-20> <GLLWDUABUSs>" {
			SCRIPT {			
				IF _arg1 = "Left" THEN SendKeys "{Shift+Left}"
				IF _arg1 = "Right" THEN SendKeys "{Shift+Right}"
				Wait 100
				IF _arg3 = "Graph Space Ups" THEN SendKeys "{Ctrl+Up}"
				IF _arg3 = "Befores" THEN
				SendKeys "{Shift+Ctrl+Left " + _arg2 + "}" 
				ELSE
				p$ = _arg2 + "|" + _arg3
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				END IF 
			}
		}
		LIST "LeftRight" {
			"Left"  "Right"
		}
		COMMAND "<DULRHomeEndTopBottom> <1-20> <WordsBeforesAfters>" {
			SCRIPT {
'				IF _arg1 = "Top" THEN _arg1 = "Ctrl+Home"
'				IF _arg1 = "Bottom" THEN _arg1 = "Ctrl+End"
				SendKeys "{" + _arg1 + "}"
				Wait 100
				IF _arg3 = "Words" XOR _arg3 = "Afters" THEN SendKeys "{Shift+Ctrl+Right " + _arg2 + "}"
				IF _arg3 = "Befores" THEN SendKeys "{Shift+Ctrl+Left " + _arg2 + "}"
			}
		}
		COMMAND "<1-20> <DULRSSU> <1-20> <GLLWDUABUSs>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				Wait 100
				p$ = _arg3 + "|" + _arg4
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> <1-20> <GLLWDUABUSs>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				IF _arg2 = "Word" AND _arg4 = "Words" THEN
				SendKeys "{Ctrl+Left}"
				END IF
				IF _arg2 = "Word" AND _arg4 = "Letters" THEN
				SendKeys "{Ctrl+Left}"
				END IF
				Wait 100
				p$ = _arg3 + "|" + _arg4
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> End <1-20> <GLLWDUABUSs>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				Wait 100
				SendKeys "{End}"
				Wait 100
				p$ = _arg3 + "|" + _arg4
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> <1-20> <DULRSSU>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				Wait 100
				HeardWord _arg3, _arg4
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> End <1-20> <DULRSSU>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				Wait 100
				IF _arg2 = "Word" THEN SendKeys "{Ctrl+Right}"
				IF _arg2 = "Line" THEN SendKeys "{End}"
				IF _arg2 = "Graph" THEN SendKeys "{Ctrl+Down}"
				Wait 100
				HeardWord _arg3, _arg4
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> <DULR>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				Wait 100
				SendKeys "{" + _arg3 + "}"
			}
		}
		COMMAND "<DULR> <1-20thEnd> <GGSLLW>" {
			SCRIPT {
				SendKeys "{" + _arg1 + "}"
				Wait 100
				HeardWord _arg2, _arg3  
			}
		}
		COMMAND "<1-20> <DULR> <1-20thEnd> <GGSLLW>" {
			SCRIPT {
				SendKeys "{" + _arg2 + " " + _arg1 + "}"
				Wait 100
				HeardWord _arg3, _arg4  
			}
		}
		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSU> <1-20thEnd> <GGSLLW>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLRLWBALUSBALeftRtSSU at 48
				Wait 100
				DllCall "UttC.dll", 48, p$
				HeardWord _arg3, _arg4  
			}
		}
		COMMAND "<1-20thEnd> <GGSLLW> <1-20thEnd> <GGSLLW>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				Wait 100
				IF _arg2 = "GraphSpace" THEN SendKeys "{Ctrl+Up}"
				HeardWord _arg3, _arg4  
			}
		}
		COMMAND "<1-100> <DULRs> <1-100> <DULRs>" {
			SCRIPT {
				IF _arg2 = "Downs" THEN SendKeys "{Shift+Down " + _arg1 + "}"
				IF _arg2 = "Ups" THEN SendKeys "{Shift+Up " + _arg1 + "}"
				IF _arg2 = "Rights" THEN SendKeys "{Shift+Right " + _arg1 + "}"
				IF _arg2 = "Lefts" THEN SendKeys "{Shift+Left " + _arg1 + "}"
				Wait 100
				IF _arg4 = "Downs" THEN SendKeys "{Shift+Down " + _arg3 + "}"
				IF _arg4 = "Ups" THEN SendKeys "{Shift+Up " + _arg3 + "}"
				IF _arg4 = "Rights" THEN SendKeys "{Shift+Right " + _arg3 + "}"
				IF _arg4 = "Lefts" THEN SendKeys "{Shift+Left " + _arg3 + "}"
			}
		}	
#7i. Moving and selecting -- 3 steps
#*		COMMAND "<DULRHomeEndTopBottom> <DULRHomeEnd> <1-20> <GLLWDUABUSsNoWordsAftersBefores>" {
#*		COMMAND "<DULRHomeEndTopBottom> <1-20> <DULR> <1-20> <GLLWDUABUSsNoWordsAftersBefores>" {
#*		COMMAND "<1-20> <DULR> <DULRHomeEnd> <1-20> <GLLWDUABUSsNoWordsAftersBefores>" {
#*		COMMAND "<DULRHomeEndTopBottom> <DULRHomeEnd> <1-20> <WordsBeforesAfters>" {
#*		COMMAND "<DULRHomeEndTopBottom> <1-20> <DULR> <1-20> <WordsBeforesAfters>" {
#*		COMMAND "<1-20> <DULR> <DULRHomeEnd> <1-20> <WordsBeforesAfters>" {
 
#7j. Moving and selecting -- special combinations
 
		COMMAND "<WordThisW> Left" {
			SCRIPT {
				SendKeys "{Ctrl+Right}{Left}{Shift+Ctrl+Left}"
			}
		}
		LIST "WordThisW" {
			"Word"
			"This Word"
		}	
		COMMAND "Touch This <GLLWRUSDocTopbottomBeforeAfterBALR>" {
			SCRIPT {
				ButtonClick
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg2
			}
		}
		LIST "GLLWRUSDocTopbottomBeforeAfterBALR" {
			"Letter"  "Lefts"  "Rights"
			"Befores"  "Afters"  "Word"  
#			"Word Top"  "Word Bottom"
			"Line"  "Line Up"  "Line Top"  "Line Bottom"
			"Graph"  "Graph Space"  "Graph Up"  "Graph Space Up"  
#			"Graph Top"  "Graph Bottom"
			"Screen"  "Screen Up"
			"Document"  "Document Top"  "Document Bottom"
			"Doc"  "Doc Top"  "Doc Bottom"
			"Before"  "After"
			"Before Left"  "Before Right"
			"After Left"  "After Right"
		}
 
#7k. Select and Find 
		COMMAND "<ThisWordLine> <FindTopFBottomFLeftFRightF>" {
			SCRIPT {
				IF _arg1 = "Word" THEN SendKeys "{Left}{Ctrl+Right}{Shift+Ctrl+Left}"
				IF _arg1 = "Line" THEN SendKeys "{Home}{Shift+End}"
				SendKeys "{ctrl+c}"
				Wait 50
				IF _arg2 = "Left Find" THEN SendKeys "{Left}"
				IF _arg2 = "Right Find" THEN SendKeys "{Right}"
				IF _arg2 = "Top Find" THEN SendKeys "{Ctrl+Home}"
				IF _arg2 = "Bottom Find" THEN SendKeys "{Ctrl+End}"
				Wait 100
				IF _arg1 = "Line" THEN SendKeys "{End}"
				Wait 10
				SendKeys "{Ctrl+f}"
				Wait 100
				SendKeys "{Ctrl+v}"
				isfox$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Firefox", 512 )
				IF (instr(isfox$,"true")) > 0 THEN
				Wait 200
				SendKeys "{Esc}"
				ELSE
				isfox$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "Adobe", 512 )
				IF (instr(isfox$,"true")) > 0 THEN
				Wait 200
				SendKeys "{Enter}"
				Wait 500
				SendKeys "{F6}"
				ELSE
				vol$ = DllCall$("UttC.dll", "GetAudioVolumeByPercent", "", 500)
				' SetAudioVolumeByPercent at 119
				DllCall "UttC.dll", 119, "0"
				Wait 200
				SendKeys "{Enter}"
				Wait 500
				SendKeys "{Ctrl+f}"
				SendKeys "{Esc}"
				Wait 10
				' SetAudioVolumeByPercent at 119
				DllCall "UttC.dll", 119, vol$
				END IF 
				END IF 
			}
		}
	
#*		COMMAND "Clip Find"{
#*		COMMAND "<1-20> <LeftsRightsBeforesAftersWords> <FindTopFBottomFLeftFRightF>" {
#*		COMMAND "<1-10> <1-10> <Words> <FindTopFBottomFLeftFRightF>" {
 
#7l. Select, Find, Move 
#*		COMMAND "<ThisWordLine> <FindTopFBottomFLeftFRightF> <TabScreenUpSDown>" {
#*		COMMAND "<1-20> <LeftsRightsBeforesAftersWords> <FindTopFBottomFLeftFRightF> <TabScreenUpSDown>" {
#*		COMMAND "<1-10> <1-10> <Words> <FindTopFBottomFLeftFRightF> <TabScreenUpSDown>" {
#*		LIST "TabScreenUpSDown" {
 
		LIST "1-40" {
			 "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
			 "10" "11" "12" "13" "14" "15" "16" "17" "18" "19"
			 "20" "21" "22" "23" "24" "25" "26" "27" "28" "29"
			 "30" "31" "32" "33" "34" "35" "36" "37" "38" "39"
			 "40" 
		}
 
#7m. Select and find Stay
#*		COMMAND "<ThisWordLine> <FindTopFBottomFLeftFRightF> Stay" {
#*		COMMAND "<1-20> <LeftsRightsBeforesAftersWords> <FindTopFBottomFLeftFRightF> Stay" {
#*		COMMAND "<1-10> <1-10> <Words> <FindTopFBottomFLeftFRightF> Stay" {
 
#7n. Select and find Repeat, Wait Repeat
#*		COMMAND "<ThisWordLine> <FindTopFBottomFLeftFRightF> Repeat <1-10>" {
#*		COMMAND "<1-20> <LeftsRightsBeforesAftersWords> <FindTopFBottomFLeftFRightF> Repeat <1-10>" {
#*		COMMAND "<1-10> <1-10> <Words> <FindTopFBottomFLeftFRightF> Repeat <1-10>" {
#*		COMMAND "<ThisWordLine> <FindTopFBottomFLeftFRightF> Wait Repeat <1-10>" {
#*		COMMAND "<1-20> <LeftsRightsBeforesAftersWords> <FindTopFBottomFLeftFRightF> Wait Repeat <1-10>" {
#*		COMMAND "<1-10> <1-10> <Words> <FindTopFBottomFLeftFRightF> Wait Repeat <1-10>" {
#*		COMMAND "<ThisWordLine> <FindTopFBottomFLeftFRightF> Wait <1-10> Repeat <1-10>" {
 
		LIST "ThisWordLine" {
			"This"
			"Word"
			"Line"
		}
#*		COMMAND "<1-20> <LeftsRightsBeforesAftersWords> <FindTopFBottomFLeftFRightF> Wait <1-10> Repeat <1-10>" {
 
#*		LIST "LeftsRightsBeforesAftersWords" {
 
#*		COMMAND "<1-10> <1-10> <Words> <FindTopFBottomFLeftFRightF> Wait <1-10> Repeat <1-10>" {
 
		LIST "1-10" {
			"1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" 
		}
#*		LIST "Words" {
 
		LIST "FindTopFBottomFLeftFRightF" {
			"Find"  "Top Find"  "Bottom Find"  "Left Find"  "Right Find"
		}
 
#7o. Moving by given character
#*		COMMAND "<SpellsInBeforeInAfter> <AlphChar0-9Space>" {
#*		COMMAND "<SpellsInBeforeInAfter> <AlphChar0-9Space> <AlphChar0-9Space>" {
#*		COMMAND "<SpellsInBeforeInAfter> <AlphChar0-9Space> <AlphChar0-9Space> <AlphChar0-9Space>" {
#*		LIST "SpellsInBeforeInAfter" {
 
 
#7r. Copying, Cutting, Pasting, Deleting, Formatting -- basic
 
		COMMAND "<AllThis> <CutCopyPasteDeleteTouch>" {
			SCRIPT {
				IF _arg1 = "All" THEN SendKeys "{Ctrl+a}"
				Wait 10
				IF _arg1 = "All" THEN SendKeys "{Ctrl+Home}"
				Wait 10
				IF _arg1 = "All" THEN SendKeys "{Shift+Ctrl+End}"
				IF _arg2 = "Copy" THEN 
				SendKeys "{Ctrl+c}"
				Wait 100
				SendKeys "{Right}"
				END IF
				IF _arg2 = "Cut" THEN SendKeys "{Ctrl+x}"
				IF _arg2 = "Paste" THEN SendKeys "{Ctrl+v}"
				IF _arg2 = "Delete" THEN SendKeys "{Del}"
				IF _arg2 = "Touch" THEN ButtonClick
			}
		}
		LIST "AllThis" {
			"All"
			"This"
		}
		LIST "CutCopyPasteDeleteTouch" {
			"Cut"  "Copy"
			"Paste"
			"Delete" "Touch"
		}
		COMMAND "<CopyCut> To <TopBottomBEnterTE>" {
			SCRIPT {				
				IF _arg1 = "Copy" THEN SendKeys "{Ctrl+c}"
				IF _arg1 = "Cut" THEN SendKeys "{Ctrl+x}"
				Wait 100
				IF _arg2 = "Top" XOR _arg2 = "Top Enter" THEN SendKeys "{Ctrl+Home}{Enter}{Up}"
				IF _arg2 = "Bottom" XOR _arg2 = "Bottom Enter" THEN SendKeys "{Ctrl+End}{Enter}"
				Wait 100
				SendKeys "{Ctrl+v}"
				IF _arg2 = "Top Enter" THEN SendKeys "{Enter}{Up}"
				IF _arg2 = "Bottom Enter" THEN SendKeys "{Enter}"
			}
		}
#*		COMMAND "<CopyCut> To <TopBottomBEnterTE> <TopBottom>" {
#*		COMMAND "<LineGraphGSpace> <CopyCut> To <TopBottomBEnterTE>" {
#*		COMMAND "<LineGraphGSpace> <CopyCut> To <TopBottomBEnterTE> <TopBottom>" {
#*		COMMAND "<1-20> <UpDown> <LineGraphGSpace> <CopyCut> To <TopBottomBEnterTE>" {
#*		COMMAND "<1-20> <UpDown> <LineGraphGSpace> <CopyCut> To <TopBottomBEnterTE> <TopBottom>" {
 
		LIST "UpDown" {
			"Up"
			"Down"
		}
		LIST "LineGraphGSpace" {
			"Line" "Graph"  "Graph Space"
		}
		LIST "CopyCut" {
			"Copy"  "Cut"
		}
		LIST "TopBottom" {
			"Top"  "Bottom"
		}
		LIST "TopBottomBEnterTE" {
			"Top"  "Bottom" "Bottom Enter"  "Top Enter"
		}
		COMMAND "All Select" {
			SCRIPT {
				SendKeys "{Ctrl+a}{Ctrl+Home}{Shift+Ctrl+End}"
			}
		}
		COMMAND "<This> <CapsBoldItalicCopyPasteCutCDeleteCBackspaceCEnterCSpaceAnotherInsertAGraphIGIsolateAINextNew>" {
			SCRIPT {
				isIndesign$ = DllCall$( "UttC.dll", "IsForegroundWindowByTitleRE", "InDesign", 512 )
				IF (instr(isIndesign$,"true")) > 0 THEN
				IF _arg2 = "Bold" THEN SendKeys "{Shift+Ctrl+b}"
				IF _arg2 = "Bold Italic" THEN SendKeys "{Shift+Ctrl+b}{Shift+Ctrl+i}"
				IF _arg2 = "Italic" THEN SendKeys "{Shift+Ctrl+i}"
				IF _arg2 = "Underline" THEN SendKeys "{Shift+Ctrl+u}"
				ELSE
				IF _arg2 = "Caps" THEN HeardWord "Add", "Caps"
				IF _arg2 = "All Caps" THEN HeardWord "Add", "\All-Caps"
				IF _arg2 = "No Caps" THEN HeardWord "Add", "\No-Caps"
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg2
				END IF
			}
		}
		LIST "This" {
			"This"
		}
		LIST "CapsBoldItalicCopyPasteCutCDeleteCBackspaceCEnterCSpaceAnotherInsertAGraphIGIsolateAINextNew" {
			"New"  "Next"  "Last"
			"Isolate"  "Another Isolate"
			"Another"  "Another Line"  "Another Graph"
			"Insert Line"  "Insert Graph"
			"Bold"  "Bold Italic"  "Italic" "Underline"
			"Cut Delete"  "Cut Space"  "Cut Enter"  "Cut Backspace"  
			"Delete Delete"  "Delete Space"  "Delete Enter"  "Delete Backspace"
			"Caps"  "All Caps"  "No Caps"
			"Cut"  "Copy"
			"Paste" "Delete"
		}
 
#7s. Selecting and Copying, Cutting, Pasting, Deleting, Formatting
		COMMAND "<GLLWBsAsUSDocTopBottom> <CutCopyPasteDeleteBoldItalicTouch>" {
			SCRIPT {
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg1
				IF _arg2 = "Touch" THEN
				ButtonClick
				ELSE
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg2
				END IF
			}
		}
		COMMAND "<1-20> <GLLWDUABUSs> <CutCopyPasteDeleteBoldItalicTouch>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2
				' GLLWDUABUSs at 46
				DllCall "UttC.dll", 46, p$
				IF _arg3 = "Touch" THEN
				ButtonClick
				ELSE
				Wait 200
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg3
				END IF
			}
		}
		COMMAND "<1-100> <DULRs> <CutCopyPasteDeleteBoldItalicTouch>" {
			SCRIPT {
				IF _arg2 = "Downs" THEN SendKeys "{Shift+Down " + _arg1 + "}"
				IF _arg2 = "Ups" THEN SendKeys "{Shift+Up " + _arg1 + "}"
				IF _arg2 = "Rights" THEN SendKeys "{Shift+Right " + _arg1 + "}"
				IF _arg2 = "Lefts" THEN SendKeys "{Shift+Left " + _arg1 + "}"
				Wait 300
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg3
			}
		}
		COMMAND "<0-10> <0-10> <CutCopyPasteDeleteBoldItalicTouch>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2 + "|" + "Words"
				' GGSLLWSSUs at 45
				DllCall "UttC.dll", 45, p$
				IF _arg3 = "Touch" THEN
				ButtonClick
				ELSE
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg3
				END IF
			}
		}
		COMMAND "<0-10> <0-10> <GGSLLWs> <CutCopyPasteDeleteBoldItalicTouch>" {
			SCRIPT {
				p$ = _arg1 + "|" + _arg2 + "|" + _arg3
				' GGSLLWSSUs at 45
				DllCall "UttC.dll", 45, p$
				IF _arg4 = "Touch" THEN
				ButtonClick
				ELSE
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg4
				END IF
			}
		}
		LIST "GGSLLWs" {
			"Letters"  "Words"  "Lines"  "Graphs"  "Graph Spaces"
		}
		LIST "0-10" {
			"0" "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" 
		}
		COMMAND "<1-20thEnd> <GGSLLW> <CutCopyPasteDeleteBoldItalicTouch>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				IF _arg3 = "Touch" THEN
				ButtonClick
				ELSE
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg3
				END IF
			}
		}
		COMMAND "<1-100> <DULRs> <1-100> <DULRs> <CutCopyPasteDeleteBoldItalicTouch>" {
			SCRIPT {
				HeardWord _arg1, _arg2, _arg3, _arg4
				IF _arg5 = "Touch" THEN
				ButtonClick
				ELSE
				' ThisCommand at 91
				DllCall "UttC.dll", 91, _arg5
				END IF
			}
		}
 
#7t. Moving and Copying, Cutting, Pasting, Deleting Formatting
 		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSUddd> <BackspacePasteDeleteBoldItalicTouch>" {
			SCRIPT {
				IF _arg2 = "Line Down" THEN  _arg2 = "Line"
				IF _arg2 = "Graph Down" THEN  _arg2 = "Graph"
				IF _arg2 = "Screen Down" THEN  _arg2 = "Screen"
				p$ = _arg1 + "|" + _arg2
				' GLRLWBALUSBALeftRtSSU at 48
				DllCall "UttC.dll", 48, p$
 				IF _arg3 = "Touch" THEN
				ButtonClick
				ELSE
				IF _arg3 = "Backspace" THEN
				SendKeys "{Backspace}"
				ELSE
				Wait 200
				' ThisCommand at 91
				DllCall "UttC.dll",91, _arg3
				END IF
				END IF
			}
		}
		LIST "BackspacePasteDeleteBoldItalicTouch" {
			"Backspace"	"Paste"	"Delete"
			"Bold"  "Bold Italic" "Italic"  "Underline" "Touch"
		}
 
#7u. Moving and selecting and Copying, Cutting, Pasting, Deleting Formatting
#*		COMMAND "<1-20> <DULRSSU> <GLLWBsAsUSDocTopBottom> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<1-20thEnd> <GGSLLW> <1-20> <GLLWDUABUSs> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<1-20thEnd> <GGSLLW> <1-20thEnd> <GGSLLW> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSU> <1-20thEnd> <GGSLLW> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<1-20> <DULR> <1-20thEnd> <GGSLLW> <CutCopyPasteDeleteBoldItalicTouch>" {
#* 		COMMAND "<DULR> <1-20thEnd> <GGSLLW> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSU> <1-20> <GLLWDUABUSs> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSU> <GLLWBsAsUSDocTopBottom> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<DULRHE> <GLLWBsAsUSDocTopBottom> <CutCopyPasteDeleteBoldItalicTouch>" {
		
		LIST "GLLWBsAsUSDocTopBottom" {
			"Letter"  "Lefts"  "Rights"
			"Befores"  "Afters"  "Word"  
#			"Word Top"  "Word Bottom"
			"Line"  "Line Up"  "Line Top"  "Line Bottom"
			"Graph"  "Graph Space"  "Graph Up"  "Graph Space Up"  
#			"Graph Top"  "Graph Bottom"
			"Screen"  "Screen Up"
			"Document"  "Document Top"  "Document Bottom"
			"Doc"  "Doc Top"  "Doc Bottom"
		}
#*		COMMAND "<DULRHE> <1-20> <GLRLWBALUSBALeftRtSSU> <PasteDeleteBoldItalicTouch>" {
#*		COMMAND "<1-20> <DULRSSU> <1-20> <GLRLWBALUSBALeftRtSSU> <PasteDeleteBoldItalicTouch>" {	
#*		LIST "PasteDeleteBoldItalicTouch" {
 
#*		COMMAND "<1-20> <DULRSSU> <1-20> <GLLWDUABUSs> <CutCopyPasteDeleteBoldItalicTouch>" {
 
		LIST "DULRSSU" {
			"Left"  "Right"  "Down"  "Up"
			"Screen"  "Screen Down"  "Screen Up"
		}
#*		COMMAND "<DULRHomeEndTopBottom> <1-20> <GLLWDUABUSsNoWordsAftersBefores> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<DULRHomeEndTopBottom> <1-20> <WordsBeforesAfters> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<DULRHomeEndTopBottom> <DULRHomeEndTopBottom> <1-20> <GLLWDUABUSsNoWordsAftersBefores> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<DULRHomeEndTopBottom> <1-20> <DULR> <1-20> <GLLWDUABUSsNoWordsAftersBefores> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<1-20> <DULR> <DULRHomeEndTopBottom> <1-20> <GLLWDUABUSsNoWordsAftersBefores> <CutCopyPasteDeleteBoldItalicTouch>" {
		
		LIST "GLLWDUABUSsNoWordsAftersBefores" {
			"Letters"  "Lefts"  "Rights"
			"Lines"  "Line Ups"  "Downs"  "Ups"
			"Graphs"  "Graph Spaces"  "Graph Ups"  "Graph Space Ups"
			"Screens"  "Screen Ups"
		}
#*		COMMAND "<DULRHomeEndTopBottom> <DULRHomeEnd> <1-20> <WordsBeforesAfters> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<DULRHomeEndTopBottom> <1-20> <DULR> <1-20> <WordsBeforesAfters> <CutCopyPasteDeleteBoldItalicTouch>" {
 
		LIST "DULRHomeEndTopBottom" {
			"Home"  "End"
			"Top"  "Bottom"
			"Up"  "Down"  "Left"  "Right"
		}
#*		COMMAND "<1-20> <DULR> <DULRHomeEnd> <1-20> <WordsBeforesAfters> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		LIST "DULRHomeEnd" {
		
		LIST "WordsBeforesAfters" {
			"Words"  "Befores"  "Afters"
		}
#*		COMMAND "<DULRHE> <1-20> <GLRLWBALUSBALeftRtSSU> <1-20> <GLLWDUABUSs>" {		
#*		LIST "DULRHE" {
		
		LIST "GLRLWBALUSBALeftRtSSU" {
			"Letter"
			"Word"  "Before"  "After"
			"Before Left"  "After Left"
			"Before Right"  "After Right"
			"Line"  "Line Up"
			"Graph"  "Graph Up"
			"Graph Space"  "Graph Space Up"
			"Screen"  "Screen Down"  "Screen Up"
		}
 
#7v. Selecting letters and Copying, Cutting, Pasting, Deleting Formatting 
#*		COMMAND "<Spells> <AlphChar0-9Space> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		COMMAND "<Spells> <AlphChar0-9Space> <AlphChar0-9Space> <CutCopyPasteDeleteBoldItalicTouch>" {
#*		LIST "Spells" {
#*		LIST "AlphChar0-9Space" {
 
		LIST "CutCopyPasteDeleteBoldItalicTouch" {
			"Cut"  "Copy"  "Paste"  "Delete"  "Bold"  "Bold Italic"  "Italic"  "Underline"  "Touch"
		}
 
#7w. Selecting plus keyboard shortcut
#*		COMMAND "<GLLWBsAsUSDocTopBottomAnotherAG> <1-3AltUnderCtrlSh> <AlphChar0-9>" {
#*		COMMAND "<1-3AltUnderCtrlSh> <AlphChar0-9> <GLLWBsAsUSDocTopBottomAnotherAG>" {
#*		LIST "GLLWBsAsUSDocTopBottomAnotherAG" {
#*		COMMAND "<1-20> <GLLWDUABUSs> <1-3AltUnderCtrlSh> <AlphChar0-9>" {
 
		LIST "GLLWDUABUSs" {
			"Letters"  "Lefts"  "Rights"
			"Words"  "Befores"  "Afters"
			"Lines"  "Line Ups"  "Downs"  "Ups"
			"Graphs"  "Graph Spaces"  "Graph Ups"  "Graph Space Ups"
			"Screens"  "Screen Ups"
		}
#*		COMMAND "<1-20thEnd> <GGSLLW> <1-3AltUnderCtrlSh> <AlphChar0-9>" {
#*		COMMAND "<1-20> <GLRLWBALUSBALeftRtSSUddd> <1-3AltUnderCtrlSh> <AlphChar0-9>" {
 
		LIST "GLRLWBALUSBALeftRtSSUddd" {
			"Letter"
			"Word"  "Before"  "After"
			"Before Left"  "After Left"
			"Before Right"  "After Right"
			"Line"  "Line Down"  "Line Up"
			"Graph"  "Graph Down"  "Graph Up"
			"Graph Space"  "Graph Space Up"
			"Screen"  "Screen Down"  "Screen Up"
		}
#*		COMMAND "<1-100> <DULRs> <1-3AltUnderCtrlSh> <AlphChar0-9>" {
 
		LIST "1-100" {
			 "1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"
			 "10" "11" "12" "13" "14" "15" "16" "17" "18" "19"
			 "20" "21" "22" "23" "24" "25" "26" "27" "28" "29"
			 "30" "31" "32" "33" "34" "35" "36" "37" "38" "39"
			 "40" "41" "42" "43" "44" "45" "46" "47" "48" "49"
			 "50" "51" "52" "53" "54" "55" "56" "57" "58" "59"
			 "60" "61" "62" "63" "64" "65" "66" "67" "68" "69"
			 "70" "71" "72" "73" "74" "75" "76" "77" "78" "79"
			 "80" "81" "82" "83" "84" "85" "86" "87" "88" "89"
			 "90" "91" "92" "93" "94" "95" "96" "97" "98" "99"  "100"
		}
		LIST "DULRs" {
			"Lefts"  "Rights"  "Downs"  "Ups"
		}
 
#7x. Moving and selecting plus keyboard shortcut
#* 		COMMAND "<DULR> <1-20thEnd> <GGSLLW> <1-3AltUnderCtrlSh> <AlphChar0-9>" {
 
		LIST "DULR" {
			"Up"  "Down"  "Left"  "Right"
		}
		LIST "1-20thEnd" {
			"1st"  "2nd"  "3rd"  "4th"  "5th"  "6th"  "7th"  "8th"  "9th"  "10th"
			"11th"  "12th"  "13th"  "14th"  "15th"  "16th"  "17th"  "18th"  "19th"
			"20th"  "End"
		}
		LIST "GGSLLW" {
			"Letter"
			"Word"
			"Line"
			"Graph"  "GraphSpace"
		}
#*		LIST "1-3AltUnderCtrlSh" {
#*		LIST "AlphChar0-9" {
 
#7y. Moving text
#*		COMMAND "<1-20> <GLLWSP> <BackForward>" {
#*		COMMAND "<1-20> <Word> <BackForward> 1 Space" {
 
#*		LIST "Word" {
#*		LIST "GLLWSP" {
#*		COMMAND "<GLLWBsAsUS> <1-20> <BackForward>" {
 
#*		LIST "GLLWBsAsUS" {
#*		COMMAND "1 <GLLWUDUs> <1-20> <BackForward>" {
#*		COMMAND "<2-20> <GLLWUDUs> <1-20> <BackForward>" {
 
#*		LIST "2-20" {
 
		LIST "GLLWUDUs" {
			"Letters"  "Lefts"  "Rights"
			"Words"  "Befores"  "Afters"
			"Lines"  "Line Ups"  "Downs"  "Ups"
			"Graphs"  "Graph Spaces"  "Graph Ups"  "Graph Space Ups"
		}
		LIST "1-20" {
			"1"  "2"  "3"  "4"  "5"  "6"  "7"  "8"  "9"  "10" 
			"11" "12" "13" "14" "15" "16" "17" "18" "19" "20"
		}
#*		LIST "BackForward" {
 
	}
}
