#UC-Style DVC-writing commands 
# Kim Patch, PatchonTech.com 2018-05-28


MENU "Notepad++" {
	STATE "Notepad++" {
		COMMAND "<SetWinHelpWinHelp>" {
			SCRIPT {
				SendKeys "WinHelp, help file, 1, topic"
			}
		}

		COMMAND "<ScriptNewScript> Comment" {
			SCRIPT {
				IF _arg1 = "Script" then SendKeys " : '"
				IF _arg1 = "New Script" then SendKeys "{Enter}'"
				IF _arg1 = "New" then SendKeys "{Enter}'"
			}
		}

		COMMAND "<SetMousePositionMousePosition> <MousePositionCategories>" {
			SCRIPT {
				IF _arg2 = "Window" THEN  _arg2 = "1"
				IF _arg2 = "Screen" THEN  _arg2 = "0"
				IF _arg2 = "Pointer" THEN  _arg2 = "2"
				IF _arg2 = "Map Screen" THEN  _arg2 = "3"
				IF _arg2 = "Screen Map" THEN  _arg2 = "3"
				IF _arg2 = "Window Map" THEN  _arg2 = "4"
				IF _arg2 = "Map Window" THEN  _arg2 = "4"
				IF _arg2 = "Client" THEN  _arg2 = "5"
				IF _arg2 = "Client Map" THEN  _arg2 = "6"
				IF _arg2 = "Map Client" THEN  _arg2 = "6"
				SendKeys "SetMousePosition " + _arg2 + ", x{Shift+Left}"
			}
		}

		COMMAND "<SetMousePositionMousePosition>" {
			SCRIPT {
				SendKeys "SetMousePosition 0, x{Shift+Left}"
			}
		}

		COMMAND "<FlowControlStatements>" {
			SCRIPT {
				SendKeys "" + _arg1 + ""
				
			}
		}

		COMMAND "<SetMousePositionMousePosition> <MousePositionCategories> <AnotherInsertLastNewNext>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				DllCall "UttC.dll", "ThisCommand", _arg3
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SetMousePositionMousePosition> <MousePositionCategories>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3
			}
		}

		COMMAND "<AnotherInsertLastNewNext> Wait <WaitNumbers> <ScriptingCommands>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				Wait 10
				IF _arg2 = "Ten" then  _arg2 = "10"
				IF _arg2 = "Hundred" then  _arg2 = "100"
				IF _arg2 = "One Hundred" then  _arg2 = "100"
				SendKeys "Wait " + _arg2 + ""
				SendKeys "{Enter}"
				HeardWord _arg3
			}
		}

		COMMAND "<MouseGrid> <OffOnWindow012> <AnotherInsertLastNewNext>" {
			SCRIPT {
				IF _arg2 = "Off" THEN  _arg2 = "0"
				IF _arg2 = "On" THEN  _arg2 = "1"
				IF _arg2 = "Window" THEN  _arg2 = "2"
				IF _arg2 = "0" THEN
				SendKeys "MouseGrid " + _arg2 + ""
				ELSE
				SendKeys "MouseGrid " + _arg2 + ",{Space}"
				END IF
				DllCall "UttC.dll", "ThisCommand", _arg3
			}
		}

		COMMAND "<Key4> Plus <AllKeys>" {
			SCRIPT {
				IF _arg1 = "Control" THEN  _arg1 = "Ctrl"
				IF _arg1 = "Alternate" THEN  _arg1 = "Alt"
				IF _arg1 = "Escape" THEN  _arg1 = "Esc"
				IF _arg2 = "Control" THEN  _arg2 = "Ctrl"
				IF _arg2 = "Alternate" THEN  _arg2 = "Alt"
				IF _arg2 = "Escape" THEN  _arg2 = "Esc"
				SendKeys "{}{Left}"
				SendKeys "" + _arg1 + ""
				SendKeys "+"
				SendKeys "" + _arg2 + ""
				SendKeys "{Right}"
			}
		}

		COMMAND "<Key4> Plus <AllKeys> Plus <AllKeys>" {
			SCRIPT {
				HeardWord _arg1, "Plus", _arg2
				IF _arg3 = "Control" THEN  _arg3 = "Ctrl"
				IF _arg3 = "Alternate" THEN  _arg = "Alt"
				IF _arg3 = "Escape" THEN  _arg3 = "Esc"
				SendKeys "{Left}"
				SendKeys "+"
				SendKeys "" + _arg3 + ""
				SendKeys "{Right}"
			}
		}

		COMMAND "<SendKeysSendSystemKeysThen> <Key4> Plus <AllKeys> <a-z>" {
			SCRIPT {
				IF _arg4 = "Apple" THEN  _arg4 = "a"
				IF _arg1 = "Then" THEN 
				SendKeys "{End}Sendkeys """"{Left}"
				ELSE
				HeardWord _arg1
				END IF
				HeardWord _arg2, "Plus", _arg3
				SendKeys _arg4
			}
		}

		COMMAND "<SendKeysSendSystemKeysThen> <Key4> Plus <AllKeys> <a-z> <a-z>" {
			SCRIPT {
			IF _arg4 = "Apple" THEN  _arg4 = "a"
			IF _arg5 = "Apple" THEN  _arg5 = "a"
				IF _arg1 = "Then" THEN 
				SendKeys "{End}Sendkeys """"{Left}"
				ELSE
				HeardWord _arg1
				END IF
				HeardWord _arg2, "Plus", _arg3
				SendKeys "" + _arg4 + "" + _arg5 + ""
			}
		}

		COMMAND "<AnotherInsertLastNewNext> Wait <WaitNumbers>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				IF _arg2 = "Ten" then  _arg2 = "10"
				IF _arg2 = "Hundred" then  _arg2 = "100"
				IF _arg2 = "One Hundred" then  _arg2 = "100"
				SendKeys "Wait " + _arg2 + ""
				
			}
		}

		COMMAND "<AnotherInsertLastNewNext> Button Click <LeftRightMiddle124> <SingleDouble12>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				IF _arg2 = "Left" THEN  _arg2 = "1"
				IF _arg2 = "Right" THEN  _arg2 = "2"
				IF _arg2 = "Middle" THEN  _arg2 = "3"
				IF _arg3 = "Single" THEN  _arg3 = "1"
				IF _arg3 = "Double" THEN  _arg3 = "2"
				SendKeys "ButtonClick"
				SendKeys "{Space}"
				SendKeys "" + _arg2 + ","
				SendKeys " " + _arg3 + ""
				SendKeys "{Enter}"
			}
		}

		COMMAND "<AnotherInsertLastNewNext> Button Click <LeftRightMiddle124>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				IF _arg2 = "Left" THEN  _arg2 = "1"
				IF _arg2 = "Right" THEN  _arg2 = "2"
				IF _arg2 = "Middle" THEN  _arg2 = "3"
				IF _arg3 = "Single" THEN  _arg3 = "1"
				IF _arg3 = "Double" THEN  _arg3 = "2"
				SendKeys "ButtonClick"
				SendKeys "{Space}"
				SendKeys "" + _arg2 + ",1"

				SendKeys "{Enter}"
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeysThen> <Key4> Plus <AllKeys> <a-z> <a-z>" {
			SCRIPT {
				IF _arg5 = "Apple" THEN  _arg5 = "a"
				IF _arg6 = "Apple" THEN  _arg6 = "a"
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, "Plus", _arg4, _arg5, _arg6
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeysThen> <Key4> Plus <AllKeys> <a-z>" {
			SCRIPT {
				IF _arg5 = "Apple" THEN  _arg5 = "a"				
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, "Plus", _arg4, _arg5
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeysBraceThen> <Key2>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeysBraceThen> <Key2> <Key2>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, _arg4
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeysBraceThen> <Key2> <Key2> <Key2>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, _arg4, _arg5
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeysBraceThen> <Key3> <1to20>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, _arg4
			}
		}

		COMMAND "<Add> <MicrophoneSetMicrophone>" {
			SCRIPT {
				SendKeys "{Home}SetMicrophone 0{Enter 2}{Up}SetMicrophone 1{Up}{Enter}"
			}
		}

		COMMAND "<AnotherInsertLastNewNext> Comment" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				SendKeys "'"
			}
		}

		COMMAND "<Wait> <WaitNumbers>" {
			SCRIPT {
				IF _arg2 = "Ten" then  _arg2 = "10"
				IF _arg2 = "Hundred" then  _arg2 = "100"
				IF _arg2 = "One Hundred" then  _arg2 = "100"
				SendKeys "Wait " + _arg2 + ""
				
			}
		}

		COMMAND "<Wait> <WaitNumbers> <AnotherInsertLastNewNextStay>" {
			SCRIPT {
				IF _arg2 = "Ten" then  _arg2 = "10"
				IF _arg2 = "Hundred" then  _arg2 = "100"
				IF _arg2 = "One Hundred" then  _arg2 = "100"
				SendKeys "Wait " + _arg2 + ""
				DllCall "UttC.dll", "ThisCommand", _arg3
			}
		}

		COMMAND "<Shell> Execute <MinimizedMaximizedNormalFocus>" {
			SCRIPT {
				SendKeys "ShellExecute ""Program"""
				IF _arg2 = "Minimized" then SendKeys ", 2"
				IF _arg2 = "Minimized Focus" then SendKeys ", 2"
				IF _arg2 = "Maximized Focus" then SendKeys ", 3"
				IF _arg2 = "Max Focus" then SendKeys ", 3"
				IF _arg2 = "Maximized" then SendKeys ", 3"
				IF _arg2 = "Max" then SendKeys ", 3"
				IF _arg2 = "Minimized No Focus" then SendKeys ", 6"
				IF _arg2 = "Normal" then SendKeys ", 1"
				IF _arg2 = "Normal Focus" then SendKeys ", 1"
				IF _arg2 = "Normal No Focus" then SendKeys ", 4"
			}
		}

		COMMAND "<Plus> <AllKeys> Plus <AllKeys>" {
			SCRIPT {
				SendKeys "{Left}" 
				SendKeys "+" 
				SendKeys "" + _arg2 + "" 
				SendKeys "+"
				SendKeys "" + _arg3 + ""
				SendKeys "{Right}"
			}
		}

		COMMAND "<System> Script Line Stay" {
			KEYS {
				{Home}SendSystemKeys "{End}"{Left\}
			}
		}

		COMMAND "<System> Script Line" {
			KEYS {
				{Home}SendSystemKeys "{End}"{Down}{Home\}
			}
		}

		COMMAND "<Script> Line Stay" {
			SCRIPT {
				SendKeys "{Home}SendKeys{Space}"
				SendKeys""""
				SendKeys "{End}"
				SendKeys""""
				SendKeys "{Left}"
			}
		}

		COMMAND "<Script> Line" {
			SCRIPT {
				SendKeys "{Home}SendKeys{Space}"
				SendKeys""""
				SendKeys "{End}"
				SendKeys""""
				SendKeys "{Down}{Home}"
			}
		}

		COMMAND "<Else> End" {
			SCRIPT {
				SendKeys "ELSE"
				SendKeys "{Enter}"
				SendKeys "END IF"
				SendKeys "{Up}{Enter}{Space 2}"
			}
		}

		COMMAND "<Button> Click <LeftRightMiddle124> <SingleDouble12>" {
			SCRIPT {
				IF _arg2 = "Left" THEN  _arg2 = "1"
				IF _arg2 = "Right" THEN  _arg2 = "2"
				IF _arg2 = "Middle" THEN  _arg2 = "3"
				IF _arg3 = "Single" THEN  _arg3 = "1"
				IF _arg3 = "Double" THEN  _arg3 = "2"
				SendKeys "ButtonClick"
				SendKeys "{Space}"
				SendKeys "" + _arg2 + ","
				SendKeys " " + _arg3 + ""
				SendKeys "{Enter}"
			}
		}

		COMMAND "<Button> Click <LeftRightMiddle124>" {
			SCRIPT {
				IF _arg2 = "Left" THEN  _arg2 = "1"
				IF _arg2 = "Right" THEN  _arg2 = "2"
				IF _arg2 = "Middle" THEN  _arg2 = "3"
				SendKeys "ButtonClick"
				SendKeys "{Space}"
				SendKeys "" + _arg2 + ",1"
				SendKeys "{Enter}"
			}
		}

		COMMAND "<Argument> Replace <DownUp>" {
			SCRIPT {
				SendKeys "{Ctrl+h}"
				Wait 10
				IF _arg2 = "Down" THEN 
				SendKeys "{Alt+n}arg2{Tab}arg1{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg3{Tab}arg2{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg4{Tab}arg3{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg5{Tab}arg4{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg6{Tab}arg5{Alt+a}"
				SendKeys "{Alt+n}arg7{Tab}arg6{Alt+a}"
				END IF
				IF _arg2 = "Up" THEN 
				SendKeys "{Alt+n}arg6{Tab}arg7{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg5{Tab}arg6{Alt+a}{Left}"
				SendKeys "{Alt+n}arg4{Tab}arg5{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg3{Tab}arg4{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg3{Tab}arg4{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg2{Tab}arg3{Alt+a}{Enter}"
				SendKeys "{Alt+n}arg1{Tab}arg2{Alt+a}{Enter}"
				END IF
				Wait 20
				SendKeys "{Enter}"
				SendKeys "{Esc 2}"
			}
		}

		COMMAND "<Argument> Duplicate" {
			SCRIPT {
				SendKeys "{Home}{Shift+End}{Ctrl+c}{End}{Enter}{Ctrl+v}{Backspace}{Home}{Right 12}{Shift+Ctrl+Right 2}"
			}
		}

		COMMAND "<Another> Word" {
			SCRIPT {
				SendKeys "{End}" 
				SendKeys ", """"" 
				SendKeys "{Left}" 
			}
		}

		COMMAND "IF Then Name" {
			KEYS {
				if _arg1 = "Name" then key$ = "Address"{Home}{Right 1
				2}{Shift+Right 4\}
			}
		}

		COMMAND "IF Then Key" {
			KEYS {
				if _arg1 = "Name" then key$ = "address"{Left 23}{Shi
				ft+Left 4\}
			}
		}

		COMMAND "<AlternateControlShift> Plus <a-z>" {
			SCRIPT {
				IF _arg2 = "Apple" THEN  _arg2 = "a"
				HeardWord _arg1, "Plus", _arg2				
			}
		}
		COMMAND "<AlternateControlShift> Plus <a-z> <a-z>" {
			SCRIPT {
				IF _arg2 = "Apple" THEN  _arg2 = "a"
				IF _arg3 = "Apple" THEN  _arg3 = "a"
				HeardWord _arg1, "Plus", _arg2
				SendKeys _arg3
			}
		}

		COMMAND "<AlternateControlShift> Plus <a-z> <a-z> <a-z>" {
			SCRIPT {
				IF _arg2 = "Apple" THEN  _arg2 = "a"
				IF _arg3 = "Apple" THEN  _arg3 = "a"
				IF _arg4 = "Apple" THEN  _arg4 = "a"
				HeardWord _arg1, "Plus",_arg2
				SendKeys _arg3, _arg4
			}
		}

		COMMAND "<Argument> <1-20> All Replace With <1-20>" {
			SCRIPT {
				SendKeys "{Ctrl+h}"
				Wait 10
				SendKeys "{Alt+n}"
				SendKeys "arg" + _arg2 + ""
				SendKeys "{Alt+p}"
				SendKeys "arg" + _arg3 + ""
				SendKeys "{Alt+r}"
				Wait 200
				SendKeys "{Alt+a}"
				SendKeys "{Ctrl+h}"
				SendKeys "{Alt+F4}"
				
			}
		}

		COMMAND "<Argument> Duplicate <1-10>" {
			SCRIPT {
				SendKeys "{Home}{Shift+End}{Ctrl+c}{End}{Enter}{Ctrl+v}{Backspace}{Home}{Right 12}{Shift+Ctrl+Right " + _arg2 + "}"
			}
		}

		COMMAND "<Equals> <FloatingIntegerStringHexValueLengthMid...>" {
			SCRIPT {
				SendKeys "{Space} ={Space}"
				IF _arg2 = "Floating" then SendKeys "CDbl"
				IF _arg2 = "Integer" then SendKeys "CInt"
				IF _arg2 = "String" then SendKeys "CStr"
				IF _arg2 = "Hex" then SendKeys "Hex$"
				IF _arg2 = "Lower Case" then SendKeys "LCase$"
				IF _arg2 = "Integer to String" then SendKeys "Str$"
				IF _arg2 = "String Repeat" then SendKeys "String$ (number, code){Left 7}{Shift+Left 6}"
				IF _arg2 = "ANSI Repeat" then SendKeys "String$ (number, code){Left 7}{Shift+Left 6}"
				IF _arg2 = "Upper Case" then SendKeys "UCase$"
				IF _arg2 = "Value" then SendKeys "Val"
				IF _arg2 = "Character" then SendKeys "Chr$"
				IF _arg2 = "In String" then SendKeys "Instr"
				IF _arg2 = "Length" then SendKeys "Len"
				IF _arg2 = "Mid" then SendKeys "Mid$ (where, start, length){Left 16}{Shift+Left 5}"
				IF _arg2 = "Mid" XOR _arg2 = "String Repeat" XOR _arg2 = "ANSI Repeat" then 
				SendKeys ""
				ELSE
				SendKeys "{Space}(){Left}"
				END IF
			}
		}

		COMMAND "<HeardWord> Caps on" {
			KEYS {
				HeardWord "\\Caps-On"
			}
		}

		COMMAND "<If> <1-10> <NotEqualMoreELessE>" {
			SCRIPT {
				SendKeys "IF _arg" + _arg2 + ""
				IF _arg3 = "Not Equal" THEN SendKeys " <> """" then " 
				IF _arg3 = "Greater Equal" THEN SendKeys " >= """" then " 
				IF _arg3 = "Less Equal" THEN SendKeys " <= """" then " 
				SendKeys "{Left 7}"
			}
		}

		COMMAND "<SpaceSpaces> <EqualsNotEGreaterELessE>" {
			SCRIPT {
				SendKeys "{Space}"
				HeardWord _arg2
				IF _arg1 = "Spaces" THEN SendKeys "{Space}"
			}
		}

		COMMAND "<EqualsNotEqualGreaterELessE>" {
			SCRIPT {
				IF _arg1 = "Not Equal" THEN SendKeys "<>"
				IF _arg1 = "Greater Equal" THEN SendKeys ">="
				IF _arg1 = "Less Equal" THEN SendKeys "<="
				IF _arg1 = "Equals" THEN SendKeys "="
			}
		}

		COMMAND "<ScriptingCommands>" {
			SCRIPT {
				IF _arg1 = "Active Control Pick" THEN SendKeys "ActiveControlPick """"{Left}"
				IF _arg1 = "Active Menu Pick" THEN SendKeys "ActiveMenuPick """"{Left}"
				IF _arg1 = "App Bring Up" THEN SendKeys "AppBringUp """"{Left}"
				IF _arg1 = "App Swap With" THEN SendKeys "AppSwapWith """"{Left}"
				IF _arg1 = "Button Click" THEN SendKeys "ButtonClick"
				IF _arg1 = "Beep" THEN SendKeys "Beep  "
				IF _arg1 = "Clear Desktop" THEN SendKeys "ClearDesktop"
				IF _arg1 = "Control Pick" THEN SendKeys "ControlPick """"{Left}"
				IF _arg1 = "Dde Execute" THEN SendKeys "ButtonClick """"{Left}"
				IF _arg1 = "Drag To Point" THEN SendKeys "DragToPoint 1{Shift+Left}"
				IF _arg1 = "Dde Poke" THEN SendKeys "DdePoke """"{Left}"
				IF _arg1 = "Dll Call" THEN SendKeys "DllCall """"{Left}"
				IF _arg1 = "Go To Sleep" THEN SendKeys "GoToSleep   "
				IF _arg1 = "Heard Word" THEN SendKeys "HeardWord """"{Left}"
				IF _arg1 = "Menu Cancel" THEN SendKeys "MenuCancel  "
				IF _arg1 = "Menu Pick" THEN SendKeys "MenuPick """"{Left}"
				IF _arg1 = "Message Box Confirm" THEN SendKeys "MsgBoxConfirm{Left}"
				IF _arg1 = "Mouse Grid" THEN SendKeys "MouseGrid{Left}"
				IF _arg1 = "Play Sound" THEN SendKeys "PlaySound """"{Left}"
				IF _arg1 = "Remember Point" THEN SendKeys "RememberPoint  "
				IF _arg1 = "Run Script File" THEN SendKeys "RunScriptFile """"{Left}"
				IF _arg1 = "SendKeys" THEN SendKeys "SendKeys """"{Left}"
				IF _arg1 = "Send System Keys" THEN SendKeys "SendSystemKeys """"{Left}"
				IF _arg1 = "Set Microphone" THEN SendKeys "SetMicrophone{Left}"
				IF _arg1 = "Set MousePosition" THEN SendKeys "SetMousePosition 0, x{Left}"
				IF _arg1 = "Shell Execute" THEN SendKeys "ShellExecute """"{Left}"
				IF _arg1 = "TTS Play String" THEN SendKeys "TTSPlayString """"{Left}"
				IF _arg1 = "Wake Up" THEN SendKeys "WakeUp  "
				IF _arg1 = "Wait For Window" THEN SendKeys "WaitForWindow ""PLACEHOLDER"",""PLACEHOLDER""{Left}"
			}
		}

		COMMAND "<FloatingIntegerStringHexValueLengthMid...> Short" {
			SCRIPT {
				IF _arg1 = "Floating" then _arg1 = "CDbl"
				IF _arg1 = "Integer" then _arg1 = "CInt"
				IF _arg1 = "String" then _arg1 = "CStr"
				IF _arg1 = "Hex to String" then _arg1 = "Hex$"
				IF _arg1 = "Lower Case" then _arg1 = "LCase$"
				IF _arg1 = "Integer to String" then _arg1 = "Str$"
				IF _arg1 = "String Repeat" then _arg1 = "String$"
				IF _arg1 = "ANSI Repeat" then _arg1 = "String$"
				IF _arg1 = "Upper Case" then _arg1 = "UCase$"
				IF _arg1 = "String to Integer" XOR _arg1 = "Value" then _arg1 = "Val"
				IF _arg1 = "Character" then _arg1 = "Chr$"
				IF _arg1 = "In String" then _arg1 = "Instr"
				IF _arg1 = "Length" then _arg1 = "Len"
				IF _arg1 = "Mid" then _arg1 = "Mid$"
				
			}
		}

		COMMAND "<AlternateControlShift> Plus" {
			SCRIPT {
				IF _arg1 = "Alternate" THEN  _arg1 = "Alt"
				IF _arg1 = "Control" THEN  _arg1 = "Ctrl"
				SendKeys "{"
				SendKeys "" + _arg1 + ""
				SendKeys "}"
				SendKeys "+"
			}
		}

		COMMAND "<ANDORXOR> <1-20>" {
			SCRIPT {
				SendKeys "{Right 2}"
				SendKeys "" + _arg1 + " _arg" + _arg2 + " = """"" 
				SendKeys "{Space}{Left 2}"
			}
		}

		COMMAND "<AnotherInsertLastNewNext> End If" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				SendKeys "END IF"
				
			}
		}
		COMMAND "<AnotherInsertLastNewNext> End If Times <1-10>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "END IF"
				SendKeys "{Enter}"
				loop& = loop& - 1
				wend
			}
		}

		COMMAND "<Arg> <1-20>" {
			SCRIPT {
				SendKeys "_arg" + _arg2 + ""
			}
		}

		COMMAND "<AnotherInsertLastNewNextThen> If <1-20>" {
			SCRIPT {
				IF _arg1 = "Then" THEN 
				SendKeys "{End}"
				ELSE
				DllCall "UttC.dll", "ThisCommand", _arg1
				END IF
				HeardWord "If", _arg2
			}
		}

		COMMAND "<END> If <1-10>" {
			SCRIPT {
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "END IF"
				SendKeys "{Enter}"
				loop& = loop& - 1
				wend
			}
		}

		COMMAND "<END> IF Times <1-10>" {
			SCRIPT {
				loop& = Val(_arg2)
				while ( loop& )
				SendKeys "END IF"
				SendKeys "{Enter}"
				loop& = loop& - 1
				wend
			}
		}

		COMMAND "<Argument> <1-10> Replace with <1-10>" {
			SCRIPT {
				SendKeys "{Ctrl+h}"
				Wait 10
				SendKeys "{Alt+n}"
				SendKeys "arg" + _arg2 + ""
				SendKeys "{Alt+p}"
				SendKeys "arg" + _arg3 + ""
				SendKeys "{Alt+a}"
				Wait 20
				SendKeys "{Enter}"
				Wait 500
				SendKeys "{Esc 2}"
			}
		}

		COMMAND "<Argument > <1-10> Replace With <1-10> Times <0-20>" {
			SCRIPT {
				SendKeys "{Ctrl+h}"
				Wait 10
				SendKeys "{Alt+n}"
				SendKeys "arg" + _arg2 + ""
				SendKeys "{Alt+p}"
				SendKeys "arg" + _arg3 + ""
				SendKeys "{Alt+r}"
				Wait 20
				loop& = Val(_arg4)
				while ( loop& )
				SendKeys "{Alt+r}"
				loop& = loop& - 1
				wend
				
			}
		}

		COMMAND "<ArgArgumentVariable>  <1-20> Equals" {
			SCRIPT {
				IF _arg1 = "Variable" then SendKeys "{Space}_var" + _arg2 + ""
				IF _arg1 = "Arg" then SendKeys "{Space}_arg" + _arg2 + ""
				IF _arg1 = "Argument" then SendKeys "{Space}_arg" + _arg2 + ""
				SendKeys "{Space}"
				SendKeys "={Space}""""{Left}"
			}
		}

		COMMAND "<Argument> Replace <1-7> <DownUp>" {
			SCRIPT {
				SendKeys "{Ctrl+h}"
				Wait 10
				IF _arg3 = "Down" THEN 
				IF _arg2 = "2" XOR _arg2 = "3" XOR _arg2 = "4" XOR _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg2{Tab}arg1{Alt+a}{Enter}"
				IF _arg2 = "3" XOR _arg2 = "4" XOR _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg3{Tab}arg2{Alt+a}{Enter}"
				IF _arg2 = "4" XOR _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg4{Tab}arg3{Alt+a}{Enter}"
				IF _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg5{Tab}arg4{Alt+a}{Enter}"
				IF _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg6{Tab}arg5{Alt+a}"
				IF _arg2 = "7" THEN SendKeys "{Alt+n}arg7{Tab}arg6{Alt+a}"
				END IF
				IF _arg3 = "Up" THEN 
				IF _arg2 = "7" THEN SendKeys "{Alt+n}arg6{Tab}arg7{Alt+a}{Enter}"
				IF _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg5{Tab}arg6{Alt+a}{Left}"
				IF _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg4{Tab}arg5{Alt+a}{Enter}"
				IF _arg2 = "4" XOR _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg3{Tab}arg4{Alt+a}{Enter}"
				IF _arg2 = "3" XOR _arg2 = "4" XOR _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg3{Tab}arg4{Alt+a}{Enter}"
				IF _arg2 = "2" XOR _arg2 = "3" XOR _arg2 = "4" XOR _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg2{Tab}arg3{Alt+a}{Enter}"
				IF _arg2 = "2" XOR _arg2 = "3" XOR _arg2 = "4" XOR _arg2 = "5" XOR _arg2 = "6" XOR _arg2 = "7" THEN SendKeys "{Alt+n}arg1{Tab}arg2{Alt+a}{Enter}"
				END IF
				Wait 20
				SendKeys "{Enter}"
				SendKeys "{Esc 2}"
			}
		}

		COMMAND "<Find> XOR <1-10>" {
			SCRIPT {
				SendKeys "{Ctrl+f}"
				Wait 10
				SendKeys "XOR _arg" + _arg2 + " = "
				SendKeys "{Alt+f}"
				Wait 10
				SendKeys "{Ctrl+f}"
				Wait 10
				SendKeys "{Alt+F4}"
				SendKeys "{Ctrl+Shift+Right 3}"
			}
		}

		COMMAND "<Find> XOR <1-10> Delete" {
			SCRIPT {
				SendKeys "{Ctrl+f}"
				Wait 10
				SendKeys "XOR _arg" + _arg2 + " = "
				SendKeys "{Alt+f}"
				Wait 10
				SendKeys "{Ctrl+f}"
				Wait 10
				SendKeys "{Alt+F4}"
				SendKeys "{Ctrl+Shift+Right 3}"
				Wait 200
				SendKeys "{Backspace}"
			}
		}

		COMMAND "<If> <1-20>" {
			SCRIPT {
				SendKeys "IF _arg" + _arg2 + " = """" THEN " 
				SendKeys "{Left 7}"
				HeardWord "\Caps-On"
			}
		}

		COMMAND "<Plus> <ArgVar> <1-20>" {
			SCRIPT {
				IF _arg2 = "Arg" then SendKeys """ + _arg" + _arg3 + " + """
				IF _arg2 = "Argument" then SendKeys """ + _arg" + _arg3 + " + """
				IF _arg2 = "Var" then SendKeys """ + _var" + _arg3 + " + """
				IF _arg2 = "Variable" then SendKeys """ + _var" + _arg3 + " + """
			}
		}

		LIST "ArgVar" {
			"Arg"
			"Argument"
			"Var"
			"Variable"
		}

		COMMAND "<Then> <1-20>" {
			SCRIPT {
				SendKeys "{End}"
				SendKeys "{Space}_arg" + _arg2 + ""
				SendKeys "{Space}"
				SendKeys "={Space}""""{Left}"
			}
		}

		COMMAND "<Variable> <1-20>" {
			SCRIPT {
				SendKeys "{Space}_var" + _arg2 + ""
				SendKeys "{Space}"
				SendKeys "={Space}""""{Left}"
			}
		}

		COMMAND "<while> <1-10>" {
			SCRIPT {
				SendKeys "loop& = Val(_arg" + _arg2 + "){Enter}"
				SendKeys "while ( loop& ){Enter 2}"
				SendKeys "loop& = loop& - 1{Enter}"
				SendKeys "wend{Enter}"
				SendKeys "{Up 3}"
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <HeardWordSendKeysSendSystemKeys> <1-10BFQT>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, _arg4
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, _arg4, _arg5
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, _arg4, _arg5, _arg6
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, _arg4, _arg5, _arg6, _arg7, _arg8
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, _arg4, _arg5, _arg6
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeys> <Mid> <1-10>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3
				SendKeys "" + _arg4 + ""
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeys> <MidBraces>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3
			}
		}

		COMMAND "<SendKeysSendSystemKeysBraceThen> <Key3> <1-20>" {
			SCRIPT {
				IF _arg1 = "SendKeys" XOR _arg1 = "Send System Keys" THEN HeardWord _arg1
				IF _arg1 = "Then" THEN SendKeys "{End}SendKeys """"{Left}"
				SendKeys "{" 
				SendKeys _arg2
				SendKeys "}"
				SendKeys "{Left}"
				SendKeys "{Space}"
				SendKeys _arg3
				SendKeys "{Right}"
			}
		}

		COMMAND "<ScriptingFlow> <AnotherInsertLastNewNext>" {
			SCRIPT {
				SendKeys "" + _arg1 + ""
				DllCall "UttC.dll", "ThisCommand", _arg2
			}
		}

		COMMAND "<AnotherInsertLastNewNextThen> <ScriptingFlow>" {
			SCRIPT {
				IF _arg1 = "Then" THEN 
				SendKeys "{End}"
				ELSE
				DllCall "UttC.dll", "ThisCommand", _arg1
				END IF
				HeardWord _arg2
			}
		}

		COMMAND "<ArithmeticOperators> <1-100>" {
			SCRIPT {
				IF _arg2 = "Hundred" XOR _arg2 = "One Hundred" THEN  _arg2 = "100"
				IF _arg1 = "Plus" THEN  _arg1 = "+"
				IF _arg1 = "+" THEN  _arg1 = "+"
				IF _arg1 = "Minus" THEN  _arg1 = "-"
				IF _arg1 = "-" THEN  _arg1 = "-"
				IF _arg1 = "Times" THEN  _arg1 = "*"
				IF _arg1 = "Star" THEN  _arg1 = "*"
				IF _arg1 = "*" THEN  _arg1 = "*"
				IF _arg1 = "Divided by" THEN  _arg1 = "/"
				IF _arg1 = "/" THEN  _arg1 = "/"
				IF _arg1 = "Slash" THEN  _arg1 = "/"
				IF _arg1 = "Divide by " THEN  _arg1 = "/"
				IF _arg1 = "Divide" THEN  _arg1 = "/"
				SendKeys "" + _arg1 + " " + _arg2 + ""
			}
		}

		COMMAND "<FindAfterBefore> <AllScriptWords>" {
			SCRIPT {
				HeardWord _arg1, _arg2, "1"
			}
		}

		COMMAND "<FindAfterBefore> <AllScriptWords> <1-10>" {
			SCRIPT {
				IF _arg2 = "Floating" then _arg2 = "CDbl"
				IF _arg2 = "Integer" then _arg2 = "CInt"
				IF _arg2 = "String" then _arg2 = "CStr"
				IF _arg2 = "Hex to String" then _arg2 = "Hex$"
				IF _arg2 = "Lower" then _arg2 = "LCase$"
				IF _arg2 = "Integer to String" then _arg2 = "Str$"
				IF _arg2 = "String Repeat" then _arg2 = "String$"
				IF _arg2 = "Upper" then _arg2 = "UCase$"
				IF _arg2 = "String to Integer" then _arg2 = "Val"
				IF _arg2 = "Value" then _arg2 = "Val"
				IF _arg2 = "Char" then _arg2 = "Chr$"
				IF _arg2 = "In String" then _arg2 = "Instr"
				IF _arg2 = "Position" then _arg2 = "Instr"
				IF _arg2 = "Length" then _arg2 = "Len"
				IF _arg2 = "Mid" then _arg2 = "Mid$"
				loop& = Val(_arg3)
				while ( loop& )
				HeardWord "Change", "" + _arg2 + ""
				loop& = loop& - 1
				wend
				IF _arg1 = "After" then SendKeys "{Right}"
				IF _arg1 = "Before" then SendKeys "{Left}"
			}
		}

		COMMAND "<MouseGrid> <OffOnWindow012>" {
			SCRIPT {
				IF _arg2 = "Off" THEN  _arg2 = "0"
				IF _arg2 = "On" THEN  _arg2 = "1"
				IF _arg2 = "Window" THEN  _arg2 = "2"
				IF _arg2 = "0" THEN
				SendKeys "MouseGrid " + _arg2 + ""
				ELSE
				SendKeys "MouseGrid " + _arg2 + ",{Space}"
				END IF
				
			}
		}

		COMMAND "<HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				HeardWord _arg1, _arg2, _arg3, _arg4, _arg5, _arg6
				SendKeys "{End},"
				IF _arg7 = "Quotes" THEN 
				SendKeys " """""
				ELSE
				IF _arg7 = "This" XOR _arg7 = "file" XOR _arg7 = "by" THEN 
				SendKeys " """ + _arg7 + """"
				ELSE
				SendKeys " _arg"+ _arg7 +""
				END IF
				END IF
				IF _arg2 = "Quotes" THEN 
				SendKeys "{Left 36}"
				ELSE
				IF _arg3 = "Quotes" THEN 
				SendKeys "{Left 29}"
				ELSE
				IF _arg4 = "Quotes" THEN 
				SendKeys "{Left 22}"
				ELSE
				IF _arg5 = "Quotes" THEN 
				SendKeys "{Left 15}"
				ELSE
				IF _arg6 = "Quotes" THEN 
				SendKeys "{Left 8}"
				ELSE
				IF _arg7 = "Quotes" THEN 
				SendKeys "{Left}"
				END IF
				END IF
				END IF
				END IF
				END IF
				END IF
			}
		}

		COMMAND "<HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				HeardWord _arg1, _arg2, _arg3, _arg4, _arg5
				SendKeys "{End},"
				IF _arg6 = "Quotes" THEN 
				SendKeys " """""
				ELSE
				IF _arg6 = "This" XOR _arg6 = "file" XOR _arg6 = "by" THEN 
				SendKeys " """ + _arg6 + """"
				ELSE
				SendKeys " _arg"+ _arg6 +""
				END IF
				END IF
				IF _arg2 = "Quotes" THEN 
				SendKeys "{Left 29}"
				ELSE
				IF _arg3 = "Quotes" THEN 
				SendKeys "{Left 22}"
				ELSE
				IF _arg4 = "Quotes" THEN 
				SendKeys "{Left 15}"
				ELSE
				IF _arg5 = "Quotes" THEN 
				SendKeys "{Left 8}"
				ELSE
				IF _arg6 = "Quotes" THEN 
				SendKeys "{Left}"
				END IF
				END IF
				END IF
				END IF
				END IF
			}
		}

		COMMAND "<HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				SendKeys _arg1
				IF _arg2 = "Quotes" THEN 
				SendKeys " """","
				ELSE
				IF _arg2 = "This" XOR _arg2 = "file" XOR _arg2 = "by" THEN 
				SendKeys " """ + _arg2 + """"
				ELSE
				SendKeys " _arg"+ _arg2 +","
				END IF
				END IF
				IF _arg3 = "Quotes" THEN 
				SendKeys " """""
				ELSE
				IF _arg3 = "This" XOR _arg3 = "file" XOR _arg3 = "by" THEN 
				SendKeys " """ + _arg3 + """"
				ELSE
				SendKeys " _arg"+ _arg3 + ""
				END IF
				END IF
				IF _arg2 = "Quotes" THEN SendKeys "{Left 8}"
				IF _arg3 = "Quotes" THEN SendKeys "{Left}"
			}
		}

		COMMAND "<HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				HeardWord _arg1, _arg2, _arg3
				SendKeys "{End},"
				IF _arg4 = "Quotes" THEN 
				SendKeys " """""
				ELSE
				IF _arg4 = "This" XOR _arg4 = "file" XOR _arg4 = "by" THEN 
				SendKeys " """ + _arg4 + """"
				ELSE
				SendKeys " _arg"+ _arg4 +""
				END IF
				END IF
				IF _arg2 = "Quotes" THEN SendKeys "{Left 15}"
				IF _arg3 = "Quotes" THEN SendKeys "{Left 8}"
				IF _arg4 = "Quotes" THEN SendKeys "{Left}"
			}
		}

		COMMAND "<HeardWordSendKeysSendSystemKeys> <1-10BFQT> <1-10BFQT> <1-10BFQT> <1-10BFQT>" {
			SCRIPT {
				HeardWord _arg1, _arg2, _arg3, _arg4
				SendKeys "{End},"
				IF _arg5 = "Quotes" THEN 
				SendKeys " """""
				ELSE
				IF _arg5 = "This" XOR _arg5 = "file" XOR _arg5 = "by" THEN 
				SendKeys " """ + _arg5 + """"
				ELSE
				SendKeys " _arg"+ _arg5 +""
				END IF
				END IF
				IF _arg2 = "Quotes" THEN SendKeys "{Left 22}"
				IF _arg3 = "Quotes" THEN SendKeys "{Left 15}"
				IF _arg4 = "Quotes" THEN SendKeys "{Left 8}"
				IF _arg5 = "Quotes" THEN SendKeys "{Left}"
			}
		}

		COMMAND "<This> Then" {
			SCRIPT {
				SendKeys "{End}"
			}
		}

		COMMAND "<AnotherInsertLastNewNext> <SendKeysSendSystemKeysThen> <Key4> Plus <AllKeys>" {
			SCRIPT {
				DllCall "UttC.dll", "ThisCommand", _arg1
				HeardWord _arg2, _arg3, "Plus", _arg4
			}
		}

		COMMAND "<Then> <SendKeysSendSystemKeysHeardWordGoTo>" {
			SCRIPT {
				SendKeys "{End}"
				HeardWord _arg2
			}
		}

		COMMAND "<SendKeysSendSystemKeysBraceThen> <Key2>" {
			SCRIPT {
				IF _arg1 = "SendKeys" XOR _arg1 = "Send System Keys" THEN HeardWord _arg1
				IF _arg1 = "Then" THEN SendKeys "{End}SendKeys """"{Left}"
				IF _arg2 = "Min" XOR _arg2 = "Doc Min" THEN SendKeys "n{Left}"
				IF _arg2 = "Restore" XOR _arg2 = "Doc Restore" THEN SendKeys "r{Left}"
				IF _arg2 = "Max" XOR _arg2 = "Doc Max" THEN SendKeys "x{Left}"
				IF _arg2 = "Afters" XOR _arg2 = "Graphs" XOR _arg2 = "Graphs Long" THEN SendKeys "{}{Left}Right{Right}"
				IF _arg2 = "Words" THEN SendKeys "{}{Left}Left{Right}"
				IF _arg2 = "Lines Minus" THEN SendKeys "{}{Left}Home{Right}"
				IF _arg2 = "Control" THEN  _arg2 = "Ctrl"
				IF _arg2 = "Alternate" THEN  _arg2 = "Alt"
				IF _arg2 = "Escape" THEN  _arg2 = "Esc"
				IF _arg2 = "Paste" THEN  _arg2 = "Ctrl+v"
				IF _arg2 = "Copy" THEN  _arg2 = "Ctrl+c"
				IF _arg2 = "Cut" THEN  _arg2 = "Ctrl+x"
				IF _arg2 = "Open" THEN  _arg2 = "Ctrl+o"
				IF _arg2 = "Rename" THEN  _arg2 = "F2"
				IF _arg2 = "Find" THEN  _arg2 = "Ctrl+f"
				IF _arg2 = "Bold" THEN  _arg2 = "Ctrl+b"
				IF _arg2 = "Italic" THEN  _arg2 = "Ctrl+i"
				IF _arg2 = "Close" THEN  _arg2 = "Alt+F4"
				IF _arg2 = "Doc Close" THEN  _arg2 = "Ctrl+F4"
				IF _arg2 = "Undo" THEN  _arg2 = "Ctrl+z"
				IF _arg2 = "Min" THEN  _arg2 = "Alt+Space"
				IF _arg2 = "Restore" THEN  _arg2 = "Alt+Space"
				IF _arg2 = "Max" THEN  _arg2 = "Alt+Space"
				IF _arg2 = "Doc Min" THEN  _arg2 = "Alt+-"
				IF _arg2 = "Doc Restore" THEN  _arg2 = "Alt+-"
				IF _arg2 = "Doc Max" THEN  _arg2 = "Alt+-"
				IF _arg2 = "Before" THEN  _arg2 = "Ctrl+Left"
				IF _arg2 = "After" THEN  _arg2 = "Ctrl+Right"
				IF _arg2 = "Graph Plus" THEN  _arg2 = "Ctrl+Down"
				IF _arg2 = "Graph Minus" THEN  _arg2 = "Ctrl+Up"
				IF _arg2 = "Lines" THEN _arg2 = "Home}{Shift+End"
				IF _arg2 = "Lines Minus" THEN _arg2 = "Up}{Shift+End"
				IF _arg2 = "Graphs" THEN _arg2 = "Ctrl+Up}{Ctrl+Shift+Down"
				IF _arg2 = "Graphs Long" THEN _arg2 = "Ctrl+Up}{Ctrl+Shift+Down 2"
				IF _arg2 = "Graphs Minus" THEN _arg2 = "Ctrl+Up}{Ctrl+Shift+Up"
				IF _arg2 = "Graphs Long Plus" THEN _arg2 = "Ctrl+Up}{Ctrl+Shift+Up 2"
				IF _arg2 = "Afters" THEN _arg2 = "Ctrl+Left}{Ctrl+Shift+Right"
				IF _arg2 = "Words" THEN _arg2 = "Ctrl+Right}{Ctrl+Shift+Left"
				IF _arg2 = "Letters" THEN _arg2 = "Shift+Left"
				IF _arg2 = "Rights" THEN _arg2 = "Shift+Right"
				SendKeys "{}{Left}" + _arg2 + "{Right}"
				IF _arg2 = "Alt+Space" XOR _arg2 = "Alt+-" THEN SendKeys "{Right}"
			}
		}

		COMMAND "<SendKeysSendSystemKeysBraceThen> <Key2> <Key2>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				IF _arg3 = "Min" XOR _arg3 = "Doc Min" THEN SendKeys "n{Left}"
				IF _arg3 = "Restore" XOR _arg3 = "Doc Restore" THEN SendKeys "r{Left}"
				IF _arg3 = "Max" XOR _arg3 = "Doc Max" THEN SendKeys "x{Left}"
				IF _arg3 = "Afters" XOR _arg3 = "Graphs" XOR _arg3 = "Graphs Long" THEN SendKeys "{}{Left}Right{Right}"
				IF _arg3 = "Words" THEN SendKeys "{}{Left}Left{Right}"
				IF _arg3 = "Lines Minus" THEN SendKeys "{}{Left}Home{Right}"
				IF _arg3 = "Control" THEN  _arg3 = "Ctrl"
				IF _arg3 = "Alternate" THEN  _arg3 = "Alt"
				IF _arg3 = "Escape" THEN  _arg3 = "Esc"
				IF _arg3 = "Paste" THEN  _arg3 = "Ctrl+v"
				IF _arg3 = "Copy" THEN  _arg3 = "Ctrl+c"
				IF _arg3 = "Cut" THEN  _arg3 = "Ctrl+x"
				IF _arg3 = "Open" THEN  _arg3 = "Ctrl+o"
				IF _arg3 = "Rename" THEN  _arg3 = "F2"
				IF _arg3 = "Find" THEN  _arg3 = "Ctrl+f"
				IF _arg3 = "Bold" THEN  _arg3 = "Ctrl+b"
				IF _arg3 = "Italic" THEN  _arg3 = "Ctrl+i"
				IF _arg3 = "Close" THEN  _arg3 = "Alt+F4"
				IF _arg3 = "Doc Close" THEN  _arg3 = "Ctrl+F4"
				IF _arg3 = "Undo" THEN  _arg3 = "Ctrl+z"
				IF _arg3 = "Min" THEN  _arg3 = "Alt+Space"
				IF _arg3 = "Restore" THEN  _arg3 = "Alt+Space"
				IF _arg3 = "Max" THEN  _arg3 = "Alt+Space"
				IF _arg3 = "Doc Min" THEN  _arg3 = "Alt+-"
				IF _arg3 = "Doc Restore" THEN  _arg3 = "Alt+-"
				IF _arg3 = "Doc Max" THEN  _arg3 = "Alt+-"
				IF _arg3 = "Before" THEN  _arg3 = "Ctrl+Left"
				IF _arg3 = "After" THEN  _arg3 = "Ctrl+Right"
				IF _arg3 = "Graph Plus" THEN  _arg3 = "Ctrl+Down"
				IF _arg3 = "Graph Minus" THEN  _arg3 = "Ctrl+Up"
				IF _arg3 = "Lines" THEN _arg3 = "Home}{Shift+End"
				IF _arg3 = "Lines Minus" THEN _arg3 = "Up}{Shift+End"
				IF _arg3 = "Graphs" THEN _arg3 = "Ctrl+Up}{Ctrl+Shift+Down"
				IF _arg3 = "Graphs Long" THEN _arg3 = "Ctrl+Up}{Ctrl+Shift+Down 2"
				IF _arg3 = "Graphs Minus" THEN _arg3 = "Ctrl+Up}{Ctrl+Shift+Up"
				IF _arg3 = "Graphs Long Plus" THEN _arg3 = "Ctrl+Up}{Ctrl+Shift+Up 2"
				IF _arg3 = "Afters" THEN _arg3 = "Ctrl+Left}{Ctrl+Shift+Right"
				IF _arg3 = "Words" THEN _arg3 = "Ctrl+Right}{Ctrl+Shift+Left"
				IF _arg3 = "Letters" THEN _arg3 = "Shift+Left"
				IF _arg3 = "Rights" THEN _arg3 = "Shift+Right"
				SendKeys "{}{Left}" + _arg3 + "{Right}"
				IF _arg3 = "Alt+Space" XOR _arg3 = "Alt+-" THEN SendKeys "{Right}"
			}
		}

		COMMAND "<SendKeysSendSystemKeysThen> <Mid> <1-10>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				SendKeys "" + _arg3 + ""
			}
		}

		COMMAND "<SendKeysSendSystemKeysThen> Key" {
			SCRIPT {
				IF _arg1 = "SendKeys" THEN SendKeys "SendKeys key$"
				IF _arg1 = "Then" THEN SendKeys "{End}SendKeys key$"
				IF _arg1 = "SendSystemKeys" THEN SendKeys "SendSystemKeys key$"
			}
		}

		COMMAND "<SendKeysSendSystemKeysThen> <Key4> Plus <AllKeys>" {
			SCRIPT {
				IF _arg1 = "Then" THEN 
				SendKeys "{End}Sendkeys """"{Left}"
				ELSE
				HeardWord _arg1
				END IF
				HeardWord _arg2, "Plus", _arg3
			}
		}

		COMMAND "<Val> <ParensArg1to10>" {
			SCRIPT {
				SendKeys "Val(){Left}"
				IF _arg2 = "Parens" THEN 
				SendKeys ""
				ELSE
				IF _arg2 = "Arg One" THEN  _arg2 = "_arg1"
				IF _arg2 = "Arg Two" THEN  _arg2 = "_arg2"
				IF _arg2 = "Arg Three" THEN  _arg2 = "_arg3"
				IF _arg2 = "Arg Four" THEN  _arg2 = "_arg4"
				IF _arg2 = "Arg Five" THEN  _arg2 = "_arg5"
				IF _arg2 = "Arg Six" THEN  _arg2 = "_arg6"
				IF _arg2 = "Arg Seven" THEN  _arg2 = "_arg7"
				IF _arg2 = "Arg Eight" THEN  _arg2 = "_arg8"
				IF _arg2 = "Arg Nine" THEN  _arg2 = "_arg9"
				IF _arg2 = "Arg Ten" THEN  _arg2 = "_arg10"
				END IF
			}
		}

		COMMAND "<SetMicrophone> <01OnOffToggleSurround>" {
			SCRIPT {
				SetMicrophone 0
				IF _arg2 = "Toggle" THEN SendKeys "SetMicrophone"
				IF _arg2 = "On" XOR _arg2 = "1" THEN SendKeys "SetMicrophone 1"
				IF _arg2 = "0" XOR _arg1 = "Off" THEN SendKeys "SetMicrophone 0"
				IF _arg2 = "Surround" THEN
				SendKeys "{Ctrl+Home}{Enter}{Up}SetMicrophone 0"
				Wait 500
				SendKeys "{Ctrl+End}{Enter}SetMicrophone 1"
				Wait 100
				SendKeys "{Home}{Backspace}"
				END IF
			}
		}

		COMMAND "<Plus> <AllKeys>" {
			SCRIPT {
				SendKeys "{Left}" 
				SendKeys "+" 
				SendKeys "" + _arg1 + "" 
				
			}
		}

		LIST "Plus" {
			"Plus"
		}
		COMMAND "<HeardWordSendKeysSendSystemKeys> <1-10>" {
			SCRIPT {
				SendKeys _arg1
				SendKeys " _arg"+ _arg2 +""
				
			}
		}

		COMMAND "<SendKeysSendSystemKeysThen> <MidBraces>" {
			SCRIPT {
				IF _arg2 = "Mid" THEN
				IF _arg1 = "SendKeys" THEN  SendKeys "SendKeys MID$(_arg,0,1){Left 5}"
				IF _arg1 = "Send System Keys" THEN  SendKeys "SendSystemKeys MID$(_arg,0,1){Left 5}"
				IF _arg1 = "Then" THEN SendKeys "{End}SendKeys MID$(_arg,0,1){Left 5}"
				END IF
				IF _arg2 = "Braces" THEN 
				IF _arg1 = "SendKeys" THEN SendKeys "SendKeys """"{Left}"
				IF _arg1 = "Send System Keys" THEN SendKeys "SendSystemKeys """"{Left}"
				SendKeys "{"
				SendKeys "}"
				SendKeys "{Left}"
				END IF
			}
		}

		COMMAND "<while> <1-10> <If> <1-10>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				HeardWord _arg3, _arg4
			}
		}

		COMMAND "<while> <1-10> <ScriptingCommands>" {
			SCRIPT {
				HeardWord "while",  _arg2
				HeardWord _arg3
			}
		}

		COMMAND "If Then Send" {
			KEYS {
				if _arg1 = "Name" then SendKeys = "address"{Left 27}
				{Shift+Left 4\}
			}
		}

		COMMAND "<Stay> <ANDORXOR> <1-20>" {
			SCRIPT {
				SendKeys "" + _arg2 + " _arg" + _arg3 + " = """"" 
				SendKeys "{Space}{Left 2}"
			}
		}

		COMMAND "<Then> <VarVariable> <1-20>" {
			SCRIPT {
				SendKeys "{End}"
				SendKeys "{Space}_var" + _arg3 + ""
				SendKeys "{Space}"
				SendKeys "={Space}""""{Left}"
			}
		}

		COMMAND "<Wait> <WaitNumbers> <ScriptingCommands>" {
			SCRIPT {
				HeardWord _arg1, _arg2
				SendKeys "{Enter}"
				HeardWord _arg3
			}
		}

		LIST "ScriptingCommands" {
			"Active Control Pick"
			"Active Menu Pick"
			"App Bring Up"
			"App Swap With"
			"Beep"
			"Button Click"
			"Clear Desktop"
			"Control Pick"
			"Drag To Point"
			"Dde Execute"
			"Dde Poke"
			"Dll Call"
			"Go To Sleep"
			"Heard Word"
			"Menu Pick"
			"Menu Cancel"
			"Message Box Confirm"
			"Mouse Grid"
			"Play Sound"
			"Remember Point"
			"Run Script File"
			"SendKeys"
			"Send System Keys"
			"Set Microphone"
			"Set Mouse Position"
			"Shell Execute"
			"TTS Play String"
			"Wake Up"
			"Wait For Window"
		}

		COMMAND "<Floating16-bit32-bitString> Short" {
			SCRIPT {
				HeardWord "\No-Space"
				IF _arg1 = "String" then SendKeys "$"
				IF _arg1 = "16-bit" then SendKeys "%"
				IF _arg1 = "32-bit" then SendKeys "&"
				IF _arg1 = "Floating" then SendKeys "#"
				SendKeys "{Space}"
			}
		}

		COMMAND "Menu Code" {
			SCRIPT {
				SendKeys "MENU """""
				SendKeys "{"
				SendKeys "{Enter}"
				SendKeys "}"
				SendKeys "{Up}{End}{Left 2}"
			}
		}

		COMMAND "State Code" {
			SCRIPT {
				SendKeys "{End}{Enter}{Tab}"
				SendKeys "STATE """""
				SendKeys "{"
				SendKeys "{Enter}"
				SendKeys "}"
				SendKeys "{Up}{End}{Left 2}"
			}
		}

		COMMAND "Command Code" {
			SCRIPT {
				SendKeys "COMMAND """""
				SendKeys "{"
				SendKeys "{Enter}"
				SendKeys "}"
				SendKeys "{Up}{End}{Left 2}"
			}
		}

		COMMAND "Script Code" {
			SCRIPT {
				SendKeys "{End}{Enter}{Tab}"
				SendKeys "SCRIPT {"
				SendKeys "{Enter}"
				SendKeys "}"
				SendKeys "{Up}{End}{Enter}{Tab}"
			}
		}

		COMMAND "UC Code" {
			SCRIPT {
				SendKeys "{End}{Enter}{Tab}"
				SendKeys "SCRIPT {"
				SendKeys "{Enter}"
				SendKeys "}"
				SendKeys "{Up}{End}{Enter}{Tab}"
				SendKeys "DllCall ""UttC.dll"",""Command"","""""
				SendKeys "{Left}"
			}
		}

		COMMAND "UC Call" {
			SCRIPT {
				SendKeys "DllCall ""UttC.dll"",""Command"","""""
				SendKeys "{Left}"
			}
		}

		COMMAND "List Code" {
			SCRIPT {
				SendKeys "LIST """""
				SendKeys "{"
				SendKeys "{Enter}"
				SendKeys "}"
				SendKeys "{Up}{End}{Left 2}"
			}
		}

		COMMAND "<AnotherInsert> Command" {
			SCRIPT {
				IF _arg1 = "Insert" THEN SendKeys "{Home}{Enter}{Up}"
				IF _arg1 = "Another" THEN SendKeys "{End}{Down 2}{Enter}"
				SendKeys "COMMAND """""
				SendKeys "{"
				SendKeys "{Enter}{Tab}"
				SendKeys "SCRIPT {"
				SendKeys "{Enter}"
				SendKeys "}"
				SendKeys "{Enter}{Backspace}"
				SendKeys "}"
				SendKeys "{Up 3}{End}{Left 2}"
			}
		}

		COMMAND "<AnotherInsert> List" {
			SCRIPT {
				IF _arg1 = "Insert" THEN SendKeys "{Home}{Enter}{Up}"
				IF _arg1 = "Another" THEN SendKeys "{End}{Down}{Enter}"
				SendKeys "LIST """
				SendKeys """"
				SendKeys " {"
				SendKeys "{Enter}"
				SendKeys """""{Enter}"
				SendKeys "}"
				SendKeys "{Up}{Left}{Tab}{Up}{End}{Left 3}"
			}
		}

		COMMAND "<AnotherInsert> Command Paste" {
			SCRIPT {
				IF _arg1 = "Insert" THEN SendKeys "{Home}{Enter}{Up}"
				IF _arg1 = "Another" THEN SendKeys "{End}{Enter}"
				SendKeys "{Home}{Tab}{Tab}COMMAND """""
				SendKeys "{"
				SendKeys "{Enter}{Home}{Tab}{Tab}{Tab}"
				SendKeys "SCRIPT {"
				SendKeys "{Enter}{Tab}{Enter}{Home}{Tab}{Tab}{Tab}"
				SendKeys "}"
				SendKeys "{Enter}{Home}{Tab}{Tab}"
				SendKeys "}"
				SendKeys "{Up 4}{End}{Left 2}"
				SendKeys "{Ctrl+v}"
				SendKeys "{Down 2}"
			}
		}

		COMMAND "<AnotherInsert> List Paste" {
			SCRIPT {
				IF _arg1 = "Insert" THEN SendKeys "{Home}{Enter}{Up}"
				IF _arg1 = "Another" THEN SendKeys "{End}{Enter}"
				SendKeys "{Home}{Tab}{Tab}LIST """
				SendKeys """"
				SendKeys " {"
				SendKeys "{Enter}"
				SendKeys """""{Enter}"
				SendKeys "}"
				SendKeys "{Up}{Left}{Tab}{Up}{End}{Left 3}"
				SendKeys "{Ctrl+v}"
				SendKeys "{Down}{Left}"
			}
		}
		COMMAND "<Call> Call Paste" {
			SCRIPT {
				SendKeys "DllCall"
				SendKeys""""
				SendKeys "UttC.dll"
				SendKeys""""
				SendKeys ","
				SendKeys""""
				IF _arg1 = "This" THEN SendKeys "ThisCommand"
				SendKeys""""
				SendKeys ", _arg1"
				SendKeys "{Shift+Left}"
			}
		}

		COMMAND "<FileWorkspace> <1-10>" {
			SCRIPT {
				IF _arg1 = "File" THEN SendKeys "{Alt+f}f"
				IF _arg1 = "Workspace" THEN SendKeys "{Alt+f}r"
				SendKeys "{Right}"
				loop& = Val(_arg2)- 1
				while ( loop& )
				SendKeys "{Down}"
				loop& = loop& - 1
				wend
				Wait 1500
				SendKeys "{Enter}"
			}
		}

		COMMAND "<Add> <1-40plusminus>" {
			SCRIPT {
				SendKeys "{Left}{Space}" + _arg2 + "{Right}"
			}
		}

		LIST "1to20" {
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
			"8"
			"9"
			"10"
			"11"
			"12"
			"13"
			"14"
			"15"
			"16"
			"17"
			"18"
			"19"
			"20"
		}

		LIST "Key2" {
			"Backspace"
			"Del"
			"PgDn"
			"PgUp"
			"Enter"
			"Home"
			"End"
			"Tab"
			"Space"
			"Up"
			"Down"
			"Left"
			"Right"
			"Esc"
			"Escape"
			"Alt"
			"Alternate"
			"Ctrl"
			"Control"
			"Shift"
			"F1"
			"F2"
			"F3"
			"F4"
			"F5"
			"F6"
			"F7"
			"F8"
			"F9"
			"F10"
			"F11"
			"F12"
			"NumKey"
			"Copy"
			"Cut"
			"Paste"
			"Open"
			"Rename"
			"Find"
			"Bold"
			"Italic"
			"Close"
			"Doc Close"
			"Undo"
			"Min"
			"Restore"
			"Max"
			"Doc Min"
			"Doc Restore"
			"Doc Max"
			"Before"
			"After"
			"Graph Plus"
			"Graph Minus"
			"Lines"
			"Lines Minus"
			"Graphs"
			"Graphs Long"
			"Graphs Minus"
			"Graphs Long Minus"
			"Afters"
			"Words"
			"Letters"
			"Rights"
		}

		LIST "Key3" {
			"Up"
			"Down"
			"Right"
			"Left"
			"Backspace"
			"Del"
			"PgDn"
			"PgUp"
			"Enter"
			"Tab"
			"Space"
		}

		LIST "Key4" {
			"Escape"
			"Esc"
			"Enter"
			"Tab"
			"Up"
			"Down"
			"Home"
			"End"
			"Alt"
			"Alternate"
			"Shift"
			"Left"
			"Right"
			"Ctrl"
			"Control"
		}

		LIST "ANDORXOR" {
			"AND"
			"OR"
			"XOR"
		}

		LIST "VarVariable" {
			"Var"
			"Variable"
		}

		LIST "SetMousePositionMousePosition" {
			"Set Mouse Position"
			"Mouse Position"
		}

		LIST "SetWinHelpWinHelp" {
			"Set WinHelp"
			"WinHelp"
		}

		LIST "MinimizedMaximizedNormalFocus" {
			"Minimized"
			"Minimized Focus"
			"Minimized No Focus"
			"Maximized"
			"Maximized Focus"
			"Normal"
			"Normal Focus"
			"Normal No Focus"
			"Max"
			"Max Focus"
		}

		LIST "ScriptNewScript" {
			"Script"
			"New Script"
			"New"
		}

		LIST "WaitNumbers" {
			"1"
			"2"
			"3"
			"4"
			"5"
			"Hundred"
			"One Hundred"
			"6"
			"7"
			"8"
			"9"
			"10"
			"11"
			"12"
			"13"
			"14"
			"15"
			"16"
			"17"
			"18"
			"19"
			"20"
			"21"
			"22"
			"23"
			"24"
			"25"
			"26"
			"27"
			"28"
			"29"
			"30"
			"31"
			"32"
			"33"
			"34"
			"35"
			"36"
			"37"
			"38"
			"39"
			"40"
			"41"
			"42"
			"43"
			"44"
			"45"
			"46"
			"47"
			"48"
			"49"
			"50"
			"51"
			"52"
			"53"
			"54"
			"55"
			"56"
			"57"
			"58"
			"59"
			"60"
			"61"
			"62"
			"63"
			"64"
			"65"
			"66"
			"67"
			"68"
			"69"
			"70"
			"71"
			"72"
			"73"
			"74"
			"75"
			"76"
			"77"
			"78"
			"79"
			"80"
			"81"
			"82"
			"83"
			"84"
			"85"
			"86"
			"87"
			"88"
			"89"
			"90"
			"91"
			"92"
			"93"
			"94"
			"95"
			"96"
			"97"
			"98"
			"99"
			"100"
			"200"
			"300"
			"400"
			"500"
			"600"
			"700"
			"800"
			"900"
			"1000"
			"1500"
			"2000"
			"3000"
			"4000"
			"5000"
			"6000"
			"7000"
			"8000"
			"9000"
		}

		LIST "AnotherInsert" {
			"Another"
			"Insert"
		}

		LIST "AnotherInsertLastNewNextThen" {
			"Another"
			"Insert"
			"Last"
			"New"
			"Next"
			"Then"
		}

		LIST "AnotherInsertLastNewNext" {
			"Another"
			"Insert"
			"Last"
			"New"
			"Next"
			"Then"
		}

		LIST "AnotherInsertLastNewNextStay" {
			"Another"
			"Insert"
			"Last"
			"New"
			"Next"
			"Stay"
		}

		LIST "SingleDouble12" {
			"Single"
			"Double"
			"1"
			"2"
		}

		LIST "LeftRightMiddle124" {
			"Left"
			"Right"
			"Middle"
			"1"
			"2"
			"4"
		}

		LIST "MousePositionCategories" {
			"Screen"
			"Window"
			"Pointer"
			"Screen Map"
			"Window Map"
			"Client"
			"Client Map"
			"0"
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
		}

		LIST "OffOnWindow012" {
			"Off"
			"On"
			"Window"
			"0"
			"1"
			"2"
		}

		LIST "MouseGrid" {
			"Mouse Grid"
			"MouseGrid"
		}

		LIST "ArithmeticOperators" {
			"Plus"
			"+"
			"Minus"
			"-"
			"Times"
			"Star"
			"*"
			"Divided by"
			"Divide by"
			"Slash"
			"/"
		}

		LIST "ArgArgumentVariable" {
			"Argument"
			"Arg"
			"Variable"
		}

		LIST "Add" {
			"Add"
		}

		LIST "Variable" {
			"Variable"
		}

		LIST "AllScriptWords" {
			"AppBringUp"
			"AppSwapWith"
			"ButtonClick"
			"ControlPick"
			"DdeExecute"
			"DdePoke"
			"DllCall"
			"HeardWord"
			"MenuPick"
			"MsgBoxConfirm"
			"MouseGrid"
			"PlaySound"
			"RunScriptFile"
			"SendKeys"
			"Send System Keys"
			"SetMicrophone"
			"SetMousePosition"
			"ShellExecute"
			"TTS Play String"
			"Wait"
			"WinHelp"
			"Then"
			"Char"
			"Floating"
			"Integer"
			"Hex"
			"In String"
			"Length"
			"Lower"
			"Mid"
			"Integer to String"
			"String"
			"String Repeat"
			"Upper"
			"Value"
			"String to Integer"
		}

		LIST "MicrophoneSetMicrophone" {
			"Microphone"
			"Set Microphone"
		}

		LIST "01OnOffToggleSurround" {
			"0"
			"1"
			"On"
			"Off"
			"Toggle"
			"Surround"
		}

		LIST "FlowControlStatements" {
			"GOTO"
			"WHILE"
			"WHEN"
			"LOOP"
			"END"
			"END IF"
			"ELSE"
			"DO UNTIL"
			"DO WHILE"
			"LOOP UNTIL"
			"LOOP WHILE"
		}

		LIST "DownUp" {
			"Down"
			"Up"
		}

		LIST "HeardWord" {
			"HeardWord"
		}

		LIST "1-10BFQT" {
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
			"8"
			"9"
			"10"
			"by"
			"file"
			"Quotes"
			"This"
		}

		LIST "FindAfterBefore" {
			"Find"
			"After"
			"Before"
		}

		LIST "Val" {
			"Val"
		}

		LIST "Arg" {
			"Arg"
		}

		LIST "a-z" {
			"a"
			"b"
			"c"
			"d"
			"e"
			"f"
			"g"
			"h"
			"i"
			"j"
			"k"
			"l"
			"m"
			"n"
			"o"
			"p"
			"q"
			"r"
			"s"
			"t"
			"u"
			"v"
			"w"
			"x"
			"y"
			"z"
		}

		LIST "AllKeys" {
			"PgUp"
			"PgDn"
			"F1"
			"F2"
			"F3"
			"F4"
			"F5"
			"F6"
			"F7"
			"F8"
			"F9"
			"F10"
			"F11"
			"F12"
			"\""
			"["
			"]"
			"<"
			">"
			"{"
			"}"
			";"
			":"
			"0"
			"+"
			"-"
			"Enter"
			"Tab"
			"Up"
			"Down"
			"Home"
			"End"
			"Alt"
			"Alternate"
			"Shift"
			"Esc"
			"Escape"
			"Left"
			"Right"
			"Ctrl"
			"Control"
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
			"8"
			"9"
			"10"
			"a"
			"b"
			"c"
			"d"
			"e"
			"f"
			"g"
			"h"
			"i"
			"j"
			"k"
			"l"
			"m"
			"n"
			"o"
			"p"
			"q"
			"r"
			"s"
			"t"
			"u"
			"v"
			"w"
			"x"
			"y"
			"z"
		}

		LIST "SendKeysSendSystemKeysThen" {
			"SendKeys"
			"Send System Keys"
			"Then"
		}

		LIST "SendKeysSendSystemKeysBraceThen" {
			"SendKeys"
			"Send System Keys"
			"Then"
			"Brace"
		}

		LIST "Argument" {
			"Argument"
		}

		LIST "Wait" {
			"Wait"
		}

		LIST "Then" {
			"Then"
		}

		LIST "Shell" {
			"Shell"
		}

		LIST "System" {
			"System"
		}

		LIST "1-20" {
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
			"8"
			"9"
			"10"
			"11"
			"12"
			"13"
			"14"
			"15"
			"16"
			"17"
			"18"
			"19"
			"20"
		}

		LIST "Script" {
			"Script"
		}

		LIST "If" {
			"If"
		}

		LIST "Find" {
			"Find"
		}

		LIST "Equals" {
			"Equals"
		}

		LIST "END" {
			"END"
		}

		LIST "Else" {
			"Else"
		}

		LIST "Button" {
			"Button"
		}

		LIST "Argument " {
			"Argument"
		}

		LIST "Another" {
			"Another"
		}

		LIST "1-40plusminus" {
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
			"8"
			"9"
			"10"
			"11"
			"12"
			"13"
			"14"
			"15"
			"16"
			"17"
			"18"
			"19"
			"20"
			"21"
			"22"
			"23"
			"24"
			"25"
			"26"
			"27"
			"28"
			"29"
			"30"
			"31"
			"32"
			"33"
			"34"
			"35"
			"36"
			"37"
			"38"
			"39"
			"40"
			"+"
			"-"
		}

		LIST "1-10" {
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
			"8"
			"9"
			"10"
		}

		LIST "Mid" {
			"Mid"
		}

		LIST "MidBraces" {
			"Mid"
			"Braces"
		}

		LIST "FloatingIntegerStringHexValueLengthMid..." {
			"Character"
			"Floating"
			"Integer"
			"Hex"
			"In String"
			"Length"
			"Lower Case"
			"Mid"
			"Integer to String"
			"String"
			"String Repeat"
			"ANSI Repeat"
			"Upper Case"
			"Value"
			"String to Integer"
		}

		LIST "NotEqualMoreELessE" {
			"Not Equal"
			"Greater Equal"
			"Less Equal"
		}

		LIST "SpaceSpaces" {
			"Space"
			"Spaces"
		}

		LIST "EqualsNotEGreaterELessE" {
			"Not Equal"
			"Greater Equal"
			"Less Equal"
			"Equals"
		}

		LIST "EqualsNotEqualGreaterELessE" {
			"Not Equal"
			"Greater Equal"
			"Less Equal"
			"Equals"
		}

		LIST "Floating16-bit32-bitString" {
			"Floating"
			"16-bit"
			"32-bit"
			"String"
		}

		LIST "AlternateControlShift" {
			"Alternate"
			"Control"
			"Shift"
			"Alt"
			"Ctrl"
		}

		LIST "1-100" {
			"One Hundred"
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
			"8"
			"9"
			"10"
			"11"
			"12"
			"13"
			"14"
			"15"
			"16"
			"17"
			"18"
			"19"
			"20"
			"21"
			"22"
			"23"
			"24"
			"25"
			"26"
			"27"
			"28"
			"29"
			"30"
			"31"
			"32"
			"33"
			"34"
			"35"
			"36"
			"37"
			"38"
			"39"
			"40"
			"41"
			"42"
			"43"
			"44"
			"45"
			"46"
			"47"
			"48"
			"49"
			"50"
			"51"
			"52"
			"53"
			"54"
			"55"
			"56"
			"57"
			"58"
			"59"
			"60"
			"61"
			"62"
			"63"
			"64"
			"65"
			"66"
			"67"
			"68"
			"69"
			"70"
			"71"
			"72"
			"73"
			"74"
			"75"
			"76"
			"77"
			"78"
			"79"
			"80"
			"81"
			"82"
			"83"
			"84"
			"85"
			"86"
			"87"
			"88"
			"89"
			"90"
			"91"
			"92"
			"93"
			"94"
			"95"
			"96"
			"97"
			"98"
			"99"
			"100"
		}

		LIST "0-20" {
			"0"
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
			"8"
			"9"
			"10"
			"11"
			"12"
			"13"
			"14"
			"15"
			"16"
			"17"
			"18"
			"19"
			"20"
		}

		LIST "1-7" {
			"1"
			"2"
			"3"
			"4"
			"5"
			"6"
			"7"
		}

		LIST "while" {
			"while"
		}

		LIST "HeardWordSendKeysSendSystemKeys" {
			"HeardWord"
			"SendKeys"
			"SendSystemKeys"
		}

		LIST "SendKeysSendSystemKeys" {
			"SendKeys"
			"SendSystemKeys"
		}

		LIST "ScriptingFlow" {
			"App Bring Up"
			"App Swap With"
			"Active Control Pick"
			"Active Menu Pick"
			"Add MouseGrid"
			"Basic Loop"
			"Button Click"
			"Control Pick"
			"Dde Execute"
			"Dde Poke"
			"Dll Call"
			"Go to"
			"Heard Word"
			"Loop SendKeys"
			"Loop HeardWord"
			"Menu Cancel"
			"Menu Pick"
			"Message Box Confirm"
			"Play Sound"
			"Put MouseGrid"
			"Run Script File"
			"Send Keys"
			"SendKeys"
			"Send System Keys"
			"Set Button"
			"Set Microphone"
			"Microphone 0"
			"Microphone 1"
			"Microphone On"
			"Microphone Off"
			"Microphone Toggle"
			"Microphone Surround"
			"Set Mouse Position"
			"Shell Execute"
			"TTS Play String"
			"Wait"
			"Win Help"
			"Variable 1"
			"Variable 2"
			"Variable 3"
			"Variable 4"
			"Variable 5"
			"Variable 6"
			"Variable 7"
			"Variable 8"
			"Variable 9"
			"Variable 10"
			"List Command"
			"While 1"
			"While 2"
			"While 3"
			"Loop 4"
			"Loop 5"
			"Loop 6"
			"Loop 7"
			"Loop 8"
			"Loop 9"
			"Loop 10"
			"GOTO"
			"WHILE"
			"WHEN"
			"LOOP"
			"END"
			"END IF"
			"ELSE"
			"DO UNTIL"
			"DO WHILE"
			"LOOP UNTIL"
			"LOOP WHILE"
		}

		LIST "This" {
			"This"
		}

		LIST "SendKeysSendSystemKeysHeardWordGoTo" {
			"SendKeys"
			"Heard Word"
			"Go to"
			"Send System Keys"
		}

		LIST "ParensArg1to10" {
			"Parens"
			"Arg One"
			"Arg Two"
			"Arg Three"
			"Arg Four"
			"Arg Five"
			"Arg Six"
			"Arg Seven"
			"Arg Eight"
			"Arg Nine"
			"Arg Ten"
		}

		LIST "SetMicrophone" {
			"Set Microphone"
		}

		LIST "Call" {
			"This"
		}

		LIST "FileWorkspace" {
			"File"
			"Workspace"
		}
	}
}
